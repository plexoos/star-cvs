#!/usr/bin/env perl
Import qw ( env INCLUDE LIB BIN BUILD OBJ);
(my $build = $OBJ) =~ s/\#//g;
$build =~ s/\\/\//g;
(my $obj_dir = DirPath '.') =~ s/\\/\//g;
(my $Dir = $obj_dir) =~ s/$build\///g;
my $ObjDir = "#" . $obj_dir; 
my $STAR_SYS = $env->{ENV}->{STAR_SYS};
my $pkg = "g2Root";
my $pkg2 =  "gh2root";
my $PKG  = $pkg . $env->{SUFEXE};
my $SO_PKG = $PKG . "." . $env->{SUFSOLIB};
my $LIBPKG = $PKG . "." . $env->{SUFLIB};
my @h_files = script::find_hfiles($Dir);
my $FC = $env->{FC};
my $FCPATH = $env->{FCPATH};
my $FFLAGS = $env->{FFLAGS};         #print "FFLAGS = $FFLAGS\n";
my $FPPFLAGS = $env->{FPPFLAGS};
my $CPPFLAGS = $env->{CPPFLAGS};
my $CXXFLAGS = $env->{CXXFLAGS};
my $FLIBS = $env->{FLIBS};           #print "FLIBS = $FLIBS\n";
my $PGI = $env->{ENV}->{PGI};
my $PGILIBS = "";
my $CLIBS = $env->{CLIBS};           #print "CLIBS = $CLIBS\n";
#print "build $pkg with cons\n";
my $FC        = $env->{FC};          #print "FC = $FC\n";
my $FEXTEND   = $env->{FEXTEND};     #print "FEXTEND = $FEXTEND\n";
my $LD        = $env->{LD};          #print "LD = $LD\n";
my $LDFLAGS   = $env->{LDFLAGS};     
#$LDFLAGS   .=  " -Wl,--no-undefined -Wl,--as-needed";
#print "LDFLAGS = $LDFLAGS\n";
my $CERNLIBS  = $env->{CERNLIBS};    
#my $CERNLIBS = "-lminicern";
#print "CERNLIBS = $CERNLIBS\n";

if ($FC eq 'pgf77') { 
#  $CERNLIBS = `cernlib kernlib`;
#  chomp($CERNLIBS);
  $FC       = $env->{G77}; #print "set FC => $FC ==============================\n" if $param::debug;
  $FFLAGS   = $env->{G77FLAGS}; 
  $FEXTEND  = $env->{G77EXTEND};
}
my $LD        = $env->{LD}; #!
#if ($LD eq 'g++') {
#  $LD = "gcc";
#}
#if ($STAR_SYS !~ /x8664/ and ($LD eq $env->{CC} or $LD eq $env->{CXX})) {$LD = $FC;}
#if ($LD eq $env->{CC} or $LD eq $env->{CXX}) {$LD = $FC;}
#if ($LD eq 'gcc') {$LDFLAGS = "-Wl,-Bstatic";}
my $Libraries = $CERNLIBS .  " " . $FLIBS . " " . $CLIBS;
#if ($FC eq 'g77' or $FC eq 'gfortran') { 
#  if ($FC eq 'g77' and $env->{CXX_VERSION} >= 3) {$Libraries .= " -lfrtbegin";}
#  $Libraries .= " " . $env->{LIBG2C};
#}
#if ($FC eq 'gfortran') { 
#  my $libgfortranbegin = `$FC -print-file-name=libgfortranbegin.a`; chomp($libgfortranbegin); 
#  $Libraries .= " " . $libgfortranbegin;
#}
#print "Libraries = $Libraries\n";
#if ($FC eq 'ifort') { 
#  my $LIBIFCPATH    = `which ifort | sed -e 's|bin/ifort|lib|'`; chomp($LIBIFCPATH);
#  $Libraries .= " " . $LIBIFCPATH . "/for_main.o"; 
#}
      if (! ($env->{CXX_MAJOR} > 4 or $env->{CXX_MAJOR} == 4 and $env-{CXX_MINOR} >= 6)) {$CXXFLAGS .= " -fno-exceptions";}

$env2 = $env->clone('FC'           => $FC,
		    'LD'           => $FC,
		    'LDFLAGS'      => $LDFLAGS,
		    'FPPFLAGS'     => '',
		    'FFLAGS'       => $LDFLAGS,
		    'FCPATH'       => '',
		    'FEXTEND'      => "",
		    'CPPFLAGS'     => $CPPFLAGS,
		    'CXXFLAGS'     => $CXXFLAGS,
		    'ObjDir'       => $obj_dir,
		    'Libraries'    => $Libraries
		   );
my @srcc = script::find_sources($Dir);# print "src = @srcc\n";
my @src = ();
my @gh  = ();
foreach my $s (@srcc) {
  next if $s =~ /^cmt/;
  if ($s =~ /$pkg2/) {push @gh, $s;}
  else                 {push @src, $s;}
}
if ($#src > -1) {
  script::Keep $pkg;
  Program      $env2 $pkg, @src;
  Install $env2 $BIN, $pkg;
}
if ($#gh > -1) {
  script::Keep $pkg2;
  Program      $env2 $pkg2, @gh;
  Install $env2 $BIN, $pkg2;
}  
