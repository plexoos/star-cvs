      REPLACE [GeV] with [*1.0E+0];
      REPLACE [MeV] with [*1.0E-3];
      REPLACE [keV] with [*1.0E-6];

      REPLACE [SET EmCuts(#)] with [
      IF ( #1_Version .gt. 0 ) THEN
      Call GsTPar( ag_imed, 'CUTGAM', #1_CUTGAM )
      Call GsTPar( ag_imed, 'CUTELE', #1_CUTELE )
      Call GsTPar( ag_imed, 'CUTHAD', #1_CUTHAD )
      Call GsTPar( ag_imed, 'CUTNEU', #1_CUTNEU )
      Call GsTPar( ag_imed, 'CUTMUO', #1_CUTMUO )
      Call GsTPar( ag_imed, 'DCUTE', #1_DCUTE )
      Call GsTPar( ag_imed, 'DCUTM', #1_DCUTM )
      Call GsTPar( ag_imed, 'BCUTE', #1_BCUTE )
      Call GsTPar( ag_imed, 'BCUTM', #1_BCUTM )
      ENDIF
      ];

      MODULE ECALGEO6    is the EM EndCap Calorimeter GEOmetry
      Created    11/13/2009
      Author Jason Webb, Hal Spinka, Ilya Selyuzhenkov, Alice Bridgeman, Keith Krueger,
             Michael Betancourt
      +CDE,agecom.
      +CDE,gconst.
      +CDE,gcunit.
      CONTENT EAGA,EALP,ECAL,ECHC,ECVO,ECGH,EFLP,EHMS,ELED,EMGT,EMOD,EPER,EPSB,ERAD,
            ERCM,ERSM,ESHM,ESEC,ESCI,ESPL,ESSP,EMSS,ETAR,EXSG,EXPS,EFLS,EBLS
      STRUCTURE EMCG { Version,int onoff,int fillmode}
      STRUCTURE EMCS { Version,Type,zorg,zend,EtaMin,EtaMax,PhiMin,PhiMax,Offset,
            Nsupsec,Nsector,Nsection,Nslices,Front,AlinCell,Frplast,Bkplast,PbPlate,LamPlate,
            BckPlate,Hub,Rmshift,SMShift,GapPlt,GapCel,GapSMD,SMDcentr,TieRod(2),Bckfrnt,GapHalf,
            Cover,Rtie,slop}
      STRUCTURE EETR { Type,Etagr,Phigr,Neta,EtaBin(13)}
      STRUCTURE ESEC { Isect,FPlmat,Cell,Scint,Nlayer,deltaz,Jiggle(18)}
      STRUCTURE EMXG { Version,Sapex,Sbase,Rin,Rout,F4}
      STRUCTURE EXSE { Jsect,Zshift,Sectype(6)}
      STRUCTURE ESMD { Version,front_layer,back_layer,spacer_layer,base,apex}
      STRUCTURE ECUT { Version,Absorber,Sensitive,Blah}
      STRUCTURE EABS { Version,CUTGAM,CUTELE,CUTNEU,CUTHAD,CUTMUO,DCUTE,DCUTM,BCUTE,
            BCUTM}
      STRUCTURE ESEN { Version,CUTGAM,CUTELE,CUTNEU,CUTHAD,CUTMUO,DCUTE,DCUTM,BCUTE,
            BCUTM}
      INTEGER I_section,J_section,Ie,is,isec,istrip,Nstr,Type,ii,jj,cut,fsect,lsect,
            ihalf,filled,i,j,k,i_sector

      REAL center,Plate,Cell,G10,halfi,tan_low,tan_upp,RBot,Rtop,Deta,sq2,sq3,dup,
            dd,d2,d3,rshift,dphi,radiator

      REAL maxcnt,msecwd,mxgten,curr,Secwid,Section,curcl,EtaTop,EtaBot,zwidth,zslice,
            Gap,megatile,xleft,xright,yleft,yright,current,rth,length,p,xc,yc,xx,yy,rdel,
            dxy,ddn,ddup

      REAL myPhi

      INTEGER N

      PARAMETER (N = 12)
      !* Lambda function tanf
      real etax ! arguement for etax
      real tanf
      tanf(etax) = tan(2*atan(exp(-etax)))
      FILL EMCG		! EM EndCAp Calorimeter basic data
      Version = 6.1 !  Geometry version
      OnOff = 3 !  Configurations 0-no, 1-west 2-east 3-both
      FillMode = 3 !  sectors fill mode
      ENDFILL
      FILL EMCS		! EM Endcap Calorimeter geometry
      Version = 1 !  Versioning
      Type = 1 !  =1 endcap, =2 fpd edcap prototype
      ZOrg = 268.763 !  calorimeter origin in z
      ZEnd = 310.007 !  Calorimeter end in z
      EtaMin = 1.086 !  upper feducial eta cut
      EtaMax = 2.000 !  lower fiducial eta cut
      PhiMin = -90 !  Min phi
      PhiMax = 90 !  Max phi
      Offset = 0.0 !  offset in x
      Nsupsec = 6 !  Number of azimuthal supersectors
      Nsector = 30 !  Number of azimutal sectors (Phi granularity)
      Nslices = 5 !  number of phi slices in supersector
      Nsection = 4 !  Number of readout sections
      Front = 0.953 !  thickness of the front AL plates
      AlinCell = 0.02 !  Aluminim plate in cell
      Frplast = 0.015 !  Front plastic in megatile
      Bkplast = 0.155 !  Fiber routing guides and back plastic
      Pbplate = 0.457 !  Lead radiator thickness
      LamPlate = 0.05 !  Laminated SS plate thickness
      BckPlate = 3.175 !  Back SS plate thickness
      Hub = 3.81 !  thickness of EndCap hub
      Rmshift = 2.121 !  radial shift of module
      smshift = 0.12 !  radial shift of steel support walls
      GapPlt = 0.3/2 !  HALF of the inter-plate gap in phi
      GapCel = 0.03/2 !  HALF of the radial inter-cell gap
      GapSMD = 3.400 !  space for SMD detector                << version 2 -- 3.600 >>
      SMDcentr = 279.542 !  SMD position
      TieRod  = {  160.,   195} !   Radial position of tie rods 
      Bckfrnt = 306.832 !  Backplate front Z
      GapHalf = 0.4 !  1/2 Gap between halves of endcap wheel
      Cover = 0.075 !  Cover of wheel half
      Rtie = 1.0425 !  Radius of tie rod
      Slop = 0.1400 !  Added to cell containing radiator 6 (formerly hardcoded in geom)
      ENDFILL
      FILL EMCS		! EM Endcap Calorimeter geometry
      Version = 2 !  Versioning
      Type = 1 !  =1 endcap, =2 fpd edcap prototype
      ZOrg = 268.763 !  calorimeter origin in z
      ZEnd = 310.007 !  Calorimeter end in z
      EtaMin = 1.086 !  upper feducial eta cut
      EtaMax = 2.000 !  lower fiducial eta cut
      PhiMin = -90 !  Min phi
      PhiMax = 90 !  Max phi
      Offset = 0.0 !  offset in x
      Nsupsec = 6 !  Number of azimuthal supersectors
      Nsector = 30 !  Number of azimutal sectors (Phi granularity)
      Nslices = 5 !  number of phi slices in supersector
      Nsection = 4 !  Number of readout sections
      Front = 0.953 !  thickness of the front AL plates
      AlinCell = 0.02 !  Aluminim plate in cell
      Frplast = 0.015 !  Front plastic in megatile
      Bkplast = 0.155 !  Fiber routing guides and back plastic
      Pbplate = 0.457 !  Lead radiator thickness
      LamPlate = 0.05 !  Laminated SS plate thickness
      BckPlate = 3.175 !  Back SS plate thickness
      Hub = 3.81 !  thickness of EndCap hub
      Rmshift = 2.121 !  radial shift of module
      smshift = 0.12 !  radial shift of steel support walls
      GapPlt = 0.3/2 !  HALF of the inter-plate gap in phi
      GapCel = 0.03/2 !  HALF of the radial inter-cell gap
      GapSMD = 3.600 !  space for SMD detector              (* from master_geom_bmp.xls *)
      SMDcentr = 279.542 !  SMD position
      TieRod  = {  160.,   195} !   Radial position of tie rods 
      Bckfrnt = 306.832 !  Backplate front Z
      GapHalf = 0.4 !  1/2 Gap between halves of endcap wheel
      Cover = 0.075 !  Cover of wheel half
      Rtie = 0.75 !  Radius of tie rod
      Slop = 0.0000 !  Added to cell containing radiator 6 (formerly hardcoded in geom)
      ENDFILL
      FILL ESMD		! shower maximum detector information
      Version = 1 !  versioning information
      front_layer = 0.161 !  thickness of front layer
      back_layer = 0.210 !  thickness of back layer
      base = 1.0 !  base of the SMD strip
      apex = 0.7 !  apex of the SMD strip
      spacer_layer = 1.2 !  spacer layer
      ENDFILL
      FILL EETR		! Eta and Phi grid values
      Type = 1 !  =1 endcap, =2 fpd
      EtaGr = 1.0536 !  eta_top/eta_bot tower granularity
      PhiGr = 0.0981747 !  Phi granularity (radians)
      NEta = 12 !  Eta granularity
      EtaBin  = {     2.0,  1.9008,  1.8065,  1.7168,  1.6317, 
                   1.5507,  1.4738,  1.4007,  1.3312,  1.2651, 
                   1.2023,  1.1427,   1.086} !   Eta rapidities 
      ENDFILL
      FILL ESEC		! Preshower 1 / Radiator 1
      ISect = 1 !  Section number
      Nlayer = 1 !  Number of Sci layers along z
      Cell = 1.505 !  Cell full width in z
      Scint = 0.475 !  Sci layer thickness (4.75mm Bicron)
      deltaz = -0.014 !  Amount to shift section in z to align with as-built numbers
      Jiggle  = {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
                   0,  0,  0,  0,  0,  0,  0} !   Degrees to shift EPER in each layer 
      ENDFILL
      FILL ESEC		! Preshower 2 / Radiator 2
      ISect = 2 !  Section number
      Nlayer = 1 !  Number of Sci layers along z
      Cell = 1.505 !  Cell full width in z
      Scint = 0.475 !  Sci layer thickness (4.75mm Bicron)
      deltaz = -0.0182 !  Amount to shift section in z to align with as-built numbers
      Jiggle  = {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
                   0,  0,  0,  0,  0,  0,  0} !   Degrees to shift EPER in each layer 
      ENDFILL
      FILL ESEC		! Megatiles 3-6 / Radiators 3-5
      ISect = 3 !  Section number
      Nlayer = 4 !  Number of Sci layers along z
      Cell = 1.405 !  Cell full width in z
      Scint = 0.4 !  Sci layer thickness
      deltaz = -0.0145 !  Amount to shift section in z to align with as-built numbers
      Jiggle  = {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
                   0,  0,  0,  0,  0,  0,  0} !   Degrees to shift EPER in each layer 
      ENDFILL
      FILL ESEC		! Megatiles 7-23 / Radiators 6-23
      ISect = 4 !  Section
      Nlayer = 18 !  Number of layers along z
      Cell = 1.405 !  Cell full width in z
      Scint = 0.4 !  Sci layer thickness
      deltaz = +0.0336 !  Amount to shift section in z to align with as-built numbers
      Jiggle  = {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
                   0,  0,  0,  0,  0,  0,  0} !   Degrees to shift EPER in each layer 
      ENDFILL
      FILL ESEC		! Postshower
      ISect = 5 !  Section
      Nlayer = 1 !  Number of  layers along z
      Cell = 1.505 !  Cell full width in z
      Scint = 0.5 !  Sci layer thickness (5.0mm Kurarary)
      deltaz = +0.036 !  Amount to shift section in z to align with as-built numbers
      Jiggle  = {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
                   0,  0,  0,  0,  0,  0,  0} !   Degrees to shift EPER in each layer 
      ENDFILL
      FILL EMXG		! EM Endcap SMD basic data
      Version = 1 !  Geometry version
      Sapex = 0.7 !  Scintillator strip apex
      Sbase = 1.0 !  Scintillator strip base
      Rin = 77.41 !  inner radius of SMD plane
      Rout = 213.922 !  outer radius of SMD plane
      F4 = .15 !  F4 thickness
      ENDFILL
      FILL EXSE		! First SMD section
      JSect = 1 !  Section number
      Zshift = -1.215 !  Section width
      sectype  = {  4,  1,  0,  2,  1,  0} !   1-V,2-U,3-cutV,4-cutU     
      ENDFILL
      FILL EXSE		! Second SMD section
      JSect = 2 !  Section number
      Zshift = 0. !  Section width
      sectype  = {  0,  2,  1,  0,  2,  3} !   1-V,2-U,3-cutV,4-cutU     
      ENDFILL
      FILL EXSE		! Third SMD section
      JSect = 3 !  Section number
      Zshift = 1.215 !  Section width
      sectype  = {  1,  0,  2,  1,  0,  2} !   1-V,2-U,3-cutV,4-cutU     
      ENDFILL
      FILL ECUT		! cut selection
      Version = 1 !  selector
      Absorber = 0 !  absorber cuts
      Sensitive = 0 !  sensitive cuts
      Blah = 1 !  meh
      ENDFILL
      FILL EABS		! The values below are the untuned defaults in the original geometry
      Version = 0 !  versioning
      CutGAM = 80 keV !  gamma transport cut
      CutELE = 1 MeV !  electron transport cut
      CutHAD = 1 MeV !  hadron transport cut
      CutNEU = 1 MeV !  neutron transport cut
      CutMUO = 1 MeV !  muon transport cut
      DCutE = 1 MeV !  electron delta ray cut
      DCutM = 1 MeV !  muon delta ray cut
      BCutE = 100 keV !  electron brem cut
      BCutM = 1 MeV !  muon brem cut
      ENDFILL
      FILL EABS		! EM cuts in absorbing material
      Version = 1 !  versioning
      CutGAM = 10 keV !  gamma transport cut
      CutELE = 10 keV !  electron transport cut
      CutHAD = 1 MeV !  hadron transport cut
      CutNEU = 1 MeV !  neutron transport cut
      CutMUO = 1 MeV !  muon transport cut
      DCutE = 10 keV !  electron delta ray cut
      DCutM = 10 keV !  muon delta ray cut
      BCutE = 10 keV !  electron brem cut
      BCutM = 10 keV !  muon brem cut
      ENDFILL
      FILL EABS		! EM cuts in absorbing material
      Version = 2 !  versioning
      CutGAM = 30 keV !  gamma transport cut
      CutELE = 30 keV !  electron transport cut
      CutHAD = 1 MeV !  hadron transport cut
      CutNEU = 1 MeV !  neutron transport cut
      CutMUO = 1 MeV !  muon transport cut
      DCutE = 30 keV !  electron delta ray cut
      DCutM = 30 keV !  muon delta ray cut
      BCutE = 30 keV !  electron brem cut
      BCutM = 30 keV !  muon brem cut
      ENDFILL
      FILL EABS		! EM cuts in absorbing material
      Version = 3 !  versioning
      CutGAM = 100 keV !  gamma transport cut
      CutELE = 100 keV !  electron transport cut
      CutHAD = 1 MeV !  hadron transport cut
      CutNEU = 1 MeV !  neutron transport cut
      CutMUO = 1 MeV !  muon transport cut
      DCutE = 100 keV !  electron delta ray cut
      DCutM = 100 keV !  muon delta ray cut
      BCutE = 100 keV !  electron brem cut
      BCutM = 100 keV !  muon brem cut
      ENDFILL
      FILL EABS		! EM cuts in absorbing material
      Version = 4 !  versioning
      CutGAM = 1 MeV !  gamma transport cut
      CutELE = 1 MeV !  electron transport cut
      CutHAD = 1 MeV !  hadron transport cut
      CutNEU = 1 MeV !  neutron transport cut
      CutMUO = 1 MeV !  muon transport cut
      DCutE = 1 MeV !  electron delta ray cut
      DCutM = 1 MeV !  muon delta ray cut
      BCutE = 1 MeV !  electron brem cut
      BCutM = 1 MeV !  muon brem cut
      ENDFILL
      FILL ESEN		! The values below are the untuned defaults in the original geometry
      Version = 0 !  versioning
      CutGAM = 80 keV !  gamma transport cut
      CutELE = 1 MeV !  electron transport cut
      CutHAD = 1 MeV !  hadron transport cut
      CutNEU = 1 MeV !  neutron transport cut
      CutMUO = 1 MeV !  muon transport cut
      DCutE = 1 MeV !  electron delta ray cut
      DCutM = 1 MeV !  muon delta ray cut
      BCutE = 100 keV !  electron brem cut
      BCutM = 1 MeV !  muon brem cut
      ENDFILL
      FILL ESEN		! EM cuts in absorbing material
      Version = 1 !  versioning
      CutGAM = 10 keV !  gamma transport cut
      CutELE = 10 keV !  electron transport cut
      CutHAD = 1 MeV !  hadron transport cut
      CutNEU = 1 MeV !  neutron transport cut
      CutMUO = 1 MeV !  muon transport cut
      DCutE = 10 keV !  electron delta ray cut
      DCutM = 10 keV !  muon delta ray cut
      BCutE = 10 keV !  electron brem cut
      BCutM = 10 keV !  muon brem cut
      ENDFILL
      FILL ESEN		! EM cuts in absorbing material
      Version = 2 !  versioning
      CutGAM = 30 keV !  gamma transport cut
      CutELE = 30 keV !  electron transport cut
      CutHAD = 1 MeV !  hadron transport cut
      CutNEU = 1 MeV !  neutron transport cut
      CutMUO = 1 MeV !  muon transport cut
      DCutE = 30 keV !  electron delta ray cut
      DCutM = 30 keV !  muon delta ray cut
      BCutE = 30 keV !  electron brem cut
      BCutM = 30 keV !  muon brem cut
      ENDFILL
      FILL ESEN		! EM cuts in absorbing material
      Version = 3 !  versioning
      CutGAM = 100 keV !  gamma transport cut
      CutELE = 100 keV !  electron transport cut
      CutHAD = 1 MeV !  hadron transport cut
      CutNEU = 1 MeV !  neutron transport cut
      CutMUO = 1 MeV !  muon transport cut
      DCutE = 100 keV !  electron delta ray cut
      DCutM = 100 keV !  muon delta ray cut
      BCutE = 100 keV !  electron brem cut
      BCutM = 100 keV !  muon brem cut
      ENDFILL
      FILL ESEN		! EM cuts in absorbing material
      Version = 4 !  versioning
      CutGAM = 1 MeV !  gamma transport cut
      CutELE = 1 MeV !  electron transport cut
      CutHAD = 1 MeV !  hadron transport cut
      CutNEU = 1 MeV !  neutron transport cut
      CutMUO = 1 MeV !  muon transport cut
      DCutE = 1 MeV !  electron delta ray cut
      DCutM = 1 MeV !  muon delta ray cut
      BCutE = 1 MeV !  electron brem cut
      BCutM = 1 MeV !  muon brem cut
      ENDFILL
      use EMCG
      use EMCS Version=2
      use EETR
      use ECUT Version=1
      use EABS Version=ECUT_Absorber
      use ESEN Version=ECUT_Sensitive
      sq3 = sqrt(3.)                                ! 1/tan(30deg) = sq3
      sq2 = sqrt(2.)
      center  = (emcs_zorg+emcs_zend)/2             ! center of the calorimeter
      tan_upp = tanf(emcs_etamin)                   ! think this is angle pointing to top of calo
      tan_low = tanf(emcs_etamax)                   ! think this is angle pointing to bot of calo
      rth     = sqrt(1. + tan_low*tan_low)          ! ??
      rshift  = emcs_hub * rth                      ! ??
      dup     = emcs_rmshift*tan_upp                !
      dd      = emcs_rmshift*rth                    !
      d2      = rshift + dd                         !
      radiator  = emcs_pbplate + 2*emcs_lamplate    ! thickness of radiator assembly
      dphi = (emcs_phimax-emcs_phimin)/emcs_nsector ! single endcap sector
      Prin0 emcg_version;
      ('ecalgeo version: ', F4.2)
      Prin0 ecut_absorber;
      (' absorber cuts=', F4.2)
      Prin0 ecut_sensitive;
      (' sensitive cuts=', F4.2)
      IF ( emcg_OnOff>0 ) THEN
      CREATE ECAL
      IF ( emcg_OnOff==1|emcg_OnOff==3 ) THEN
      POSITION ECAL in CAVE z=+center 
      ENDIF
      IF ( section>emcs_zend ) THEN
      Prin1 section,emcs_zend;
      (' ECALGEO error: sum of sections exceeds maximum ',2F12.4)
      ENDIF
      IF ( emcg_OnOff==2|emcg_OnOff==3 ) THEN
      POSITION ECAL in CAVE z=-center thetaz=180 
      ENDIF
      ENDIF
      Prin1 ;
      ('ECALGEO finished')
      ! ---------------------------------------------------------------------------------- ECAL
      BLOCK ECAL   is one EMC EndCap wheel
      MATERIAL Air
      MATERIAL ECAL_Air isvol=0
      ATTRIBUTE ECAL seen=0 colo=7
      SHAPE cone dz=(emcs_zend-emcs_zorg)/2 rmn1=emcs_zorg*tan_low-d2,
            rmx1=emcs_zorg*tan_upp+dup,
            rmn2=emcs_zend*tan_low-d2 rmx2=emcs_zend*tan_upp+dup
      Set EmCuts (EABS)
      DO ihalf = 1, 2
      filled = 1
      halfi  = -105 + (ihalf-1)*180
      IF ( (ihalf==2&emcg_FillMode<3) ) THEN
      filled = 0
      ENDIF
      CREATE EAGA
      POSITION EAGA alphaz=halfi 
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EAGA
      BLOCK EAGA   IS HALF OF WHEEL AIR VOLUME FOR THE ENDCAP MODULE
      MATERIAL ECAL_Air
      ATTRIBUTE EAGA seen=0 colo=1 serial=FILLED
      SHAPE cons dz=(emcs_zend-emcs_zorg)/2 rmn1=emcs_zorg*tan_low-d2,
            rmx1=emcs_zorg*tan_upp+dup,
            rmn2=emcs_zend*tan_low-d2 rmx2=emcs_zend*tan_upp+dup,
            phi1=emcs_phimin phi2=emcs_phimax
      IF ( FILLED.EQ.1 ) THEN
      CREATE EMSS
      POSITION EMSS konly='MANY' 
      curr  = emcs_zorg
      curcl = emcs_zend
      CREATE ECGH
      POSITION ECGH alphaz=90 konly='ONLY' 
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EMSS
      BLOCK EMSS   is the steel support of the endcap module
      COMPONENT Cr A=51.9960 Z=24 W=0.19
      COMPONENT Ni A=58.6934 Z=28 W=0.09
      COMPONENT Fe A=55.8450 Z=26 W=0.72
      MIXTURE Ecal_Steel dens=8.03
      ATTRIBUTE EMSS seen=1 colo=1
      SHAPE cons dz=(emcs_zend-emcs_zorg)/2 rmn1=emcs_zorg*tan_low-d2,
            rmx1=emcs_zorg*tan_upp+dup,
            rmn2=emcs_zend*tan_low-d2 rmx2=emcs_zend*tan_upp+dup,
            phi1=emcs_phimin phi2=emcs_phimax
      Set EmCuts (EABS)
      zslice = emcs_zorg
      zwidth = emcs_front
      Prin1 zslice+zwidth/2;
      (' Front Al plate centered at: ', F12.4)
      CREATE EFLP
      POSITION EFLP z=zslice-center+zwidth/2 
      zslice = zslice + zwidth
      Prin1 zslice;
      (' FIRST CALORIMETER STARTS AT: ',F12.4)
      fsect = 1                                          ! first section
      lsect = 3                                          ! last section
      zwidth = emcs_smdcentr - emcs_gapsmd/2 - zslice    ! width of current slice
      Prin1 zslice+zwidth/2;
      ('Sections 1-3 positioned at: ', F12.4)
      CREATE ECVO
      POSITION ECVO z=zslice-center+zwidth/2 
      zwidth  = emcs_gapsmd
      zslice  = emcs_smdcentr - emcs_gapsmd/2
      Prin1 section,zslice;
      (' 1st calorimeter ends, smd starts at: ',2f10.5)
      Prin1 zwidth;
      (' smd width = ',f10.5)
      Prin1 zslice+zwidth/2;
      ('SMD section centered at: ', F12.4)
      CREATE ESHM
      POSITION ESHM z=zslice-center+zwidth/2 konly='MANY' 
      zslice = zslice + zwidth
      Prin1 zslice;
      (' SMD ends at: ',f10.5)
      fsect = 4                                             ! first section
      lsect = 5                                             ! last section
      zwidth = 0
      DO i_section = fsect, lsect
      use ESEC isect=i_section
      zwidth  = zwidth + esec_cell*esec_nlayer
      END DO
      zwidth = emcs_bckfrnt - zslice
      Prin1 zslice+zwidth/2;
      ('Sections 4-5 positioned at: ', F12.4)
      CREATE ECVO
      POSITION ECVO z=zslice-center+zwidth/2 
      zslice = emcs_bckfrnt
      Prin1 section,zslice;
      (' 2nd calorimeter ends, back plate starts at: ',2f10.5)
      zwidth  = emcs_bckplate
      CREATE ESSP
      POSITION ESSP z=zslice-center+zwidth/2 
      zslice = zslice + zwidth
      Prin1 zslice;
      ('EEMC Al backplate ends at: ',F12.4)
      zwidth = emcs_zend - emcs_zorg
      CREATE ERCM
      DO i = 1, 2
      DO j = 1, 5
      xx = emcs_phimin + j*30
      yy = xx*degrad
      xc = cos(yy)*emcs_tierod(i)
      yc = sin(yy)*emcs_tierod(i)
      POSITION ERCM x=xc y=yc z=0 
      END DO
      END DO
      rth = emcs_zorg*tan_upp + dup + 2.5/2
      xc =(emcs_zend - emcs_zorg)*tan_upp
      length = .5*(emcs_zend + emcs_zorg)*tan_upp + dup + 2.5/2
      yc = emcs_zend - emcs_zorg
      p = atan(xc/yc)/degrad
      CREATE EPSB
      DO i = 1, 6
      xx = -75 + (i-1)*30
      yy = xx*degrad
      xc = cos(yy)*length
      yc = sin(yy)*length
      POSITION EPSB x=XC y=YC alphaz=XX 
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ECVO
      BLOCK ECVO   is one of endcap volume with megatiles and radiators
      MATERIAL ECAL_Air
      ATTRIBUTE ECVO seen=1 colo=3
      SHAPE cons dz=zwidth/2 rmn1=zslice*tan_low-dd,
            rmx1=zslice*tan_upp+dup rmn2=(zslice+zwidth)*tan_low-dd,
            rmx2=(zslice+zwidth)*tan_upp+dup
      DO i_sector = 1, 6
      IF (  (1<I_SECTOR .and. I_SECTOR<6)|EMCG_FILLMODE>1 ) THEN
      filled = 1
      ELSE
      filled = 0
      ENDIF
      d3 = 75 - (i_sector-1)*30
      CREATE EMOD
      POSITION EMOD alphaz=d3 ncopy=i_sector 
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ESHM
      BLOCK ESHM   is the shower max section
      MATERIAL ECAL_Air
      ATTRIBUTE ESHM seen=1 colo=4
      SHAPE cons dz=zwidth/2 rmn1=(zslice*tan_low)-dd,
            rmx1=(zslice)*tan_upp+dup rmn2=(zslice+zwidth)*tan_low-dd,
            rmx2=(zslice+zwidth)*tan_upp+dup,
            phi1=emcs_phimin phi2=emcs_phimax
      use EMXG
      maxcnt = emcs_smdcentr
      Prin1 zslice,section,center;
      (' === z start for smd,section: ',3f12.4, ' === ')
      DO j_section = 1, 3
      use EXSE jsect=j_section
      current = exse_zshift
      secwid  = emxg_sapex + 2.*emxg_f4
      section = maxcnt + exse_zshift
      Prin1 j_section,current,section,secwid;
      (' layer, z, width : ',i3,3f12.4)
      rbot=section*tan_low
      rtop=section*tan_upp
      Prin1 j_section,rbot,rtop;
      (' layer, rbot,rtop : ',i3,2f12.4)
      Prin1 j_section,center+current;
      (' smd layer=',I1,' z=',F12.4)
      CREATE ESPL
      POSITION ESPL z=current konly='MANY' 
      END DO
      CREATE ERSM
      DO i = 1, 2
      DO j = 1, 5
      xx = emcs_phimin + j*30
      yy = xx*degrad
      xc = cos(yy)*emcs_tierod(i)
      yc = sin(yy)*emcs_tierod(i)
      POSITION ERSM x=XC y=YC z=0 
      END DO
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ECGH
      BLOCK ECGH   is air gap between endcap half wheels
      MATERIAL ECAL_Air
      ATTRIBUTE ECGH seen=0 colo=7
      SHAPE trd1 dx1=emcs_zorg*tan_upp+dup dx2=emcs_zend*tan_upp+dup,
            dy=(emcs_gaphalf+emcs_cover)/2,
            dz=(emcs_zend-emcs_zorg)/2
      rth = emcs_gaphalf + emcs_cover
      xx=curr*tan_low - d2
      xleft = sqrt(xx*xx - rth*rth)
      yy=curr*tan_upp + dup
      xright = sqrt(yy*yy - rth*rth)
      secwid = yy - xx
      xx=curcl*tan_low - d2
      yleft = sqrt(xx*xx - rth*rth)
      yy=curcl*tan_upp + dup
      yright = sqrt(yy*yy - rth*rth)
      zwidth = yy - xx
      xx=(xleft + xright)/2
      yy=(yleft + yright)/2
      xc = yy - xx
      length =(xx + yy)/2
      yc = curcl - curr
      p = atan(xc/yc)/degrad
      rth = - (emcs_gaphalf + emcs_cover)/2
      CREATE ECHC
      POSITION ECHC x=+LENGTH y=RTH 
      POSITION ECHC x=-LENGTH y=RTH alphaz=180 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ECHC
      BLOCK ECHC   is steel endcap half cover
      MATERIAL ecal_steel
      ATTRIBUTE ECHC seen=1 colo=1
      SHAPE trap dz=(curcl-curr)/2 thet=p phi=0,
            h1=emcs_cover/2 bl1=secwid/2 tl1=secwid/2 alp1=0,
            h2=emcs_cover/2 bl2=zwidth/2 tl2=zwidth/2,
            alp2=0
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ESSP
      BLOCK ESSP   is stainless steel back plate
      MATERIAL ecal_steel
      ATTRIBUTE ESSP seen=1 colo=6 fill=1
      SHAPE cons dz=emcs_bckplate/2 rmn1=zslice*tan_low-dd,
            rmx1=zslice*tan_upp+dup rmn2=(zslice+zwidth)*tan_low-dd,
            rmx2=(zslice+zwidth)*tan_upp+dup,
            phi1=emcs_phimin phi2=emcs_phimax
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EPSB
      BLOCK EPSB   IS A PROJECTILE STAINLESS STEEL BAR
      MATERIAL Ecal_Steel
      ATTRIBUTE EPSB seen=1 colo=6 fill=1
      SHAPE trap dz=(emcs_zend-emcs_zorg)/2 thet=p,
            phi=0 h1=2.0/2 bl1=2.5/2 tl1=2.5/2 alp1=0,
            h2=2.0/2 bl2=2.5/2 tl2=2.5/2 alp2=0
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ERCM
      BLOCK ERCM   is stainless steel tie rod in calorimeter sections
      MATERIAL Ecal_Steel
      ATTRIBUTE ERSM seen=1 colo=6 fill=1
      SHAPE tube rmin=0 rmax=emcs_rtie dz=zwidth/2
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ERSM
      BLOCK ERSM   is stainless steel tie rod in shower max
      MATERIAL Ecal_Steel
      ATTRIBUTE ERSM seen=1 colo=6 fill=1
      SHAPE tube rmin=0 rmax=emcs_rtie dz=zwidth/2
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EMOD
      BLOCK EMOD   (fsect,lsect) IS ONE MODULE OF THE EM ENDCAP
      ATTRIBUTE EMOD seen=1 colo=3 serial=FILLED
      MATERIAL ECAL_Air
      SHAPE cons dz=zwidth/2 rmn1=zslice*tan_low-dd,
            rmx1=zslice*tan_upp+dup rmn2=(zslice+zwidth)*tan_low-dd,
            rmx2=(zslice+zwidth)*tan_upp+dup,
            phi1=emcs_phimin/emcs_nsupsec phi2=emcs_phimax/emcs_nsupsec
      section = zslice
      curr = zslice + zwidth/2
      DO i_section = fsect, lsect
      use ESEC isect=i_section
      secwid  = esec_cell*esec_nlayer
      IF ( I_SECTION==3|I_SECTION==5 ) THEN
      secwid  = secwid - radiator
      ELSEIF ( I_SECTION==4 ) THEN
      secwid  = secwid - esec_cell + radiator
      ENDIF
      Prin1 i_section,section-curr+secwid/2;
      ('+ ECVO isection=',I1,' zcenter=', F12.4)
      CREATE ESEC
      POSITION ESEC z=section-curr+secwid/2 
      section = section + secwid
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ESEC
      BLOCK ESEC   is a single em section
      MATERIAL ECAL_Air
      ATTRIBUTE ESEC seen=1 colo=1 serial=filled lsty=2
      SHAPE cons dz=secwid/2 rmn1=(section)*tan_low-dd,
            rmx1=(section)*tan_upp+dup rmn2=(section+secwid)*tan_low-dd,
            rmx2=(section+secwid)*tan_upp+dup
      length = - secwid/2
      current = section
      megatile = esec_scint + emcs_alincell + emcs_frplast + emcs_bkplast
      gap = esec_cell - radiator - megatile
      Prin2 i_section,section;
      (' ESEC:i_section,section',i3,f12.4)
      DO is = 1, esec_nlayer
      cell  = esec_cell
      plate = radiator
      IF ( is==nint(esec_nlayer) & (i_section==3|i_section==5) ) THEN
      cell = megatile + gap
      plate=0
      ELSEIF ( i_section==4&is==1 ) THEN
      cell = radiator
      ENDIF
      Prin2 i_section,is,length,cell,current;
      (' ESEC_i_section,is,length,cell,current ',2i3,3f12.4)
      IF ( i_section==4&is==1 ) THEN
      cell = radiator + emcs_slop
      Prin1 is,current + cell/2+esec_deltaz;
      (' + ESEC radiator ilayer=',I2,' z=',F12.4)
      CREATE ERAD
      POSITION ERAD z=length+(cell)/2+esec_deltaz 
      length  = length + cell
      current = current + cell
      ELSE
      cell = megatile
      IF ( FILLED==1 ) THEN
      CREATE EMGT
      POSITION EMGT z=length+(gap+cell)/2+esec_deltaz 
      xx = current + (gap+cell)/2+esec_deltaz
      Prin2 i_section,is,xx;
      (' mega i_section,is ',2i3,f10.4)
      Prin1 is,xx;
      (' + ESEC megatile ilayer=',I2,' z=',F12.4)
      ENDIF
      length  = length  + cell + gap
      current = current + cell + gap
      IF ( PLATE>0 ) THEN
      cell = radiator
      Prin1 is,current + cell/2+esec_deltaz;
      (' + ESEC radiator ilayer=',I2,' z=',F12.4)
      CREATE ERAD
      POSITION ERAD z=length+cell/2+esec_deltaz 
      length  = length  + cell
      current = current + cell
      ENDIF
      ENDIF
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EMGT
      BLOCK EMGT   is a 30 degree megatile
      MATERIAL ECAL_Air
      ATTRIBUTE EMGT seen=1 colo=1 lsty=2
      SHAPE cons dz=megatile/2 rmn1=(current)*tan_low-dd,
            rmx1=(current)*tan_upp+dup rmn2=(current+megatile)*tan_low-dd,
            rmx2=(current+megatile)*tan_upp+dup
      Call GStPar(ag_imed, 'CUTGAM', 0.00001)
      Call GStPar(ag_imed, 'CUTELE', 0.00001)
      Set EmCuts(EABS)
      DO isec = 1, nint(emcs_nslices)
      myPhi = (emcs_nslices/2-isec+0.5)*dphi + esec_jiggle(is)
      CREATE EPER
      POSITION EPER alphaz=myPhi 
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EPER
      BLOCK EPER   is a 5 degree slice of a 30 degree megatile (subsector)
      MATERIAL Polystyren
      MATERIAL ECAL_Polystyren isvol=0
      ATTRIBUTE EPER seen=1 colo=1 lsty=1
      SHAPE cons dz=megatile/2 rmn1=(current)*tan_low-dd,
            rmx1=(current)*tan_upp+dup rmn2=(current+megatile)*tan_low-dd,
            rmx2=(current+megatile)*tan_upp+dup,
            phi1=emcs_phimin/emcs_nsector,
            phi2=emcs_phimax/emcs_nsector
      Set EmCuts(EABS)
      curcl = current + megatile/2
      DO ie = 1, nint(eetr_neta)
      etabot  = eetr_etabin(ie)
      etatop  = eetr_etabin(ie+1)
      rbot=(curcl)*tanf(etabot)
      rtop=min((curcl)*tanf(etatop), ((current)*tan_upp+dup))
      CHECK  rbot<rtop
      xx=tan(pi*emcs_phimax/180.0/emcs_nsector)
      yy=cos(pi*emcs_phimax/180.0/emcs_nsector)
      CREATE ETAR
      POSITION ETAR x=(rbot+rtop)/2 ort=yzx 
      Prin2 ie,etatop,etabot,rbot,rtop;
      (' EPER : ie,etatop,etabot,rbot,rtop ',i3,4f12.4)
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ETAR
      BLOCK ETAR   is a single calorimeter cell, containing scintillator, fiber router,
             etc...
      MATERIAL ECAL_POLYSTYREN
      ATTRIBUTE ETAR seen=1 colo=4 lsty=1
      SHAPE trd1 dx1=rbot*xx-emcs_gapcel/yy dx2=rtop*xx-emcs_gapcel/yy,
            dy=megatile/2 dz=(rtop-rbot)/2
      CREATE EALP
      POSITION EALP y=(-megatile+emcs_alincell)/2 
      g10 = esec_scint
      CREATE ESCI
      POSITION ESCI y=(-megatile+g10)/2+emcs_alincell+emcs_frplast 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ESCI
      BLOCK ESCI   is the active scintillator (polystyrene) layer
      MATERIAL Polystyren
      MATERIAL Ecal_scint isvol=1
      ATTRIBUTE ESCI seen=1 colo=7 fill=0 lsty=1
      SHAPE trd1 dy=esec_scint/2 dz=(rtop-rbot)/2-emcs_gapcel
      Call GStPar(ag_imed, 'CUTGAM', 0.00008)
      Call GStPar(ag_imed, 'CUTELE', 0.001)
      Call GStPar(ag_imed, 'BCUTE', 0.0001)
      Call GStPar(ag_imed, 'CUTNEU', 0.001)
      Call GStPar(ag_imed, 'CUTHAD', 0.001)
      Call GStPar(ag_imed, 'CUTMUO', 0.001)
      Set EmCuts (ESEN)
      Call GStPar(ag_imed, 'BIRK1', 1.)
      Call GStPar(ag_imed, 'BIRK2', 0.013)
      Call GStPar(ag_imed, 'BIRK3', 9.6E-6)
      HITS ESCI birk:0:(0,10)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ERAD
      BLOCK ERAD   is the lead radiator with stainless steel cladding
      MATERIAL ECAL_STEEL
      ATTRIBUTE ERAD seen=1 colo=6 fill=1 lsty=1
      SHAPE cons dz=radiator/2 rmn1=(current)*tan_low-dd,
            rmx1=(current)*tan_upp+dup rmn2=(current+cell)*tan_low-dd,
            rmx2=(current+radiator)*tan_upp+dup
      CREATE ELED
      POSITION ELED 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ELED
      BLOCK ELED   is a lead absorber plate
      COMPONENT Sn A=118.710 Z=50 W=0.014
      COMPONENT Ca A=40.0780 Z=20 W=0.00075
      COMPONENT Al A=26.9815 Z=13 W=0.0003
      COMPONENT Pb A=207.190 Z=82 W=0.98495
      MIXTURE ECAL_PbAlloy dens=11.35
      ATTRIBUTE ELED seen=1 colo=4 fill=1 lsty=1
      SHAPE tubs rmin=(current)*tan_low rmax=(current+emcs_pbplate)*tan_upp,
            dz=emcs_pbplate/2
      Call GStPar(ag_imed, 'CUTGAM', 0.00008)
      Call GStPar(ag_imed, 'CUTELE', 0.001)
      Call GStPar(ag_imed, 'BCUTE', 0.0001)
      Call GStPar(ag_imed, 'CUTNEU', 0.001)
      Call GStPar(ag_imed, 'CUTHAD', 0.001)
      Call GStPar(ag_imed, 'CUTMUO', 0.001)
      Set EmCuts(EABS)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EFLP
      BLOCK EFLP   is the aluminum (aluminium) front plate of the endcap
      MATERIAL ALUMINIUM
      MATERIAL ECAL_ALUMINIUM isvol=0
      ATTRIBUTE EFLP seen=1 colo=3 fill=1 lsty=1
      SHAPE cons dz=emcs_front/2 rmn1=68.813 rmx1=(zslice)*tan_upp+dup,
            rmn2=68.813 rmx2=(zslice+zwidth)*tan_upp+dup,
            phi1=emcs_phimin phi2=emcs_phimax
      Set EmCuts(EABS)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EALP
      BLOCK EALP   is the thin aluminium plate in calorimeter cell
      MATERIAL Aluminium
      MATERIAL ECAL_AluPlate isvol=0
      ATTRIBUTE EALP seen=1 colo=1 lsty=1
      SHAPE trd1 dy=emcs_alincell/2 dz=(rtop-rbot)/2
      Call GStPar(ag_imed, 'CUTGAM', 0.00001)
      Call GStPar(ag_imed, 'CUTELE', 0.00001)
      Call GStPar(ag_imed, 'LOSS', 1.)
      Call GStPar(ag_imed, 'STRA', 1.)
      Set EmCuts(EABS)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ESPL
      BLOCK ESPL   is the logical volume containing an SMD plane
      MATERIAL ECAL_Air
      ATTRIBUTE ESPL seen=1 colo=4 lsty=4
      SHAPE tubs rmin=section*tan_low-1.526 rmax=(section-secwid/2)*tan_upp+dup,
            phi1=emcs_phimin,
            phi2=emcs_phimax dz=emcs_gapsmd/3/2
      use EMXG version=1
      msecwd =(emxg_sapex + emxg_f4)/2
      DO isec = 1, 6
      cut=1
      d3 = 75 - (isec-1)*30
      IF ( exse_sectype(isec)==0|(emcg_fillmode==1&(isec==6|isec==1)) ) THEN
      cut = 0
      ELSEIF ( exse_sectype(isec)==1 ) THEN
      CREATE EXSG
      POSITION EXSG alphaz=d3 ncopy=isec konly='MANY' 
      ELSEIF ( exse_sectype(isec)==2 ) THEN
      CREATE EXSG
      POSITION EXSG alphaz=d3 ort=x-y-z ncopy=isec konly='MANY' 
      ELSEIF ( exse_sectype(isec)==3 ) THEN
      cut=2
      CREATE EXSG
      POSITION EXSG alphaz=d3 ncopy=isec konly='MANY' 
      ELSEIF ( exse_sectype(isec)==4 ) THEN
      cut=2
      CREATE EXSG
      POSITION EXSG alphaz=d3 ort=x-y-z ncopy=isec konly='MANY' 
      ENDIF
      END DO
      DO isec = 1, 6
      d3=75 - (isec-1)*30
      IF ( exse_sectype(isec)==0|(emcg_fillmode==1&(isec==6|isec==1)) ) THEN
      cut = 0
      CREATE EXSG
      POSITION EXSG alphaz=d3 ncopy=isec konly='MANY' 
      ENDIF
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EXSG
      BLOCK EXSG   Is another logical volume... this one acutally creates the planes
      ATTRIBUTE EXSG seen=1 colo=7 serial=cut lsty=3
      MATERIAL ECAL_Air
      SHAPE tubs rmin=section*tan_low-1.526 rmax=(section-secwid/2)*tan_upp+dup,
            phi1=emcs_phimin/emcs_nsupsec-5,
            phi2=emcs_phimax/emcs_nsupsec+5,
            dz=emcs_gapsmd/3/2
      rbot = emxg_rin
      rtop = emxg_rout
      IF ( cut.eq.0 ) THEN
      CREATE EXPS
      POSITION EXPS konly='MANY' 
      ENDIF
      IF ( cut>0 ) THEN
      IF ( cut==1 ) THEN
      nstr = 288
      ELSE
      nstr = 285
      ENDIF
      DO istrip = 1, nstr
      Call ecal_get_strip( section,cut,istrip,xc,yc,length )
      IF ( mod(istrip,2)!=0 ) THEN
      CREATE EHMS
      POSITION EHMS x=xc y=yc alphaz=-45 
      CREATE EBLS
      POSITION EBLS x=xc y=yc z=(+esmd_apex/2+esmd_back_layer/2) alphaz=-45 
      ELSE
      CREATE EHMS
      POSITION EHMS x=xc y=yc alphaz=-45 ort=x-y-z 
      CREATE EFLS
      POSITION EFLS x=xc y=yc z=(-esmd_apex/2-esmd_front_layer/2) alphaz=-45  _
	ort=x-y-z 
      ENDIF
      END DO
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EHMS
      BLOCK EHMS   defines the triangular SMD strips
      MATERIAL Polystyren
      MATERIAL ECAL_smdstrip isvol=1
      ATTRIBUTE EHMS seen=1 colo=2 serial=cut lsty=1
      SHAPE trd1 dx1=0 dx2=emxg_Sbase/2 dy=length/2,
            dz=emxg_Sapex/2
      Call GStPar(ag_imed, 'CUTGAM', 0.00008)
      Call GStPar(ag_imed, 'CUTELE', 0.001)
      Call GStPar(ag_imed, 'BCUTE', 0.0001)
      Call GStPar(ag_imed, 'BIRK1', 1.)
      Call GStPar(ag_imed, 'BIRK2', 0.0130)
      Call GStPar(ag_imed, 'BIRK3', 9.6E-6)
      Set EmCuts (ESEN)
      HITS EHMS birk:0:(0,10)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EFLS
      BLOCK EFLS   is the layer of material on the front of the SMD planes
      COMPONENT G10 A=18.017 Z=9.013 W=1.19*1.700/(1.19*1.700+0.25*1.530+0.17*1.390)
      COMPONENT Fiberglass A=19.103 Z=9.549 W=0.25*1.530/(1.19*1.700+0.25*1.530+0.17*1.390)
      COMPONENT AlMylar A=12.889 Z=6.465 W=0.17*1.390/(1.19*1.700+0.25*1.530+0.17*1.390)
      MIXTURE EFLS dens=(1.19*1.7+0.25*1.53+0.17*1.39)/(1.19+0.25+0.17)
      ATTRIBUTE EFLS seen=0 colo=22 lsty=1
      SHAPE trd1 dx1=esmd_base/2 dx2=esmd_base/2,
            dy=length/2 dz=esmd_front_layer/2
      Set EmCuts(EABS)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EBLS
      BLOCK EBLS   is the layer of material on the back of the SMD planes
      COMPONENT AlMylar A=12.889 Z=6.465 W=0.10*1.390/(0.10*1.390+0.25*1.530+1.50*1.032+0.25*2.699)
      COMPONENT Fiberglass A=19.103 Z=9.549 W=0.25*1.530/(0.10*1.390+0.25*1.530+1.50*1.032+0.25*2.699)
      COMPONENT Polystyren A=11.154 Z=5.615 W=1.50*1.032/(0.10*1.390+0.25*1.530+1.50*1.032+0.25*2.699)
      COMPONENT Al A=28.08 Z=14.00 W=0.25*2.699/(0.10*1.390+0.25*1.530+1.50*1.032+0.25*2.699)
      MIXTURE EBLS dens=(0.10*1.390+0.25*1.530+1.50*1.032+0.25*2.699)/(0.10+0.25+1.50+0.25)
      ATTRIBUTE EFLS seen=0 colo=22 lsty=1
      SHAPE trd1 dx1=esmd_base/2 dx2=esmd_base/2,
            dy=length/2 dz=esmd_back_layer/2
      Set EmCuts(EABS)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EXPS
      BLOCK EXPS   is the plastic spacer in the shower maximum section
      COMPONENT H A=1 Z=1 W=3.0*1.0/62.453
      COMPONENT C A=12 Z=6 W=2.0*12.0/62.453
      COMPONENT Cl A=35.453 Z=17 W=1.0*35.453/62.453
      MIXTURE PVC_Spacer dens=1.390*(1.20/1.00)
      ATTRIBUTE EXPS seen=1 colo=6 lsty=1 lwid=2
      SHAPE tubs rmin=(section)*Tan_Low-1.526,
            rmax=(section+msecwd)*Tan_Upp phi1=emcs_PhiMin/emcs_Nsupsec,
            phi2=emcs_PhiMax/emcs_Nsupsec,
            dz=1.0/2
      Set EmCuts(EABS)
      ENDBLOCK
      <W> '===>> 	[End AgML Module ECALGEO6]	 <<==='; (A32,/,/);
      END! Module ECALGEO6
      ! ---------------------------------------------------------------------------------- ecal_get_strip
      Subroutine ecal_get_strip(section, cut, istrip, xcenter, ycenter, length)
      real section !intent=inout
      integer cut !intent=inout
      integer istrip !intent=inout
      real xcenter !intent=inout
      real ycenter !intent=inout
      real length !intent=inout
      +CDE,gcunit,agecom.
      INTEGER nstrips

      REAL rdel,rth,ddn,ddup,megatile,p,xleft,yleft,xright,yright,dxy,xx,yy,sqrt2,
            sqrt3

      REAL base/1.0/

      REAL Rbot/77.41/,Rtop/213.922/

      REAL EtaMin/1.086/,EtaMax/2.000/

      REAL tan_theta_min,tan_theta_max

      !* Lambda function tanf
      real etax ! arguement for etax
      real tanf
      tanf(etax) = tan(2*atan(exp(-etax)))
      tan_theta_min = tanf( EtaMax )
      tan_theta_max = tanf( EtaMin )
      IF ( cut .eq. 1 ) THEN
      rdel    = 3.938
      nstrips = 288
      ELSE
      rdel    = -.475
      nstrips = 285
      ENDIF
      xcenter=0.
      ycenter=0.
      length=0.
      IF ( cut==0 ) THEN
      return
      ENDIF
      sqrt2 = sqrt(2.0)
      sqrt3 = sqrt(3.0)
      rth = .53*rdel        ! .53 --- tentatavily    jcw-- wtf?
      ddn = sqrt(3.0)*1.713 + rdel
      ddup = .5*1.846 + 1.713
      megatile = base + .01
      p = .5*(istrip-1)*megatile + 41.3655
      IF ( p<=(.5*rbot*sqrt3+rth) ) THEN
      dxy     = 1.9375*sqrt2
      xleft  = .5*sqrt2*p*(sqrt3 + 1.) - dxy
      yleft  = .5*sqrt2*p*(sqrt3 - 1.) - dxy
      yright = .5*sqrt2*(sqrt( rbot*rbot - p*p) - p)
      xright = sqrt2*p + yright
      ELSEIF ( (.5*rbot*sqrt3+rth)<p .and. p <=(.5*rtop+1.5) ) THEN
      dxy = 1.9375*sqrt2
      xleft = .5*sqrt2*p*(sqrt3 + 1.) - dxy
      yleft = .5*sqrt2*p*(sqrt3 - 1.) - dxy
      dxy = rdel*sqrt2/sqrt3
      yright = .5*sqrt2*p*(1.- 1./sqrt3)
      xright = sqrt2*p - yright - dxy
      yright = -yright - dxy
      ELSEIF ( p>(.5*rtop+1.5) ) THEN
      yleft = (sqrt(rtop*rtop - p*p) - p)/sqrt2
      xleft = sqrt2*p + yleft
      dxy = rdel*sqrt2/sqrt3
      yright = .5*sqrt2*p*(1.- 1./sqrt3)
      xright = sqrt2*p - yright - dxy
      yright = -yright - dxy
      dxy = 0.
      IF ( (.5*sqrt3*160.-ddn)<p .and. p <=(.5*sqrt3*160.+ddup) ) THEN
      xcenter = .5*(sqrt3*160.+1.846)
      ycenter = xcenter - .5*sqrt3*1.713
      IF ( p>ycenter ) THEN
      dxy = .5*sqrt2*(2/sqrt3*rdel + .5*sqrt3*1.846 + sqrt(1.713*1.713 - (p-xcenter)*(p-xcenter)))
      ELSE
      dxy = sqrt2/sqrt3*(p - .5*sqrt3* 160. + ddn)
      ENDIF
      ELSEIF ( (.5*sqrt3*195.-ddn)<p .and. p <=(.5*sqrt3*195.+ddup) ) THEN
      xcenter = .5*(sqrt3*195.+1.846)
      ycenter = xcenter - .5*sqrt3*1.713
      IF ( p>ycenter ) THEN
      dxy = .5*sqrt2*(2/sqrt3*rdel + .5*sqrt3*1.846 + sqrt(1.713*1.713 - (p-xcenter)*(p-xcenter)))
      ELSE
      dxy = sqrt2/sqrt3*(p - .5*sqrt3*195. + ddn)
      ENDIF
      ENDIF
      xright = xright + dxy
      yright = yright + dxy
      ENDIF
      dxy     =  section*tan_theta_max - rtop
      xcenter = .5*(xright+xleft) + dxy
      ycenter = .5*(yright+yleft)
      xx = .5*sqrt2*(xleft+yleft)
      yy = .5*sqrt2*(xright+yright)
      length = xx-yy
      return
      End !Subroutine ecal_get_strip
