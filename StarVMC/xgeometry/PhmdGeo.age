      MODULE PHMDGEO     is the geometry of photon multiplicity detector
      +CDE,agecom.
      +CDE,gcunit.
      +CDE,gconst.
      Author Subhasis, Viyogi, Bedanga,Tapan and Dipak
      Created    03-july-2001
      CONTENT PHMD,PHMS,PHSR,PMDA,AIRA,PHCA,PPBA,PFEA,PCBA,BASA,ASTR,PSTR,PDCU,PDGS
      STRUCTURE PMVR { version,int config}
      STRUCTURE PMDG { version,m_max,m_min,zdist(2),DPMDx,DPMDy,DPMDz,PARGCz,PARSCz,
            PARFEz,PARPBz,cell_radius,cell_depth,cell_wall,boundary,th_base,th_air,th_pcb,
            th_lead,th_steel,int nx(5),int ny(5),int mx(7),int my(7),hexd2(10),hexd1(10),dpara(6)}
      INTEGER J,Itype,Ncellx,Ncelly,N,Mcellx,ipms

      REAL xb,yb,zb,xlen,xlen0,ylen,ylen0,phi,phideg,xpos,ypos,xsize,ysize

      REAL sm_thick,zz,root32,root34,xlen1,xlen2,xsize1,xlen3,ylen3

      REAL phideg1,phideg2,phideg3,phi1,phi2,phi3,xpos1,ypos1,ylen1,ylen2

      REAL zlen,zlen0,zlen1,sm_thick_a,xx,zlen2

      !* Lambda function sizen
      real sizen
      sizen(n) =  ((n + 1./3.)*pmdg_cell_radius)*2 + pmdg_boundary*2.*2./sqrt(3.)
      FILL PMVR		! PMD geometry
      version = 1 !  geometry version
      Config = 1 !  general configuration of the detector
      ENDFILL
      FILL PMDG		! PMD geometry
      version = 1 !  geometry version
      m_max = 135.0 !  Mother volume max radius
      m_min = 22.0 !  Mother volume min radius
      zdist  = {  -539.,  -550.} !   PMD placed at 5.39 metre from the interaction point 
      DPMDx = 270 !   (X-halfwidth of the PMD box,was 190 earlier)
      DPMDy = 270 !  Y-halfwidth of the  PMD box.
      DPMDz = 10. !  total z half-width of the box.
      PARGCz = 0.40 !  half thickness of gas (CPV sensitive)
      PARSCz = 0.40 !  (8 mm thick gas)
      PARFEz = 0.25 !  (iron frame)
      PARPBz = 0.75 !  (3 X0 of lead converter)
      nx  = {  48,  72,  72,  48,  48} !  x-dimensions of modules 
      ny  = {  24,  48,  48,  72,  48} !  y-dimensions of modules 
      mx  = {  24,  48,  72,  72,  24,  48,  48} !  x-dimensions of modules 
      my  = {  24,  24,  24,  48,  48,  72,  48} !  y-dimensions of modules 
      hexd2  = {    0.,  360.,     6,     2,  -0.4,    0., 
                  0.51,   0.4,    0.,  0.51} !  inner hex 
      hexd1  = {    0.,  360.,     6,     2,  -0.4,    0., 
                  0.53,   0.4,    0.,  0.53} !  outer hex 
      dpara  = {  38.29,  33.16,    0.4,    30.,     0.,     0.} !  supermodule 
      CELL_RADIUS = 0.5282 !  Radius of a cell
      CELL_DEPTH = 0.8 !  Gas depth
      CELL_WALL = 0.2 !  Cell wall thickness
      BOUNDARY = 0.8 !  Boundary
      th_base = 0.3 !  Thickness of the base plate
      th_air = 0.1 !  Air gap
      th_pcb = 0.16 !  Thickness of the PCB
      th_lead = 1.5 !  Thickness of the Lead
      th_steel = 0.5 !  Thickness of the steel support
      ENDFILL
      use PMVR
      use PMDG
      root32=sqrt(3.0)/2.0
      root34=root32/2.0
      xlen3=(SizeN(72)+SizeN(48))/4.0
      ylen3=-(SizeN(72)+SizeN(48))*root34
      zlen2=(SizeN(72)+SizeN(48)+4.5*pmdg_th_air)/4.
      zlen1=-(SizeN(72)+SizeN(48)+(2.0*pmdg_boundary+3.75*pmdg_th_air)/root32)*root34
      sm_thick_a = (pmdg_th_base + 4.0*pmdg_th_air + 3.0*pmdg_th_pcb  + pmdg_CELL_depth)
      sm_thick   = 2.0*sm_thick_a  + pmdg_th_lead + pmdg_th_steel
      CREATE PHMD
      POSITION PHMD in CAVE z=pmdg_ZDIST(PMDG_version) 
      ! ---------------------------------------------------------------------------------- PHMD
      BLOCK PHMD   the PMD box volume and fill with air
      MATERIAL Air
      MEDIUM STandard
      ATTRIBUTE PHMD seen=1 colo=2
      SHAPE tube rmin=pmdg_m_min rmax=pmdg_m_max,
            dz=sm_thick/2.
      phideg1=90.
      phideg2=210.
      phideg3=330.
      phi1=phideg1*degrad
      phi2=phideg2*degrad
      phi3=phideg3*degrad
      ipms = 1
      CREATE PHMS
      POSITION PHMS x=xlen3*cos(phi1)-ylen3*sin(phi1)+5*pmdg_th_air  _
	y=xlen3*sin(phi1)+ylen3*cos(phi1) z=0 alphaz=phideg1 ncopy=1 
      ipms = 2
      CREATE PHMS
      POSITION PHMS x=xlen3*cos(phi2)-ylen3*sin(phi2)-5*pmdg_th_air  _
	y=xlen3*sin(phi2)+ylen3*cos(phi2) z=0 alphaz=phideg2 ncopy=2 
      ipms = 3
      CREATE PHMS
      POSITION PHMS x=zlen2*cos(phi3)-zlen1*sin(phi3)  _
	y=zlen2*sin(phi3)+zlen1*cos(phi3) z=0 alphaz=phideg3 ncopy=3 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- PHMS
      BLOCK PHMS   the PMD sector volume - 1/3rd of PHMD
      MATERIAL Air
      MEDIUM Standard
      ATTRIBUTE PHMS seen=1 colo=2
      IF ( ipms!=3 ) THEN
      SHAPE para dx=xlen3*2. dy=-ylen3 dz=sm_thick/2.,
            alph=30. thet=0 phi=0
      phideg =0
      ypos   = (SizeN(72)+SizeN(48))*root34
      xlen2 = -(SizeN(72)+SizeN(48))/4.
      xsize1 = (SizeN(72)+SizeN(48))/2.
      DO Itype = 1, 5
      xsize = SizeN(pmdg_Nx(Itype))
      ysize = SizeN(pmdg_Ny(Itype))-pmdg_boundary/root32
      IF ( (Itype>2) ) THEN
      ysize= SizeN(pmdg_Ny(Itype))
      ENDIF
      xlen0  = xsize/2
      ylen0  = (ysize)*root34
      ylen   = (ysize-pmdg_boundary/root32)*root34
      xpos = xlen2 -xsize1 +xsize/2.+ SizeN(pmdg_Ny(Itype))/4.
      IF ( (Itype>2) ) THEN
      ylen = (ysize-pmdg_boundary/root34)*root34
      ENDIF
      ylen1=0.
      ylen2=0.
      xlen1=1.
      IF ( (Itype==2) ) THEN
      xlen1=-1.
      ENDIF
      IF ( (Itype>2) ) THEN
      xlen1=0.
      ENDIF
      zlen=1.
      IF ( (Itype==2) ) THEN
      zlen=-1.
      ENDIF
      IF ( (Itype>2) ) THEN
      zlen=0.
      ENDIF
      zb = 0
      NcellX = pmdg_Nx(Itype)
      NcellY = pmdg_Ny(Itype)
      IF ( (Itype==1) ) THEN
      xpos=xpos + xsize + SizeN(pmdg_Ny(Itype))- 11.*pmdg_boundary/(4.*root32)-pmdg_CELL_RADIUS*2.
      ENDIF
      IF ( (Itype==2) ) THEN
      xpos=xpos + SizeN(pmdg_Ny(Itype))/2.-pmdg_boundary/(4.*root32)
      ENDIF
      IF ( (Itype==3) ) THEN
      xpos1=xpos1 + SizeN(pmdg_Mx(Itype-1))/2 - pmdg_boundary-2.25*pmdg_th_air
      ENDIF
      IF ( (Itype==4) ) THEN
      xpos=xpos + 2.*xsize1-xsize/2.
      ENDIF
      IF ( (Itype==5) ) THEN
      xpos1 = xpos1+2.*xsize1-xsize+ SizeN(pmdg_Mx(Itype-1))/2.-ysize +3*pmdg_boundary*root32
      ENDIF
      ypos = ypos-ylen0
      CREATE PHSR
      POSITION PHSR x=xpos y=ypos z=0. alphaz=phideg 
      ypos = ypos-ylen0
      IF ( (Itype==3) ) THEN
      ypos=(SizeN(72)+SizeN(48))*root34
      ENDIF
      END DO
      ELSE
      SHAPE para dx=zlen2*2. dy=-zlen1 dz=sm_thick/2.,
            alph=30. thet=0 phi=0
      phideg =0
      ypos1   = (SizeN(72)+SizeN(48)+2.*pmdg_boundary/root32+.375)*root34
      xlen2 = -(SizeN(72)+SizeN(48)+3.75*pmdg_th_air)/4.
      xsize1 = (SizeN(72)+SizeN(48)+4.5*pmdg_th_air)/2.
      DO Itype = 1, 7
      xsize = SizeN(pmdg_Mx(Itype))
      ysize = SizeN(pmdg_My(Itype))
      xlen0 = xsize/2
      ylen0 = (ysize)*root34
      zlen0 = (ysize)*root34
      IF ( (Itype==2) ) THEN
      zlen0=(ysize-pmdg_boundary/root32)*root34+3.75*pmdg_th_air
      ENDIF
      IF ( (Itype==3) ) THEN
      zlen0=(ysize-pmdg_boundary/root32)*root34-3.75*pmdg_th_air
      ENDIF
      IF ( (Itype==4) ) THEN
      zlen0=(ysize)*root34+3.75*pmdg_th_air
      ENDIF
      IF ( (Itype==5) ) THEN
      zlen0=(ysize+pmdg_boundary/root32)*root34
      ENDIF
      xpos1 = xlen2 -xsize1 + xsize/2.+ ysize/4.
      ylen = (ysize-2*pmdg_boundary)*root34
      ylen1 = 0.
      IF ( (Itype==1) ) THEN
      ylen1=1.
      ENDIF
      IF ( (Itype==2) ) THEN
      ylen1=-1.
      ENDIF
      IF ( (Itype==3) ) THEN
      ylen1=-1.
      ENDIF
      IF ( (Itype==5) ) THEN
      ylen1=2.
      ENDIF
      IF ( (Itype==6) ) THEN
      ylen1=1.
      ENDIF
      ylen2 = 0.
      IF ( (Itype==2) ) THEN
      ylen2=1.
      ENDIF
      IF ( (Itype==3) ) THEN
      ylen2=1.
      ENDIF
      IF ( (Itype==5) ) THEN
      ylen2=-1.
      ENDIF
      xlen1=0.
      IF ( (Itype==1) ) THEN
      xlen1=-2.
      ENDIF
      IF ( (Itype==2) ) THEN
      xlen1=3.
      ENDIF
      IF ( (Itype==3) ) THEN
      xlen1=1.
      ENDIF
      IF ( (Itype==5) ) THEN
      xlen1=-1.
      ENDIF
      IF ( (Itype==6) ) THEN
      xlen1=2.
      ENDIF
      zlen=0.
      IF ( (Itype==2) ) THEN
      zlen=0.75
      ENDIF
      IF ( (Itype==3) ) THEN
      zlen=-0.75
      ENDIF
      IF ( (Itype==5) ) THEN
      zlen=-1.
      ENDIF
      zb = 0
      NcellX = pmdg_Mx(Itype)
      NcellY = pmdg_My(Itype)
      IF ( (Itype==1) ) THEN
      xpos1=xpos1 + SizeN(pmdg_Mx(Itype+1))/2.+2.*ysize-2* pmdg_boundary/root32-pmdg_boundary/3.
      ENDIF
      IF ( (Itype==2) ) THEN
      xpos1=xpos1 + xsize/2.+ ysize/2.-pmdg_boundary*root32-pmdg_boundary-2.25*pmdg_th_air
      ENDIF
      IF ( (Itype==3) ) THEN
      xpos1=xpos1 + SizeN(pmdg_Mx(Itype-1))/2 - pmdg_boundary-2.25*pmdg_th_air
      ENDIF
      IF ( (Itype==4) ) THEN
      xpos1 = xpos1 -pmdg_boundary*root32
      ENDIF
      IF ( (Itype==5) ) THEN
      xpos1 = xpos1+2.*xsize1-xsize+ SizeN(pmdg_Mx(Itype-1))/2.-ysize +3*pmdg_boundary*root32+2.2
      ENDIF
      IF ( (Itype==6) ) THEN
      xpos1=xpos1 + 2.*xsize1-xsize/2.+pmdg_boundary/root32+2.25*pmdg_th_air
      ENDIF
      IF ( (Itype==7) ) THEN
      xpos1=xpos1 + 2.*xsize1-xsize-pmdg_boundary/(2.*root32)+pmdg_boundary
      ENDIF
      ypos1 = ypos1-zlen0
      CREATE PHSR
      POSITION PHSR x=xpos1 y=ypos1 z=0. alphaz=phideg 
      ypos1 = ypos1-zlen0
      IF ( (Itype==4) ) THEN
      ypos1=(SizeN(72)+SizeN(48)+2.*pmdg_boundary/root32+.375)*root34
      ENDIF
      IF ( (Itype==5) ) THEN
      ypos1=(SizeN(72)+SizeN(48)+2.*pmdg_boundary/root32+.375)*root34
      ENDIF
      IF ( (Itype==6) ) THEN
      ypos1=ypos1-4.*pmdg_th_air
      ENDIF
      END DO
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- PHSR
      BLOCK PHSR   is a detector box made in air
      MATERIAL Air
      ATTRIBUTE PHSR seen=1 colo=6 serial=0
      SHAPE para dx=xlen0-ylen1*pmdg_boundary/(2.*root32),
            dy=ylen0-ylen2*pmdg_boundary*root34/root32,
            dz=sm_thick/2 alph=30 thet=0 phi=0
      xx = - sm_thick/2. + sm_thick_a/2.
      CREATE PMDA
      POSITION PMDA z=xx 
      xx = - sm_thick/2. + sm_thick_a + pmdg_th_lead/2.
      CREATE PPBA
      POSITION PPBA z=xx 
      xx = xx + pmdg_th_lead/2. + pmdg_th_steel/2.
      CREATE PFEA
      POSITION PFEA z=xx 
      xx = xx + pmdg_th_steel/2. + sm_thick_a/2.
      CREATE PMDA
      POSITION PMDA z=xx thetaz=180 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- PMDA
      BLOCK PMDA   is a detector box made in aluminium
      MATERIAL Aluminium
      ATTRIBUTE PMDA seen=1 colo=6
      SHAPE para dx=xlen0-ylen1*pmdg_boundary/(2.*root32),
            dy=ylen0-ylen2*pmdg_boundary*root34/root32,
            dz=sm_thick_a/2. alph=30 thet=0 phi=0
      CREATE AIRA
      POSITION AIRA x=-pmdg_boundary/(4.*root32)*xlen1 y=-pmdg_boundary/2.*zlen 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- AIRA
      BLOCK AIRA   is a detector made in air
      MATERIAL Air
      ATTRIBUTE AIRA seen=1 colo=4
      SHAPE para dx=xlen0-pmdg_boundary/root32,
            dy=ylen dz=sm_thick_a/2.
      zz = - sm_thick_a/2. + pmdg_th_pcb/2.
      CREATE PCBA
      POSITION PCBA z=zz 
      zz = zz + pmdg_th_pcb/2 + 3.*pmdg_th_air + pmdg_th_pcb/2.
      CREATE PCBA
      POSITION PCBA z=zz 
      zz = zz + pmdg_th_pcb/2. + pmdg_CELL_depth/2.
      CREATE PHCA
      POSITION PHCA z=zz 
      zz = zz + pmdg_CELL_depth/2. + pmdg_th_pcb/2.
      CREATE PCBA
      POSITION PCBA z=zz 
      zz = zz + pmdg_th_pcb/2. + pmdg_th_air + pmdg_th_base/2.
      CREATE BASA
      POSITION BASA z=zz 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- PHCA
      BLOCK PHCA   is the detector made in air
      MATERIAL Air
      ATTRIBUTE PHCA seen=1 colo=4
      SHAPE para dx=xlen0-pmdg_boundary/root32,
            dy=ylen dz=pmdg_CELL_depth/2.
      CREATE ASTR
      DO J = 1, NcellY
      xb=-ylen*(1/(2*root32))+pmdg_hexd1(7)*2./3.  +(J-1)*pmdg_hexd1(7)
      yb=-ylen+(2./sqrt(3.))*pmdg_hexd1(7)+(J-1)*pmdg_hexd1(7)*sqrt(3.)
      POSITION ASTR x=xb y=yb z=zb konly='MANY' 
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ASTR
      BLOCK ASTR   is the strip
      MATERIAL Air
      ATTRIBUTE ASTR seen=0 colo=6
      xlen=NCellx*pmdg_CELL_radius
      SHAPE para dx=xlen dy=pmdg_CELL_radius/root32,
            dz=pmdg_CELL_depth/2 alph=0
      CREATE PSTR
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- PSTR
      BLOCK PSTR   is one pseudo-cell
      SHAPE division ndiv=NCellx iaxis=1
      CREATE PDCU
      POSITION PDCU alphaz=90 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- PPBA
      BLOCK PPBA   is The lead plates for different modules
      MATERIAL Lead
      MATERIAL Lead_PPBA isvol=0
      ATTRIBUTE PPBA seen=1 colo=7
      SHAPE para dx=xlen0-ylen1*pmdg_boundary/(2.*root32),
            dy=ylen0-ylen2*pmdg_boundary*root34/root32,
            dz=pmdg_th_lead/2.
      IF ( PMVR_Config.eq.1 ) THEN
      Call GStPar(ag_imed, 'CUTGAM', .0001)
      Call GStPar(ag_imed, 'CUTELE', .0001)
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- PFEA
      BLOCK PFEA   is The iron plates for different modules
      MATERIAL Iron
      MATERIAL Iron_PFEA isvol=0
      ATTRIBUTE PFEA seen=1 colo=2
      SHAPE para dx=xlen0-ylen1*pmdg_boundary/(2.*root32),
            dy=ylen0-ylen2*pmdg_boundary*root34/root32,
            dz=pmdg_th_steel/2.
      IF ( PMVR_Config.eq.1 ) THEN
      Call GStPar(ag_imed, 'CUTGAM', .0001)
      Call GStPar(ag_imed, 'CUTELE', .0001)
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- BASA
      BLOCK BASA   is the G10 base plate
      COMPONENT Si A=28.08 Z=14 W=0.6*1*28./60.
      COMPONENT O A=16 Z=8 W=0.6*2*16./60. + 0.4*4*16./174.
      COMPONENT C A=12 Z=6 W=0.4*8*12./174.
      COMPONENT H A=1 Z=1 W=0.4*14*1./174.
      MIXTURE G10 dens=1.7
      ATTRIBUTE BASA seen=1 colo=6
      SHAPE para dx=xlen0-pmdg_boundary/root32,
            dy=ylen dz=pmdg_th_base/2.
      IF ( PMVR_Config.eq.1 ) THEN
      Call GStPar(ag_imed, 'CUTGAM', .0001)
      Call GStPar(ag_imed, 'CUTELE', .0001)
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- PCBA
      BLOCK PCBA   is the chamber PCB
      COMPONENT Si A=28.08 Z=14 W=0.6*1*28./60.
      COMPONENT O A=16 Z=8 W=0.6*2*16./60. + 0.4*4*16./174.
      COMPONENT C A=12 Z=6 W=0.4*8*12./174.
      COMPONENT H A=1 Z=1 W=0.4*14*1./174.
      MIXTURE G10 dens=1.7
      ATTRIBUTE PCBA seen=1 colo=4
      SHAPE para dx=xlen0-pmdg_boundary/root32,
            dy=ylen dz=pmdg_th_pcb/2.
      IF ( PMVR_Config.eq.1 ) THEN
      Call GStPar(ag_imed, 'CUTGAM', .0001)
      Call GStPar(ag_imed, 'CUTELE', .0001)
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- PDCU
      BLOCK PDCU   is The outer cell in the PMD module
      MATERIAL Copper
      ATTRIBUTE PDCU seen=0 colo=3
      SHAPE pgon phi1=pmdg_hexd1(1) dphi=pmdg_hexd1(2),
            npdiv=pmdg_hexd1(3) nz=pmdg_hexd1(4),
            zi={pmdg_hexd1(5),pmdg_hexd1(8)} rmn={pmdg_hexd1(6),
            pmdg_hexd1(9)} rmx={pmdg_hexd1(7),pmdg_hexd1(10)}
      CREATE PDGS
      POSITION PDGS x=0.0 y=0.0 z=0.0 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- PDGS
      BLOCK PDGS   is The inner cell in the PMD module
      MEDIUM sensitive isvol=1
      COMPONENT Ar A=40 Z=18 W=.7
      COMPONENT C A=12 Z=6 W=.3*12/44.
      COMPONENT O A=16 Z=8 W=.3*32/44.
      MIXTURE Ar_CO2 dens=0.0018405
      ATTRIBUTE PDGS seen=0 colo=3
      SHAPE pgon phi1=pmdg_hexd2(1) dphi=pmdg_hexd2(2),
            npdiv=pmdg_hexd2(3) nz=pmdg_hexd2(4),
            zi={pmdg_hexd2(5),pmdg_hexd2(8)} rmn={pmdg_hexd2(6),
            pmdg_hexd2(9)} rmx={pmdg_hexd2(7),pmdg_hexd2(10)}
      IF ( PMVR_Config.eq.1 ) THEN
      Call GStPar(ag_imed, 'CUTGAM', .0001)
      Call GStPar(ag_imed, 'CUTELE', .00001)
      ENDIF
      HITS PDGS eloss:0:(0,1)
      ENDBLOCK
      <W> '===>> 	[End AgML Module PHMDGEO]	 <<==='; (A32,/,/);
      END! Module PHMDGEO
