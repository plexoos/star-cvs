      MODULE CALBGEO1    is the geometry of the Barrel EM Calorimeter
      Author Maxim Potekhin BNL
      Created    January 20, 2004
      +CDE,agecom.
      +CDE,gconst.
      +CDE,gcunit.
      EXTERNAL etsphit
      CONTENT CALB,CHLV,CPHI,CSUP,CPBP,CSCI,CSMD,CSMG,CSDA,CSMC,CSMB,CSME,CSHI,CBTW
      STRUCTURE CALG { version,Rmin,Etacut,CrackWd,FrontThk,CompThk,AirThk,BackThk,
            SpaceThk,ScintThk(2),AbsorThk,AbPapThk,g10SbThk,SmAlfWdh,SmAlfThk,SmGasThk,SmGasWdh,
            SmGasRad,SmAffWdh,SmAfbWdh,SmetaWdh,Seta1Wdh,Netfirst,Seta2Wdh,Netsecon,Set12Wdh,
            SphiWdh,SphidWdh,NPhistr,NSmdAlw,Nsuper,Nsmd,NsubLay(2),Nmodule(2),Shift(2),
            MaxModule,NetaT,Nsub,NetaSMDp,ModMap(60)}
      STRUCTURE CALR { Rmin,Rprs,Rsmd1,Rsmd2,Rmax}
      REAL RKB2sc/0.013/,RKB3sc/9.6E-6/

      REAL current_depth,current,layer_width(2),tan_theta,smd_width,smd_width1,smd_width2,
            smd_width3,cut_length,cut_radius,future_depth,c_dep,c_lead_dep,eta_lenght,
            current_csda,h_eta1,h_eta2,h_phi1,h_phi2,sh_eta1,sh_eta2,sh_phi1,sh_phi2,Rmax,
            Hleng,Deta,angular_offset,DphiTot,DphiMod,DphiT,R1,R2,R3,R4,RR(2)

      INTEGER layer,super,sub,i,j,ii,nn,imod

      FILL CALG		! Barrel Calorimeter data
      Version = 3.0 !  geometry version
      Rmin = 223.5 !  inner radius
      EtaCut = 1.0 !  calorimeter rapidity cut
      CrackWd = 0.655 !  half width of the crack between modules
      FrontThk = 0.9525 !  front plate half thickness
      CompThk = 0.9525 !  back plate half thickness
      AirThk = 0.158 !  Air gap half thicness
      BackThk = 1.5875 !  Module back plate half thicknes
      SpaceThk = 0.9525 !  Spacer back plate half thicknes
      ScintThk  = {   0.3,  0.25} !   active scintillator plate half thickness 
      AbsorThk = 0.250 !  absorber plate thickness halfpThickness
      AbPapThk = 0.005 !  absorber paper plate thickness half thickness
      g10SbThk = 0.115 !  G10 SMD front and back plate half thickness
      SmAlfWdh = 11.2014 !  SMD Al front back plate with Ar half width
      SmAlfThk = 0.3893 !  SMD Al front back plate with Ar half thickness
      SmGasThk = 0.1359 !  SMD gas BOX volume half thickness
      SmGasWdh = 0.2946 !  SMD gas BOX volume half width
      SmGasRad = 0.2946 !  SMD gas volume TUBS radius
      SmAffWdh = 0.113 !  SMD Al front first (last) rib half width
      SmAfbWdh = 0.1664 !  SMD Al back first (last) rib half width
      SmetaWdh = 0.9806 !  Eta=0 strip notch half width
      Seta1Wdh = 0.7277 !  strip#1-75 half witdh
      Seta2Wdh = 0.9398 !  strip#76-150 half witdh
      Set12Wdh = 0.04064 !  half distance between strips in eta
      SphiWdh = 0.6680 !  strip#(1-NPhistr) in phi direction half witdh
      SphidWdh = 0.07874 !  half distance between strips in phi
      NSmdAlw = 30 !  Number SMD gaseus interval in tile
      Nsuper = 2 !  number of readout superlayer
      Nsmd = 5 !  SMD positioned after sandvich type layers EMC
      NsubLay  = {   2,  19} !   number of layers in a superlayer 
      MaxModule = 60 !  max number of moudle
      NetaT = 20 !  Number of eta division for tower/preshower
      Nsub = 2 !  Number of sub div. in phi for tower/preshower
      NetaSMDp = 10 !  Number of eta division in for SMD phi plane
      NPhistr = 15 !  Number of the strip in phi direction
      Netfirst = 75. !  Number of strip in first part eta=0-0.5
      Netsecon = 75. !  Number of strip in second part eta=0.5-1.0
      Nmodule  = {  60,  60} !   number of modules 
      Shift  = {   75,  105} !   starting azimuth of the first module    
      ModMap  = {  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 
                   1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0, 
                   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
                   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
                   0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 
                   1,  1,  1,  1,  1} !   Populated modules map 
      ENDFILL
      use CALG
      smd_width=2.*calg_g10SbThk+2.*calg_SmAlfThk+2.*calg_AbPapThk
      smd_width1=2.*calg_g10SbThk+2.*calg_AbPapThk
      smd_width2=smd_width1+calg_SmGasThk+calg_SmGasRad
      smd_width3=2.*smd_width-smd_width1-calg_SmGasThk-calg_SmGasRad
      R1=calg_Rmin+2.*calg_FrontThk
      R2=0.0
      DO i = 1, nint(calg_Nsuper)
      layer_width(i) = calg_ScintThk(i) + calg_AbsorThk+2.*calg_AbPapThk
      R2 += (calg_NsubLay(i)-i+1)*layer_width(i)*2.0
      RR(i)=R2
      END DO
      R3=(calg_Nsuper*layer_width(1)+(calg_nsmd-calg_Nsuper)*layer_width(2))*2.
      R4=(smd_width+calg_scintThk(2)+2.*calg_AbPapThk)*2.0
      cut_radius=R1+R2+R4
      Rmax=cut_radius+2.*(Calg_BackThk+calg_SpaceThk+Calg_CompThk+calg_AirThk)
      tan_theta  = tan(2*atan(exp(-calg_EtaCut)))
      cut_length = calg_Rmin/tan_theta
      Hleng   = cut_radius/tan_theta
      nn      = max(calg_Nmodule(1),calg_Nmodule(2))
      Deta    = 1.0/calg_NetaT
      DphiMod = 360/calg_MaxModule
      DphiT   = DphiMod/calg_Nsub
      DphiTot = DphiMod*nn
      FILL CALR		! barrel EMC radiuses
      RMIN = R1 !  inner raduis of sensitive area
      RPRS = R1+RR(1)/2.0 !  mean raduis of PRS
      RSMD1 = R1+R3+smd_width2 !  mean raduis of SMD
      RSMD2 = R1+R3+smd_width3 !  mean raduis of SMD
      RMAX = cut_radius !  outer raduis of sensitive area
      ENDFILL
      use CALR
      CREATE CALB
      POSITION CALB in CAVE 
      Prin1 calg_Version;
      (' CALB geo. version =',F7.1)
      ! ---------------------------------------------------------------------------------- CALB
      BLOCK CALB   is EMC Barrel envelope
      MATERIAL Air
      MEDIUM Standard
      ATTRIBUTE CALB seen=0 colo=7
      SHAPE pcon phi1=0 dphi=360 nz=4 zi={-Hleng,
            -cut_length,cut_length,Hleng} rmn={cut_radius,
            Calg_rmin,Calg_Rmin,cut_radius} rmx={Rmax,
            Rmax,Rmax,Rmax}
      IF ( calg_Nmodule(1)>0 ) THEN
      ii=1;
      CREATE CHLV
      POSITION CHLV 
      ENDIF
      IF ( calg_Nmodule(2)>0 ) THEN
      ii=2;
      CREATE CHLV
      POSITION CHLV thetaz=180 
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CHLV
      BLOCK CHLV   corresponds to double modules...
      SHAPE pcon phi1=calg_shift(ii) dphi=DphiMod*calg_Nmodule(ii),
            nz=3 zi={0,cut_length,Hleng},
            rmn={Calg_rmin,Calg_Rmin,cut_radius} rmx={Rmax,
            Rmax,Rmax}
      CREATE CPHI
      DO imod = 1, calg_Nmodule(ii)
      angular_offset=calg_shift(ii)+3.0+6.0*(imod-1)
      IF ( ii==1 ) THEN
      POSITION CPHI alphaz=angular_offset ncopy=imod 
      ENDIF
      IF ( ii.eq.2.and.calg_ModMap(imod).gt.0 ) THEN
      POSITION CPHI alphaz=angular_offset ncopy=imod 
      ENDIF
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CPHI
      BLOCK CPHI   corresponds to a single module
      ATTRIBUTE CPHI seen=1 colo=5
      SHAPE pcon phi1=-3.0 dphi=6.0 nz=3 zi={0,
            cut_length,Hleng} rmn={Calg_rmin,Calg_Rmin,cut_radius},
            rmx={Rmax,Rmax,Rmax}
      current_depth = calg_Rmin
      c_dep=current_depth
      CREATE CBTW dx=calg_FrontThk
      POSITION CBTW x=calg_Rmin+calg_FrontThk z=current_depth/tan_theta/2 
      current_depth = current_depth + 2*calg_FrontThk
      layer = 0
      DO super = 1, nint(calg_Nsuper)
      CREATE CSUP
      POSITION CSUP 
      END DO
      CREATE CBTW dx=calg_CompThk
      POSITION CBTW x=current_depth+calg_CompThk z=current_depth/tan_theta/2 
      c_dep=2.*calg_CompThk + 2.*calg_AirThk
      CREATE CBTW dx=calg_BackThk
      POSITION CBTW x=current_depth+c_dep+calg_BackThk z=current_depth/tan_theta/2 
      c_dep=c_dep + 2.*calg_BackThk
      CREATE CBTW dx=calg_SpaceThk
      POSITION CBTW x=current_depth+c_dep+calg_SpaceThk z=current_depth/tan_theta/2 
      c_dep=c_dep + 2.*calg_SpaceThk
      current_depth=current_depth + c_dep
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CSUP
      BLOCK CSUP   is a super layer with few layers inside
      future_depth=current_depth + (calg_NsubLay(super) - super + 1)*layer_width(super)*2 _
            + (smd_width + calg_scintThk(super) + 2.*calg_AbPapThk)*2*(super - 1)
      COMPONENT C A=12.01 Z=6. W=6./21.
      COMPONENT H A=1. Z=1. W=10./21.
      COMPONENT O A=16. Z=8. W=5./21.
      MIXTURE Cellulose isvol=1 dens=0.35
      ATTRIBUTE CSUP seen=0 colo=1
      SHAPE pcon phi1=-3.0 dphi=DphiMod nz=3 zi={0,
            current_depth/tan_theta,future_depth/tan_theta},
            rmn={current_depth,current_depth,future_depth},
            rmx={future_depth,future_depth,future_depth}
      Call CALBPAR( ag_imed,'ABSORBER' )
      DO sub = 1, nint(calg_NsubLay(super))
      layer = layer + 1
      IF ( layer.lt.nint(calg_NsubLay(1)+calg_NsubLay(2)) ) THEN
      CREATE CSCI
      POSITION CSCI x=current_depth+calg_ScintThk(super)+2.*calg_AbPapThk  _
	z=current_depth/tan_theta/2 
      CREATE CPBP
      c_lead_dep=2.*calg_ScintThk(super)+4.*calg_AbPapThk
      POSITION CPBP x=current_depth+c_lead_dep+calg_AbsorThk  _
	z=current_depth/tan_theta/2 
      current_depth = current_depth + 2*layer_width(super)
      ELSE
      CREATE CSCI
      POSITION CSCI x=current_depth+calg_ScintThk(2)+2.*calg_AbPapThk  _
	z=current_depth/tan_theta/2 
      current_depth = current_depth+c_lead_dep
      ENDIF
      CHECK   layer==nint(calg_Nsmd)
      CREATE CSMD
      POSITION CSMD x=current_depth+smd_width z=current_depth/tan_theta/2 
      current_depth = current_depth + 2*smd_width
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CPBP
      BLOCK CPBP   is a block that an author failed to adequately document
      MATERIAL Lead
      MATERIAL Lead_CPBP isvol=0
      ATTRIBUTE CPBP seen=1 colo=1
      SHAPE box dx=calg_AbsorThk dy=current_depth*tan(TwoPi/360*DphiT)-calg_CrackWd,
            dz=current_depth/tan_theta/2
      Call CALBPAR( ag_imed,'ABSORBER' )
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CSCI
      BLOCK CSCI   a scintillator layer.
      MATERIAL polystyren
      MATERIAL Cpolystyren isvol=1
      ATTRIBUTE CSCI seen=1 colo=4
      SHAPE box dx=calg_ScintThk(super) dy=current_depth*tan(TwoPi/360*DphiT)-calg_CrackWd,
            dz=current_depth/tan_theta/2
      Call CALBPAR( ag_imed,'ABSORBER' )
      Call GStPar(ag_imed, 'BIRK1', 1.)
      Call GStPar(ag_imed, 'BIRK2', RKB2sc)
      Call GStPar(ag_imed, 'BIRK3', RKB3sc)
      HITS CSUP eta:deta:(0,1) y:1:(-13,+13) birk:0:(0,10)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CBTW
      BLOCK CBTW   is the Module Front Back Plate
      MATERIAL Aluminium
      MATERIAL Alu_CBTW isvol=1
      ATTRIBUTE CBTW seen=1 colo=6
      SHAPE box dy=current_depth*tan(TwoPi/360*DphiT)-calg_CrackWd,
            dz=current_depth/tan_theta/2
      Call CALBPAR( ag_imed,'ABSORBER' )
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CSMD
      BLOCK CSMD   is the shower maximum detector envelope
      current = - smd_width
      COMPONENT C A=12.01 Z=6. W=6./21.
      COMPONENT H A=1. Z=1. W=10./21.
      COMPONENT O A=16. Z=8. W=5./21.
      MIXTURE Cellulose isvol=1 dens=0.35
      ATTRIBUTE CSMD seen=1 colo=6
      SHAPE box dx=smd_width dy=current_depth*tan(TwoPi/120.)-calg_CrackWd,
            dz=current_depth/tan_theta/2
      Call CALBPAR( ag_imed,'SENSITIVE' )
      CREATE CSMG
      POSITION CSMG x=-smd_width+calg_g10SbThk+2.*calg_AbPapThk 
      POSITION CSMG x=smd_width-calg_g10SbThk-2.*calg_AbPapThk 
      current = current + 2.*calg_g10SbThk + 2.*calg_AbPapThk
      DO j = 1, 4
      current_csda=-current_depth/tan_theta/2
      IF ( j.eq.1 ) THEN
      eta_lenght=calg_Netfirst*(calg_Seta1Wdh+calg_Set12Wdh)
      CREATE CSDA
      POSITION CSDA x=current+calg_SmAlfThk  _
	z=current_csda+2.*calg_SmetaWdh+eta_lenght 
      ELSEIF ( j.eq.2 ) THEN
      current_csda=current_csda+2.*(calg_SmetaWdh+eta_lenght)
      eta_lenght=calg_Netfirst*(calg_Seta2Wdh+calg_Set12Wdh)
      CREATE CSDA
      POSITION CSDA x=current+calg_SmAlfThk z=current_csda+eta_lenght 
      ELSEIF ( j.eq.3 ) THEN
      eta_lenght=calg_Netfirst*(calg_Seta1Wdh+calg_Set12Wdh)
      CREATE CSDA
      POSITION CSDA x=current+3.*calg_SmAlfThk  _
	z=current_csda+2.*calg_SmetaWdh+eta_lenght thetax=90 phix=180 
      ELSEIF ( j.eq.4 ) THEN
      current_csda=current_csda+2.*(calg_SmetaWdh+eta_lenght)
      eta_lenght=calg_Netfirst*(calg_Seta2Wdh+calg_Set12Wdh)
      CREATE CSDA
      POSITION CSDA x=current+3.*calg_SmAlfThk z=current_csda+eta_lenght thetax=90  _
	phix=180 
      ENDIF
      END DO
      CREATE CSMC
      POSITION CSMC x=current+calg_SmAlfThk y=calg_SmAlfWdh+calg_SmAffWdh 
      POSITION CSMC x=current+calg_SmAlfThk y=-calg_SmAlfWdh-calg_SmAffWdh 
      CREATE CSMB
      POSITION CSMB x=current+3.*calg_SmAlfThk y=calg_SmAlfWdh+calg_SmAfbWdh 
      POSITION CSMB x=current+3.*calg_SmAlfThk y=-calg_SmAlfWdh-calg_SmAfbWdh 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CSMG
      BLOCK CSMG   is G10 front back plate
      COMPONENT Si A=28.08 Z=14 W=0.6*1*28./60.
      COMPONENT O A=16 Z=8 W=0.6*2*16./60.
      COMPONENT C A=12 Z=6 W=0.4*8*12./174.
      COMPONENT H A=1 Z=1 W=0.4*14*1./174.
      COMPONENT O A=16 Z=8 W=0.4*4*16./174.
      MIXTURE g10 isvol=0 dens=1.7
      ATTRIBUTE CSMG seen=1 colo=1
      SHAPE box dx=calg_g10SbThk
      Call CALBPAR( ag_imed,'SENSITIVE' )
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CSDA
      BLOCK CSDA   is Al block with sensitive gas volume
      MATERIAL Aluminium
      MATERIAL Alu_CSDA isvol=0
      ATTRIBUTE CSDA seen=1 colo=6 serial=j
      SHAPE box dx=calg_SmAlfThk dy=calg_SmAlfWdh,
            dz=eta_lenght
      Call CALBPAR( ag_imed,'SENSITIVE' )
      CREATE CSME
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CSMC
      BLOCK CSMC   is the front first (last) Al rib
      MATERIAL Aluminium
      MATERIAL Alu_CSMC isvol=0
      ATTRIBUTE CSMC seen=1 colo=6
      SHAPE box dx=calg_SmAlfThk dy=calg_SmAffWdh
      Call CALBPAR( ag_imed,'SENSITIVE' )
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CSMB
      BLOCK CSMB   is the back first (last) Al rib
      MATERIAL Aluminium
      MATERIAL Alu_CSMB isvol=0
      ATTRIBUTE CSMB seen=1 colo=6
      SHAPE box dx=calg_SmAlfThk dy=calg_SmAfbWdh
      Call CALBPAR( ag_imed,'SENSITIVE' )
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CSME
      BLOCK CSME   is the part of CSDA Al box with Ar/CO2 sensiteve gas
      MATERIAL Aluminium
      MATERIAL Alu_CSME isvol=0
      ATTRIBUTE CSME seen=1 colo=6
      SHAPE division ndiv=nint(calg_NSmdAlw) iaxis=2
      Call CALBPAR( ag_imed,'SENSITIVE' )
      DO i = 1, 2
      CREATE CSHI
      IF ( i.eq.1 ) THEN
      POSITION CSHI x=-calg_SmAlfThk+calg_SmGasThk 
      ELSE
      POSITION CSHI x=2.*calg_SmGasThk-calg_SmAlfThk 
      ENDIF
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CSHI
      BLOCK CSHI   is a sensiteve Ar/CO2 box
      COMPONENT Ar A=39.95 Z=18. W=0.9
      COMPONENT C A=12.01 Z=6. W=0.1*1*12.01/44.01
      COMPONENT O A=16. Z=8. W=0.1*2*16./44.01
      MIXTURE sens_gas isvol=1 dens=0.0018015
      ATTRIBUTE CSHI seen=1 colo=4
      IF ( i.eq.1 ) THEN
      SHAPE box dx=calg_SmGasThk dy=calg_SmGasWdh
      ELSE
      SHAPE tubs rmin=0 rmax=calg_SmGasRad phi1=270,
            phi2=450
      ENDIF
      Call CALBPAR( ag_imed,'SENSITIVE' )
      Call GStPar(ag_imed, 'STRA', 1.0)
      h_eta1=2.*(calg_Seta1Wdh + calg_Set12Wdh)
      sh_eta1=calg_Netfirst*h_eta1
      h_eta2=2.*(calg_Seta2Wdh + calg_Set12Wdh)
      sh_eta2=calg_Netsecon*h_eta2
      h_phi1=2.*(calg_SphiWdh + calg_SphidWdh)
      h_phi2=h_phi1
      sh_phi1=calg_NPhistr*h_phi1
      sh_phi2=sh_phi1
      HITS CSDA type=1:2: eta:0.1:(0,1) etsp:h_eta1:(0,sh_eta1) eloss:0:(0,1)
      HITS CSDA type=2:2: eta:0.1:(0,1) etsp:h_eta2:(0,sh_eta2) eloss:0:(0,1)
      HITS CSDA type=3:2: eta:0.1:(0,1) etsp:h_phi1:(0,sh_phi1) eloss:0:(0,1)
      HITS CSDA type=4:2: eta:0.1:(0,1) etsp:h_phi2:(0,sh_phi2) eloss:0:(0,1)
      ENDBLOCK
      <W> '===>> 	[End AgML Module CALBGEO1]	 <<==='; (A32,/,/);
      END! Module CALBGEO1
