      MODULE BbcmGeo    is the Beam Beam Counter Modules GEOmetry
      Created 15 march 2002
      Author Yiqun Wang
      +CDE,agecom,gconst,gcunit.
      CONTENT BBCM,BBCA,THXM,SHXT,BPOL,CLAD
      STRUCTURE BBCG { version,onoff(3),zdis(2)}
      STRUCTURE HEXG { type,irad,clad,thick,zoffset,xoffset,yoffset}
      real *4 actr,srad,lrad,ztotal,x0,y0,theta0,phi0,xtrip,ytrip,rtrip,thetrip,rsing,
            thesing

      Integer *4 I_trip/0/,J_sing/0/

      FILL BBCG		! BBC geometry
      Version = 1.0 !  Geometry version
      Onoff  = {  3,  3,  3} !   0 off, 1 west on, 2 east on, 3 both on: for BBC,Small tiles,Large tiles 
      zdis  = {   374.24,  -374.24} !   z-coord from center in STAR (715/2+6*2.54+1=373.8) 
      ENDFILL
      FILL HEXG		! hexagon tile geometry
      Type = 1 ! 1 for small hex tile, 2 for large tile
      irad = 4.174 ! inscribing circle radius =9.64/2*sin(60)=4.174
      clad = 0.1 ! cladding thickness
      thick = 1.0 ! thickness of tile
      zoffset = 1.5 ! z-offset from center of BBCW (1), or BBCE (2)
      xoffset = 0.0 ! x-offset center from beam for BBCW (1), or BBCE (2)
      yoffset = 0.0 ! y-offset center from beam for BBCW (1), or BBCE (2)
      ENDFILL
      FILL HEXG		! hexagon tile geometry
      Type = 2 ! 1 for small hex tile, 2 for large tile
      irad = 16.697 ! inscribing circle radius (4x that of small one)
      clad = 0.1 ! cladding of tile
      thick = 1.0 ! thickness of tile
      zoffset = -1.5 ! z-offset from center of BBCW (1), or BBCE (2)
      xoffset = 0.0 ! x-offset center from beam for BBCW (1), or BBCE (2)
      yoffset = 0.0 ! y-offset center from beam for BBCW (1), or BBCE (2)
      ENDFILL
      use BBCG
      Prin1 bbcg_version;
      ('BBCMGEO version ', F4.2)
      COMPONENT C5 A=12 Z=6 W=5      *10000
      COMPONENT H4 A=1 Z=1 W=4      *10000
      COMPONENT O2 A=16 Z=8 W=2      *10000
      COMPONENT Al A=27 Z=13 W=0.2302 *10000
      MIXTURE ALKAP dens=1.432
      use HEXG type=1
      srad   = hexg_irad*6.0;
      ztotal = hexg_thick+2*abs(hexg_zoffset);
      use HEXG type=2
      lrad   = hexg_irad*6.0;
      ztotal = ztotal+hexg_thick+2*abs(hexg_zoffset);
      CREATE BBCM
      IF ( bbcg_OnOff(1)==1|bbcg_OnOff(1)==3 ) THEN
      POSITION BBCM in CAVE x=0 y=0 z=bbcg_zdis(1) 
      ENDIF
      IF ( bbcg_OnOff(1)==2|bbcg_OnOff(1)==3 ) THEN
      POSITION BBCM in CAVE x=0 y=0 z=bbcg_zdis(2) alphay=180 
      ENDIF
      Prin1 ;
      ('BBCMGEO finished')
      ! ---------------------------------------------------------------------------------- BBCM
      BLOCK BBCM   is one BBC East or West module
      MATERIAL Air
      MEDIUM standard
      ATTRIBUTE BBCM seen=0 colo=7
      SHAPE tube rmin=0 rmax=lrad dz=ztotal/2
      use HEXG type=1
      IF ( bbcg_OnOff(2)==1|bbcg_OnOff(2)==3 ) THEN
      CREATE BBCA
      POSITION BBCA in BBCM x=hexg_xoffset y=hexg_yoffset z=hexg_zoffset 
      ENDIF
      use HEXG type=2
      IF ( bbcg_OnOff(3)==1|bbcg_OnOff(3)==3 ) THEN
      CREATE BBCA
      POSITION BBCA in BBCM x=hexg_xoffset y=hexg_yoffset z=hexg_zoffset 
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- BBCA
      BLOCK BBCA   is one BBC Annulus module
      MATERIAL Air
      MEDIUM standard
      ATTRIBUTE BBCA seen=0 colo=3
      SHAPE tube rmin=hexg_irad rmax=hexg_irad*6.0,
            dz=hexg_thick/2
      x0=hexg_irad*tan(pi/6.0)
      y0=hexg_irad*3.0
      rtrip = sqrt(x0*x0 + y0*y0)
      theta0 = atan(y0/x0)
      DO I_trip = 0, 5
      phi0 = I_trip*60
      thetrip = theta0+I_trip*pi/3.0
      xtrip = rtrip*cos(thetrip)
      ytrip = rtrip*sin(thetrip)
      CREATE THXM
      POSITION THXM in BBCA x=xtrip y=ytrip z=0 thetax=90 phix=phi0 phiy=90+phi0  _
	thetaz=0 phiz=0 konly='MANY' 
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- THXM
      BLOCK THXM   is on Triple HeXagonal Module
      MATERIAL Air
      MEDIUM standard
      ATTRIBUTE THXM seen=0 colo=2
      SHAPE tube rmin=0 rmax=hexg_irad*2.0/sin(pi/3.0),
            dz=hexg_thick/2
      DO J_sing = 0, 2
      rsing=hexg_irad/sin(pi/3.0)
      thesing=J_sing*pi*2.0/3.0
      CREATE SHXT
      POSITION SHXT in THXM x=rsing*cos(thesing) y=rsing*sin(thesing) z=0 
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- SHXT
      BLOCK SHXT   is one Single HeXagonal Tile
      MATERIAL Air
      MEDIUM standard
      ATTRIBUTE SHXT seen=1 colo=6
      SHAPE pgon phi1=0 dphi=360 npdiv=6 nz=2,
            zi={-hexg_thick/2,hexg_thick/2} rmn={0,0} rmx={hexg_irad,
            hexg_irad}
      actr = hexg_irad - hexg_clad
      CREATE CLAD
      POSITION CLAD in SHXT x=0 y=0 z=0 
      CREATE BPOL
      POSITION BPOL in SHXT x=0 y=0 z=0 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- CLAD
      BLOCK CLAD   is one CLADding of BPOL active region
      MATERIAL ALKAP
      ATTRIBUTE CLAD seen=1 colo=3
      SHAPE pgon phi1=0 dphi=360 npdiv=6 nz=2,
            zi={-hexg_thick/2,hexg_thick/2} rmn={actr,actr},
            rmx={hexg_irad,hexg_irad}
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- BPOL
      BLOCK BPOL   is one Bbc POLystyren active scintillator layer
      MATERIAL POLYSTYREN
      MATERIAL Cpolystyren isvol=1
      ATTRIBUTE BPOL seen=1 colo=4
      SHAPE pgon phi1=0 dphi=360 npdiv=6 nz=2,
            zi={-hexg_thick/2,hexg_thick/2} rmn={0,0} rmx={actr,
            actr}
      Call GStPar(ag_imed, 'CUTGAM', 0.00008)
      Call GStPar(ag_imed, 'CUTELE', 0.001)
      Call GStPar(ag_imed, 'BCUTE', 0.0001)
      Call GStPar(ag_imed, 'CUTNEU', 0.001)
      Call GStPar(ag_imed, 'CUTHAD', 0.001)
      Call GStPar(ag_imed, 'CUTMUO', 0.001)
      Call GStPar(ag_imed, 'BIRK1', 1.000)
      Call GStPar(ag_imed, 'BIRK2', 0.013)
      Call GStPar(ag_imed, 'BIRK3', 9.6E-6)
      HITS BPOL tof:16:C(0,1.0E-6) birk:0:C(0,10)
      ENDBLOCK
      <W> '===>> 	[End AgML Module BbcmGeo]	 <<==='; (A32,/,/);
      END! Module BbcmGeo
