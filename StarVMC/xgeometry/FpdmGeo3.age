      MODULE FPDMGEO3    is the Forward Pion Detector Modules GEOmetry
      Created    27 Nov 2006
      Author Akio Ogawa
      +CDE,agecom.
      +CDE,gconst.
      +CDE,gcunit.
      CONTENT FBOX,FTOW,FLXF,FWAL,FLGR,FPCT,FUMT,
      PBPT,FSHM,FHMS,FXGT,FALU,FBAS,FENC,
      FEAC,FEBC,FECC,FEDC,FETC,FERC,FESC,
      FEEC
      STRUCTURE FMCG { Version,ChkvSim,PbPlate}
      STRUCTURE FPOS { iMod,iType,X,Y,Z,AY,AZ}
      STRUCTURE FBXD { Type,Height,Depth,Width,NX,NY,NXL,NYL,XOffset,ZOffset,PSOffset,
            SmdOff}
      STRUCTURE FLGG { Type,Width,Depth,DGap,AlThick,PhCathDz,PhCathR,MuMetDz,MuMetR}
      STRUCTURE FLGM { Type,Density,RadLen,PbCont,CritEne,MoliereR}
      STRUCTURE PBPD { Z,Width,Height,Thick}
      STRUCTURE FMXG { Version,Sapex,Sbase,Sgap,NStrip,G10Width,G10hgt,G10Thick}
      STRUCTURE INSE { Width,Depth,Height,SheetDpt,HoleGap,HoleDepth,HoleHeight,GapDepth,
            GapHeight,GateDepth,Ra,Rb,Diam,RMax,GateGap}
      INTEGER ChkvSim,iMod,iType,Type,PbPlate

      INTEGER i,j,m,serN

      REAL xx,yy,zz,x1,y1,z1,ztot,rtot,wid,widx,widy,bwid,x0,widL

      REAL ztotsmd,wtotsmd,zsmd,zsmd2,wsmd

      REAL xsmdh,ysmdh,zsmdh,xsmdv,ysmdv,zsmdv

      REAL xlcOffSet,BZOffSet

      REAL basewidth,distancer,xoffFECC,xoffFEDC,xshift

      REAL xoffFENC,yoffFENC,zoffFENC,zoffFECC

      REAL tmp(7)

      INTEGER N

      PARAMETER (N = 12)
      REAL E(N)

      REAL rindex_PbG(N)

      REAL rindex_SiRub(N)

      REAL rindex_PhCath(N)

      REAL rindex_Alm(N)

      REAL rindex_MuMet(N)

      REAL absco_PbG(N)

      REAL absco_SiRub(N)

      REAL absco_PhCath(N)

      REAL absco_Alm(N)

      REAL absco_MuMet(N)

      REAL effic_PhCath(N)

      REAL effic_all(N)

      EXTERNAL FFPDSTEP
      EXTERNAL FPCTSTEP
      FILL FMCG		! Fpd Calorimeter basic data
      Version = 8.0 !  Geometry version
      ChkvSim = 0 !  = 0 dE, = 1 Cherenkov simulation for PbG
      PbPlate = 0 !  =0 no plate, =1 with plate
      ENDFILL
      FILL FPOS		! Fpd EN positioning
      iMod = 1 !  Module# (EN=1, ES=2, WN=3, WS=4, ...)
      iType = 1 !  Type (1=7*7+SMD+PreShower, 2=17*34+14*28)
      X = -48.19 !  X distance from beam to edge of detector
      Y = 0.0 !  Y distance from beam to edge of detector
      Z = -779.0 !  Z distance from IP to surface of detector
      AY = 180 !  Angle aroound Y (0 for west, 180 for east)
      AZ = 0 !  Angle around Z
      ENDFILL
      FILL FPOS		! Fpd ES positioning
      iMod = 2 !  Module# (EN=1, ES=2, WS=3, WS=4, ...)
      iType = 1 !  Type (1=7*7+SMD+PreShower, 2=17*34+14*28)
      X = 48.19 !  X distance from beam to edge of detector
      Y = 0.0 !  Y distance from beam to edge of detector
      Z = -779.0 !  Z distance from IP to surface of detector
      AY = 180 !  Angle aroound Y (0 for west, 180 for east)
      AZ = 0 !  Angle around Z
      ENDFILL
      FILL FPOS		! FMS WN positioning
      iMod = 3 !  Module# (EN=1, ES=2, WN=3, WS=4, ...)
      iType = 2 !  Type (1=7*7+SMD+PreShower, 2=17*34+14*28)
      X = -0.3 !  X distance from beam to edge of detector
      Y = 0.0 !  Y distance from beam to edge of detector
      Z = 706.3 !  Z distance from IP to surface of detector
      AY = 0 !  Angle aroound Y (0 for west, 180 for east)
      ENDFILL
      FILL FPOS		! FMS WS positioning
      iMod = 4 !  Module# (EN=1, ES=2, WN=3, WS=4, ...)
      iType = 2 !  Type (1=7*7+SMD+PreShower, 2=17*34+14*28)
      X = 0.3 !  X distance from beam to edge of detector
      Y = 0.0 !  Y distance from beam to edge of detector
      Z = 706.3 !  Z distance from IP to surface of detector
      AY = 0 !  Angle aroound Y (0 for west, 180 for east)
      AZ = 0 !  Angle around Z
      ENDFILL
      FILL FBXD		! FPD Box Geometry
      Type = 1 !  Type (1=7*7+SMD+PreShower, 2=17*34+14*28)
      Height = 100 !  Box height
      Depth = 96 !  Box Depth
      Width = 0.0 !  Box Width (only for FMS)
      NX = 7 !  Number of pbg in x
      NY = 7 !  number of pbg in y
      NXL = 0 !  Number of large pbg in x
      NYL = 0 !  number of large pbg in y
      XOffset = 2.54 !  tower x offset from box edge to PbG edge
      ZOffset = 19 !  tower z offset from box edge to PbG edge
      PSOffset = 2.0 !  PreShower z offset from box edge to PbG edge
      SmdOff = 8.0 !  SMD V-plane z offset from box edge
      ENDFILL
      FILL FBXD		! FPD Box Geometry
      Type = 2 !  Type (1=7*7+SMD+PreShower, 2=17*34+14*28)
      Height = 210 !  Box height
      Depth = 98.425 !  Box Depth
      Width = 127.0 !  Box Width (only for FMS)
      NX = 12 !  Number of pbg in x
      NY = 24 !  number of pbg in y
      NXL = 17 !  Number of large pbg in x
      NYL = 34 !  number of large pbg in y
      XOffset = (6*3.822+0.5*5.812)+(127.0-17*5.812)/2.0 !  tower x offset from box edge to PbG edge
      ZOffset = 10.4 !  tower z offset from box edge to PbG edge
      PSOffset = 0 !  PreShower z offset from box edge to PbG edge
      SmdOff = 0.0 !  SMD z offset from box edge
      ENDFILL
      FILL FLGG		! PbG detector geometry
      Type = 1 !  Type (1=Protovino Cell, 2=FLab Cell)
      Width = 3.81 !  PbG width
      Depth = 45.0 !  PbG depth
      DGap = 0.01 !  Gap between PbG
      AlThick = 0.001 !  almunim wrap thickness (real)
      PhCathDz = 2.0 !  Photo Cathode thickness
      PhCathR = 1.8 !  Photo Cathode radius  (real)
      MuMetDz = 11.0 !  Mu Metal Length
      MuMetR = 1.9 !  Mu metal outer Radius  (real)
      ENDFILL
      FILL FLGG		! PbG detector geometry
      Type = 2 !  Type (1=Protovino Cell, 2=FLab Cell)
      Width = 5.8 !  PbG width
      Depth = 60.2 !  PbG depth
      DGap = 0.01 !  Gap between PbG
      AlThick = 0.001 !  almunim wrap thickness (real)
      PhCathDz = 2.0 !  Photo Cathode thickness
      PhCathR = 1.8 !  Photo Cathode radius  (real)
      MuMetDz = 11.0 !  Mu Metal Length
      MuMetR = 1.9 !  Mu metal outer Radius  (real)
      ENDFILL
      FILL FLGM		! PbG detector materials
      Type = 1 !  Type (1=Protovino Cell, 2=FLab Cell)
      Density = 3.86 !  gdensity [/cm^3]
      RadLen = 2.5 !  radiation length [cm]
      PbCont = 65.4 !  PbO content [%]
      CritEne = 0.0158 !  critical energy [GeV]
      MoliereR = 3.32 !  Moliere radius [cm]
      ENDFILL
      FILL FLGM		! PbG detector materials
      Type = 2 !  Type (1=Protovino Cell, 2=FLab Cell)
      Density = 3.61 !  gdensity [/cm^3]
      RadLen = 3.21 !  radiation length [cm]
      PbCont = 45.0 !  PbO content [%]
      ENDFILL
      FILL PBPD		! Pb Plate dimensions
      Width = 33.02 !  Width
      Height = 33.02 !  Height
      Thick = 1.27 !  Thickness
      ENDFILL
      FILL FMXG		! SMD geometry
      Version = 2 !  Geometry version
      Sapex = 0.7 !  Scintillator strip apex
      Sbase = 1.0 !  Scintillator strip base
      Sgap = 0.0064 !  Gap between strips
      NStrip = 50 !  # of strips
      G10Width = 27.0 !  G10 plate width
      G10hgt = 27.0 !  G10 plate height
      G10Thick = 0.15 !  G10 plate thickness
      ENDFILL
      FILL INSE		! INSERT geometry
      Width = 19.30908 !  Width of the insert (x)
      Depth = 98.425 !  Depth of the insert (z)
      Height = 38.608 !  Height of the insert (y)
      SheetDpt = 1.27 !  Depth of the steel parts (x,y)
      HoleGap = 5.08 !  Distance between edge of INSERT and square hole
      HoleDepth = 25.4 !  Depth of the square hole (z)
      HoleHeight = 30.48 !  Height of the square hole (y)
      GapDepth = 19.685 !  Depth of the iron distancer (z)
      GapHeight = 7.874 !  Height of the iron distancer (y)
      GateDepth = 1.905 !  Depth of one of the three Gates (z)
      GateGap = 12.7 !  Distance between the back edge of the box and last gate
      Ra = 13.97 !  Radius of the inner circle of tubes
      Rb = 20.6375 !  Radius of the outer circle of tubes
      Diam = 6.0325 !  Diameter of the tubes
      RMax = 10.16 !  Radius of the inner tube for beampipe
      ENDFILL
      use FMCG
      Prin1 fmcg_version;
      ('****************** FPDMGEO version ', F4.2)
      DO m = 1, 4
      use FPOS iMod=m
      use FBXD Type=FPOS_iType
      IF ( FBXD_Type.eq.1 ) THEN
      use FLGG Type=1
      wid  =  FLGG_Width + FLGG_DGap + FLGG_AlThick*2.0
      ztot = (FLGG_Depth + FLGG_AlThick + FLGG_MuMetDz)/2.0
      rtot = FBXD_NX*wid/2.0
      bwid = rtot+FBXD_XOffset
      ELSE
      use FLGG Type=2
      wid  =  FLGG_Width + FLGG_DGap + FLGG_AlThick*2.0
      ztot = (FLGG_Depth + FLGG_AlThick + FLGG_MuMetDz)/2.0
      rtot = FBXD_NXL*wid/2.0
      bwid = rtot
      ENDIF
      IF ( m.ge.3 ) THEN
      bwid=FBXD_Width/2.0
      IF ( FPOS_X.gt.0.0 ) THEN
      xx=FPOS_X+bwid
      ELSEIF ( FPOS_X.eq.0.0 ) THEN
      xx=0.0
      ELSE
      xx=FPOS_X-bwid
      ENDIF
      ELSE
      IF ( FPOS_X.gt.0.0 ) THEN
      xx=FPOS_X+bwid
      ELSEIF ( FPOS_X.eq.0.0 ) THEN
      xx=0.0
      ELSE
      xx=FPOS_X-bwid
      ENDIF
      ENDIF
      IF ( FPOS_Y.gt.0.0 ) THEN
      yy=FPOS_Y+FBXD_Height/2.0
      ELSEIF ( FPOS_Y.eq.0.0 ) THEN
      yy=0.0
      ELSE
      yy=FPOS_Y-FBXD_Height/2.0
      ENDIF
      IF ( FPOS_Z.gt.0.0 ) THEN
      zz=FPOS_Z+FBXD_Depth/2.0
      ELSE
      zz=FPOS_Z-FBXD_Depth/2.0
      ENDIF
      serN=0
      IF ( m.eq.4 ) THEN
      serN=1
      ENDIF
      IF ( m.ne.7 ) THEN
      CREATE FBOX
      POSITION FBOX in CAVE x=xx y=yy z=zz alphay=FPOS_AY konly='MANY' 
      ENDIF
      END DO
      ! ---------------------------------------------------------------------------------- FBOX
      BLOCK FBOX   is one Pb-Glass fpd detector
      MATERIAL Air
      MEDIUM standard
      ATTRIBUTE FBOX seen=1 colo=2 serial=serN
      IF ( FBXD_Type.eq.2 ) THEN
      SHAPE box dx=FBXD_Width/2.0 dy=FBXD_Height/2.0,
            dz=FBXD_Depth/2.0
      ELSE
      SHAPE box dx=bwid dy=FBXD_Height/2.0 dz=FBXD_Depth/2.0
      ENDIF
      use FLGG Type=2
      widL = FLGG_Width + FLGG_DGap + FLGG_AlThick*2.0              !large cell width
      use FLGG Type=1
      use FLGM Type=1
      wid  =  FLGG_Width + FLGG_DGap + FLGG_AlThick*2.0             !small cell width
      ztot =(FLGG_Depth + FLGG_AlThick + FLGG_MuMetDz)/2.0
      rtot = FBXD_NX*wid/2.0
      bwid = rtot - FBXD_XOffset
      CREATE FTOW
      CREATE PBPT
      CREATE FSHM
      IF ( FBXD_Type.eq.2.and.FPOS_iMod.eq.4 ) THEN
      x0 = - rtot - FBXD_XOffset + wid/2.0                        ! x0 start from north (near beam) for
      widx = wid                                                ! WS (FMS-south) module
      ELSE
      x0 =  rtot + FBXD_XOffset - wid/2.0                         ! x0 start from south for north/top/bottom module
      widx = -wid                                               ! since fpd is symmetric, true for ES module too
      ENDIF
      IF ( FBXD_Type.eq.2 ) THEN
      y1 =  FBXD_NY*wid/2.0 - wid/2.0 + (16*widL-FBXD_NY*wid)/2.0   !in order to correct the differences between
      widy = wid+(16.0*widL-FBXD_NY*wid)/23.0                       !3 small cells and 2 large ones (see again in 17 lines)
      ELSE
      y1 =  FBXD_NY*wid/2.0 - wid/2.0
      widy = wid
      ENDIF
      z1 = - FBXD_Depth/2.0 + FBXD_ZOffset + ztot
      DO i = 1, FBXD_NY
      x1=x0
      DO j = 1, FBXD_NX
      IF ( FBXD_Type.eq.2.and.j.lt.6.and.i.gt.7.and.i.lt.18 ) THEN
      x1=x1+widx
      ELSE
      CREATE FTOW
      POSITION FTOW x=x1 y=y1 z=z1 
      x1=x1+widx
      ENDIF
      END DO
      y1 =  y1-widy
      END DO
      IF ( FBXD_Type.eq.1 ) THEN
      x1=x0
      y1= -rtot + ztot
      z1=-FBXD_Depth/2.0  + FBXD_PSOffset + wid/2.0
      DO j = 1, FBXD_NX
      CREATE FTOW
      POSITION FTOW x=x1 y=y1 z=z1 alphax=90 
      x1=x1-wid
      END DO
      IF ( fmcg_PbPlate==1 ) THEN
      CREATE PBPT
      POSITION PBPT x=0 y=0 z=PBPD_Thick/2.0-FBXD_Depth/2.0 
      ENDIF
      ztotsmd=FMXG_G10Thick+FMXG_Sapex
      CREATE FSHM
      POSITION FSHM x=0 y=0 z=FBXD_SmdOff+ztotsmd-FBXD_Depth/2.0 
      ENDIF
      IF ( FBXD_Type.ge.2 ) THEN
      use FLGG Type=2
      use FLGM Type=2
      wid  = FLGG_Width + FLGG_DGap +  FLGG_AlThick*2.0
      ztot = FLGG_Depth/2.0
      rtot = FBXD_NXL*wid/2.0
      bwid = rtot
      xlcOffSet = (FBXD_Width-FBXD_NXL*wid)/2.0          ! Large Cells OffSet in X
      IF ( FPOS_iMod.eq.4 ) THEN
      x0 =  -bwid + wid/2.0 - xlcOffSet
      widx = wid
      ELSEIF ( FPOS_iMod.eq.3 ) THEN
      x0 =  +bwid - wid/2.0 + xlcOffSet
      widx = -wid
      ENDIF
      y1 =  FBXD_NYL*wid/2.0 - wid/2.0
      z1 = -FBXD_Depth/2.0 + FBXD_ZOffset + ztot
      DO i = 1, FBXD_NYL
      x1=x0
      DO j = 1, FBXD_NXL
      IF ( j.lt.9.and.i.gt.9.and.i.lt.26 ) THEN
      x1=x1+widx
      ELSEIF ( (i+j).ge.45 ) THEN
      CREATE FALU
      POSITION FALU x=x1 y=y1 z=z1 
      x1=x1+widx
      ELSEIF ( (j-i).ge.10 ) THEN
      x1=x1+widx
      ELSE
      CREATE FLXF
      POSITION FLXF x=x1 y=y1 z=z1 
      x1=x1+widx
      ENDIF
      END DO
      y1=y1-wid
      END DO
      ENDIF
      IF ( FBXD_Type.eq.2 ) THEN
      use FLGG Type=2
      use FLGM Type=2
      BZOffSet=0.0
      wid  = FLGG_Width + FLGG_DGap
      CREATE FBAS
      POSITION FBAS x=FPOS_X y=-(FBXD_NXL*wid+basewidth/2.0)  _
	z=-FBXD_Depth/2.0+BZOffSet+INSE_Depth/2.0 
      ENDIF
      CREATE FENC
      CREATE FEAC
      CREATE FECC
      CREATE FEDC
      CREATE FEEC
      distancer=INSE_GapHeight - (INSE_Height - 2.0*INSE_SheetDpt)
      xoffFECC=(INSE_SheetDpt - FBXD_Width)/2.0
      zoffFECC= - FBXD_Depth/2.0 + BZOffSet + INSE_Depth - INSE_GateGap
      xoffFEDC=INSE_Width - INSE_SheetDpt
      xoffFENC=(INSE_Width - FBXD_Width)/2.0
      yoffFENC=(INSE_Height - INSE_SheetDpt)/2.0
      zoffFENC= - FBXD_Depth/2.0 + BZOffSet + INSE_Depth/2.0
      xshift=8*5.812 - 12*3.822 + 5*3.822 - INSE_Width    !this is to move insert to small cell edge
      IF ( FBXD_Type.eq.2 ) THEN
      IF ( FPOS_iMod.eq.4 ) THEN
      POSITION FENC x=xoffFENC+xshift y=-yoffFENC z=zoffFENC 
      POSITION FENC x=xoffFENC+xshift y=yoffFENC z=zoffFENC 
      POSITION FEAC x=INSE_Width+xshift-(FBXD_Width+INSE_SheetDpt)/2.0 y=0  _
	z=-FBXD_Depth/2.0+BZOffSet+INSE_Depth/2.0 
      POSITION FECC x=xoffFECC+xshift y=distancer/2.0  _
	z=zoffFECC-INSE_GateDepth-INSE_GapDepth/2.0 
      POSITION FECC x=xoffFECC+xshift y=distancer/2.0  _
	z=zoffFECC-2.0*INSE_GateDepth-3.0*INSE_GapDepth/2.0 
      POSITION FECC x=xoffFECC+xshift y=-distancer/2.0  _
	z=zoffFECC-INSE_GateDepth-INSE_GapDepth/2.0 
      POSITION FECC x=xoffFECC+xshift y=-distancer/2.0  _
	z=zoffFECC-2.0*INSE_GateDepth-3.0*INSE_GapDepth/2.0 
      POSITION FEDC x=xshift+(xoffFEDC-FBXD_Width)/2.0 y=0  _
	z=zoffFECC-INSE_GateDepth/2.0 
      POSITION FEDC x=xshift+(xoffFEDC-FBXD_Width)/2.0 y=0  _
	z=zoffFECC-INSE_GateDepth-INSE_GapDepth-INSE_GateDepth/2.0 
      POSITION FEDC x=xshift+(xoffFEDC-FBXD_Width)/2.0 y=0  _
	z=zoffFECC-2.0*(INSE_GateDepth+INSE_GapDepth)-INSE_GateDepth/2.0 
      ELSEIF ( FPOS_iMod.eq.3 ) THEN
      POSITION FENC x=-xoffFENC-xshift y=-yoffFENC z=zoffFENC 
      POSITION FENC x=-xoffFENC-xshift y=yoffFENC z=zoffFENC 
      POSITION FEAC x=-xshift-INSE_Width+(FBXD_Width+INSE_SheetDpt)/2.0 y=0  _
	z=-FBXD_Depth/2.0+BZOffSet+INSE_Depth/2.0 
      POSITION FECC x=-xoffFECC-xshift y=distancer/2.0  _
	z=zoffFECC-INSE_GateDepth-INSE_GapDepth/2.0 
      POSITION FECC x=-xoffFECC-xshift y=distancer/2.0  _
	z=zoffFECC-2.0*INSE_GateDepth-3.0*INSE_GapDepth/2.0 
      POSITION FECC x=-xoffFECC-xshift y=-distancer/2.0  _
	z=zoffFECC-INSE_GateDepth-INSE_GapDepth/2.0 
      POSITION FECC x=-xoffFECC-xshift y=-distancer/2.0  _
	z=zoffFECC-2.0*INSE_GateDepth-3.0*INSE_GapDepth/2.0 
      POSITION FEEC x=-xshift-(xoffFEDC-FBXD_Width)/2.0 y=0  _
	z=zoffFECC-INSE_GateDepth/2.0 
      POSITION FEEC x=-xshift-(xoffFEDC-FBXD_Width)/2.0 y=0  _
	z=zoffFECC-INSE_GateDepth-INSE_GapDepth-INSE_GateDepth/2.0 
      POSITION FEEC x=-xshift-(xoffFEDC-FBXD_Width)/2.0 y=0  _
	z=zoffFECC-2.0*(INSE_GateDepth+INSE_GapDepth)-INSE_GateDepth/2.0 
      ENDIF
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FTOW
      BLOCK FTOW   is one PbG Tower
      MATERIAL Air
      ATTRIBUTE FTOW seen=1 colo=2
      SHAPE box dx=wid/2.0 dy=wid/2.0 dz=ztot
      CREATE FWAL
      POSITION FWAL z=-ztot+(FLGG_AlThick+FLGG_depth)/2.0 
      CREATE FUMT
      POSITION FUMT z=-ztot+FLGG_AlThick+FLGG_depth+FLGG_MuMetDz/2.0 
      CREATE FPCT
      POSITION FPCT z=-ztot+FLGG_AlThick+FLGG_depth+FLGG_PhCathDz/2.0 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FWAL
      BLOCK FWAL   is almunum wrapper
      MATERIAL Aluminium
      ATTRIBUTE FWAL seen=1 colo=3
      SHAPE box dx=FLGG_Width/2.0+FLGG_AlThick,
            dy=FLGG_Width/2.0+FLGG_AlThick dz=FLGG_Depth/2.0+FLGG_AlThick/2.0
      IF ( fmcg_ChkvSim==1 ) THEN
      Call GSCKOV( %Imed,N,E,ABSCO_Alm,EFFIC_all,RINDEX_Alm )
      ENDIF
      CREATE FLGR
      POSITION FLGR z=+FLGG_AlThick/2.0 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FLGR
      BLOCK FLGR   is Lead Glass detector
      COMPONENT Pb A=207.19 Z=82 W=.60712
      COMPONENT K A=39.102 Z=19 W=.02324
      COMPONENT Si A=28.088 Z=14 W=.14771
      COMPONENT O A=15.999 Z=8 W=.22041
      COMPONENT As A=74.922 Z=33 W=.00152
      MIXTURE PbG dens=FLGM_Density
      MEDIUM leadglass isvol=1
      ATTRIBUTE FLGR seen=1 colo=4
      SHAPE box dx=FLGG_Width/2.0 dy=FLGG_Width/2.0,
            dz=FLGG_depth/2.0
      HITS FLGR elos:0:(0,50)
      IF ( FMCG_ChkvSim==1 ) THEN
      Call GSCKOV( %Imed,N,E,ABSCO_PbG,EFFIC_All,RINDEX_PbG )
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FLXF
      BLOCK FLXF   is Lead Glass detector
      COMPONENT Pb A=207.19 Z=82 W=.41774
      COMPONENT K A=39.102 Z=19 W=.04151
      COMPONENT Si A=28.088 Z=14 W=.21047
      COMPONENT O A=15.999 Z=8 W=.29330
      COMPONENT Na A=22.990 Z=11 W=.03710
      MIXTURE F2 dens=FLGM_Density
      MEDIUM leadglass isvol=1
      ATTRIBUTE FLXF seen=1 colo=4
      SHAPE box dx=FLGG_Width/2.0 dy=FLGG_Width/2.0,
            dz=FLGG_depth/2.0
      HITS FLXF elos:0:(0,50)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FALU
      BLOCK FALU   is Aluminium Base Cell
      MATERIAL Aluminium
      ATTRIBUTE FALU seen=1 colo=1
      SHAPE box dx=FLGG_Width/2.0 dy=FLGG_Width/2.0,
            dz=FLGG_depth/2.0
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FBAS
      BLOCK FBAS   is Steel Base Plate
      MATERIAL Iron
      ATTRIBUTE FBAS seen=1 colo=1
      SHAPE box dx=FBXD_Width/2.0 dy=basewidth/2.0,
            dz=INSE_Depth/2.0
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FENC
      BLOCK FENC   is Steel Enclosure
      MATERIAL Iron
      ATTRIBUTE FENC seen=1 colo=5
      SHAPE box dx=INSE_Width/2.0 dy=INSE_SheetDpt/2.0,
            dz=INSE_Depth/2.0
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FEAC
      BLOCK FEAC   is Steel Enclosure
      MATERIAL Iron
      ATTRIBUTE FEAC seen=1 colo=5
      SHAPE box dx=INSE_SheetDpt/2.0 dy=(INSE_Height-2.0*INSE_SheetDpt)/2.0,
            dz=INSE_Depth/2.0
      CREATE FEBC
      POSITION FEBC x=0.0 y=0 z=-INSE_Depth/2.0+INSE_HoleDepth/2.0+INSE_HoleGap 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FEBC
      BLOCK FEBC   is Air square hole
      MATERIAL Air
      ATTRIBUTE FEBC seen=1 colo=5
      SHAPE box dx=INSE_SheetDpt/2.0 dy=INSE_HoleHeight/2.0,
            dz=INSE_HoleDepth/2.0
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FECC
      BLOCK FECC   is Steel distancer
      MATERIAL Iron
      ATTRIBUTE FECC seen=1 colo=5
      SHAPE box dx=INSE_SheetDpt/2.0 dy=INSE_GapHeight/2.0,
            dz=INSE_GapDepth/2.0
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FEDC
      BLOCK FEDC   is Steel Enclosure part on south
      MATERIAL Iron
      ATTRIBUTE FEDC seen=1 colo=5
      SHAPE box dx=(xoffFEDC)/2.0 dy=(INSE_Height-2.0*INSE_SheetDpt)/2.0,
            dz=INSE_GateDepth/2.0
      CREATE FERC
      POSITION FERC x=-(xoffFEDC)/2.0 y=0 z=0.0 
      CREATE FESC
      POSITION FESC x=-(xoffFEDC)/2.0+INSE_Ra*cos(PI*5.0/12.0)  _
	y=INSE_Ra*sin(PI*5.0/12.0) z=0.0 
      POSITION FESC x=-(xoffFEDC)/2.0+INSE_Ra*cos(PI/4.0) y=INSE_Ra*sin(PI/4.0) z=0.0 
      POSITION FESC x=-(xoffFEDC)/2.0+INSE_Ra*cos(PI/12.0) y=INSE_Ra*sin(PI/12.0)  _
	z=0.0 
      POSITION FESC x=-(xoffFEDC)/2.0+INSE_Ra*cos(PI/12.0) y=-INSE_Ra*sin(PI/12.0)  _
	z=0.0 
      POSITION FESC x=-(xoffFEDC)/2.0+INSE_Ra*cos(PI/4.0) y=-INSE_Ra*sin(PI/4.0)  _
	z=0.0 
      POSITION FESC x=-(xoffFEDC)/2.0+INSE_Ra*cos(PI*5.0/12.0)  _
	y=-INSE_Ra*sin(PI*5.0/12.0) z=0.0 
      POSITION FESC x=-(xoffFEDC)/2.0+INSE_Rb*cos(PI/4.0) y=INSE_Rb*sin(PI/4.0) z=0.0 
      POSITION FESC x=-(xoffFEDC)/2.0+INSE_Rb*cos(PI/4.0) y=-INSE_Rb*sin(PI/4.0)  _
	z=0.0 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FEEC
      BLOCK FEEC   is Steel Enclosure part on north
      MATERIAL Iron
      ATTRIBUTE FEEC seen=1 colo=5
      SHAPE box dx=(xoffFEDC)/2.0 dy=(INSE_Height-2.0*INSE_SheetDpt)/2.0,
            dz=INSE_GateDepth/2.0
      CREATE FETC
      POSITION FETC x=(xoffFEDC)/2.0 y=0 z=0.0 
      CREATE FESC
      POSITION FESC x=(xoffFEDC)/2.0-INSE_Ra*cos(PI*5.0/12.0)  _
	y=INSE_Ra*sin(PI*5.0/12.0) z=0.0 
      POSITION FESC x=(xoffFEDC)/2.0-INSE_Ra*cos(PI/4.0) y=INSE_Ra*sin(PI/4.0) z=0.0 
      POSITION FESC x=(xoffFEDC)/2.0-INSE_Ra*cos(PI/12.0) y=INSE_Ra*sin(PI/12.0)  _
	z=0.0 
      POSITION FESC x=(xoffFEDC)/2.0-INSE_Ra*cos(PI/12.0) y=-INSE_Ra*sin(PI/12.0)  _
	z=0.0 
      POSITION FESC x=(xoffFEDC)/2.0-INSE_Ra*cos(PI/4.0) y=-INSE_Ra*sin(PI/4.0) z=0.0 
      POSITION FESC x=(xoffFEDC)/2.0-INSE_Ra*cos(PI*5.0/12.0)  _
	y=-INSE_Ra*sin(PI*5.0/12.0) z=0.0 
      POSITION FESC x=(xoffFEDC)/2.0-INSE_Rb*cos(PI/4.0) y=INSE_Rb*sin(PI/4.0) z=0.0 
      POSITION FESC x=(xoffFEDC)/2.0-INSE_Rb*cos(PI/4.0) y=-INSE_Rb*sin(PI/4.0) z=0.0 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FETC
      BLOCK FETC   is Air Enclosure part
      MATERIAL Air
      ATTRIBUTE FETC seen=1 colo=6
      SHAPE tubs rmin=0.0 rmax=INSE_RMax phi1=90,
            phi2=-90 dz=INSE_GateDepth/2.0
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FERC
      BLOCK FERC   is Air Enclosure part
      MATERIAL Air
      ATTRIBUTE FERC seen=1 colo=6
      SHAPE tubs rmin=0.0 rmax=INSE_RMax phi1=-90,
            phi2=90 dz=INSE_GateDepth/2.0
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FESC
      BLOCK FESC   is Air Enclosure part
      MATERIAL Air
      ATTRIBUTE FESC seen=1 colo=6
      SHAPE tube rmin=0.0 rmax=INSE_Diam/2.0 dz=INSE_GateDepth/2.0
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FPCT
      BLOCK FPCT   is Photo Cathode
      MATERIAL Air
      MEDIUM PhotCath isvol=1
      ATTRIBUTE LPCT seen=1 colo=6
      SHAPE tube rmin=0 rmax=FLGG_PhCathR dz=FLGG_PhCathDz/2.0
      IF ( FMCG_ChkvSim==1 ) THEN
      Call GSCKOV( %Imed,N,E,ABSCO_PhCath,EFFIC_PhCath,RINDEX_PhCath )
      HITS FPCT user:0:(0,100000)
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FUMT
      BLOCK FUMT   is mu metal
      MATERIAL iron
      ATTRIBUTE LUMT seen=1 colo=5
      SHAPE tube rmin=FLGG_PhCathR rmax=FLGG_MuMetR,
            dz=FLGG_MuMetDz/2.0
      IF ( fmcg_ChkvSim==1 ) THEN
      Call GSCKOV( %Imed,N,E,ABSCO_MuMet,EFFIC_All,RINDEX_MuMet )
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- PBPT
      BLOCK PBPT   is pb plate
      MATERIAL Lead
      ATTRIBUTE PBPT seen=1 colo=7
      SHAPE box dx=PBPD_Width/2.0 dy=PBPD_Height/2.0,
            dz=PBPD_Thick/2.0
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FSHM
      BLOCK FSHM   is the SHower Max section
      MATERIAL Air
      ATTRIBUTE FSHM seen=1 colo=4
      SHAPE box dx=FMXG_G10Width/2.0 dy=FMXG_G10hgt/2.0,
            dz=ztotsmd
      wsmd=FMXG_Sbase/2.0 + FMXG_Sgap
      wtotsmd=(FMXG_Nstrip + 1)*wsmd
      zsmd= - ztotsmd + FMXG_G10Thick/2.0
      CREATE FXGT
      POSITION FXGT x=0 y=0 z=zsmd 
      xsmdv= - wtotsmd/2.0 - FMXG_Sgap/2.0 + wsmd
      ysmdv=0.0
      zsmdv=zsmd + FMXG_G10Thick/2.0 + FMXG_Sapex/2.0
      DO i = 1, FMXG_Nstrip
      IF ( mod(i,2)!=0 ) THEN
      CREATE FHMS
      POSITION FHMS x=xsmdv y=ysmdv z=zsmdv 
      ELSE
      CREATE FHMS
      POSITION FHMS x=xsmdv y=ysmdv z=zsmdv alphax=180 
      ENDIF
      xsmdv=xsmdv+wsmd
      END DO
      zsmd2=zsmdv + FMXG_G10Thick/2.0 + FMXG_Sapex/2.0
      CREATE FXGT
      POSITION FXGT x=0 y=0 z=zsmd2 
      xsmdh=0.0
      ysmdh= - wtotsmd/2.0 - FMXG_Sgap/2.0 + wsmd
      zsmdh=zsmd2 + FMXG_G10Thick/2.0 + FMXG_Sapex/2.0
      CREATE FHMS
      DO i = 1, FMXG_Nstrip
      IF ( mod(i,2)!=0 ) THEN
      POSITION FHMS x=xsmdh y=ysmdh z=zsmdh ort=Y-XZ 
      ELSE
      POSITION FHMS x=xsmdh y=ysmdh z=zsmdh ort=YX-Z 
      ENDIF
      ysmdh=ysmdh+wsmd
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FXGT
      BLOCK FXGT   is the G10 layer in the SMax
      COMPONENT Si A=28.08 Z=14 W=0.6*1*28./60.
      COMPONENT O A=16 Z=8 W=0.6*2*16./60.
      COMPONENT C A=12 Z=6 W=0.4*8*12./174.
      COMPONENT H A=1 Z=1 W=0.4*14*1./174.
      COMPONENT O A=16 Z=8 W=0.4*4*16./174.
      MIXTURE g10 dens=1.7
      ATTRIBUTE FXGT seen=1 colo=7
      SHAPE box dx=FMXG_G10Width/2 dy=FMXG_G10hgt/2,
            dz=FMXG_G10Thick/2
      Call GStPar(ag_imed, 'CUTGAM', 0.00001)
      Call GStPar(ag_imed, 'CUTELE', 0.00001)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- FHMS
      BLOCK FHMS   is sHower Max Strip
      MATERIAL POLYSTYREN
      MATERIAL Cpolystyren isvol=1
      ATTRIBUTE FHMS seen=1 colo=2
      SHAPE trd1 dx1=0 dx2=fmxg_Sbase/2.0 dy=FMXG_G10hgt/2.0,
            dz=fmxg_Sapex/2.0
      Call GStPar(ag_imed, 'CUTGAM', 0.00008)
      Call GStPar(ag_imed, 'CUTELE', 0.001)
      Call GStPar(ag_imed, 'BCUTE', 0.0001)
      Call GStPar(ag_imed, 'BIRK1', 1.)
      Call GStPar(ag_imed, 'BIRK2', 0.0130)
      Call GStPar(ag_imed, 'BIRK3', 9.6E-6)
      HITS FHMS birk:0:(0,10)
      ENDBLOCK
      <W> '===>> 	[End AgML Module FPDMGEO3]	 <<==='; (A32,/,/);
      END! Module FPDMGEO3
