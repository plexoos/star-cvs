      MODULE ECALGEO    is the EM EndCap Calorimeter GEOmetry
      Created    26 jan 1996
      Author Rashid Mehdiyev
      +CDE,agecom.
      +CDE,gconst.
      +CDE,gcunit.
      CONTENT EAGA,EALP,ECAL,ECHC,ECVO,ECGH,EFLP,EHMS,ELED,EMGT,EMOD,EPER,EPSB,ERAD,
            ERCM,ERSM,ESHM,ESEC,ESCI,ESPL,ESSP,EMSS,ETAR,EXGT,EXSG
      STRUCTURE EMCG { Version,int onoff,int fillmode}
      STRUCTURE EMCS { Type,ZOrig,ZEnd,EtaMin,EtaMax,PhiMin,PhiMax,Offset,Nsupsec,
            Nsector,Nsection,Nslices,Front,AlinCell,Frplast,Bkplast,PbPlate,LamPlate,BckPlate,
            Hub,Rmshift,SMShift,GapPlt,GapCel,GapSMD,SMDcentr,TieRod(2),Bckfrnt,GapHalf,Cover}
      STRUCTURE EETR { Type,Etagr,Phigr,Neta,EtaBin(13)}
      STRUCTURE ESEC { Isect,FPlmat,Cell,Scint,Nlayer}
      STRUCTURE EMXG { Version,Sapex,Sbase,Rin,Rout,F4}
      STRUCTURE EXSE { Jsect,Zshift,Sectype(6)}
      INTEGER I_section,J_section,Ie,is,isec,i_str,Nstr,Type,ii,jj,cut,fsect,lsect,
            ihalf,filled,myKase

      REAL center,Plate,Cell,G10,diff,halfi,tan_low,tan_upp,RBot,Rtop,Deta,etax,sq2,
            sq3,dup,dd,d2,d3,rshift,dphi,radiator,orgkeep,endkeep

      REAL maxcnt,msecwd,mxgten,curr,Secwid,Section,curcl,EtaTop,EtaBot,slcwid,zslice,
            Gap,mgt,xleft,xright,yleft,yright,current,rth,len,p,xc,yc,xx,yy,rbotrad,Rdel,
            dxy,ddn,ddup

      INTEGER N

      PARAMETER (N = 12)
      !* Lambda function tanf
      real tanf
      tanf(etax) = tan(2*atan(exp(-etax)))
      FILL EMCG		! EM EndCAp Calorimeter basic data
      Version = 5.0 !  Geometry version
      OnOff = 3 !  Configurations 0-no, 1-west 2-east 3-both
      FillMode = 3 !  sectors fill mode
      ENDFILL
      FILL EMCS		! EM Endcap Calorimeter geometry
      Type = 1 !  =1 endcap, =2 fpd edcap prototype
      ZOrig = 268.763 !  calorimeter origin in z
      ZEnd = 310.007 !  Calorimeter end in z
      EtaMin = 1.086 !  upper feducial eta cut
      EtaMax = 2.000 !  lower fiducial eta cut
      PhiMin = -90 !  Min phi
      PhiMax = 90 !  Max phi
      Offset = 0.0 !  offset in x
      Nsupsec = 6 !  Number of azimuthal supersectors
      Nsector = 30 !  Number of azimutal sectors (Phi granularity)
      Nslices = 5 !  number of phi slices in supersector
      Nsection = 4 !  Number of readout sections
      Front = 0.953 !  thickness of the front AL plates
      AlinCell = 0.02 !  Aluminim plate in cell
      Frplast = 0.015 !  Front plastic in megatile
      Bkplast = 0.155 !  Fiber routing guides and back plastic
      Pbplate = 0.457 !  Lead radiator thickness
      LamPlate = 0.05 !  Laminated SS plate thickness
      BckPlate = 3.175 !  Back SS plate thickness
      Hub = 3.81 !  thickness of EndCap hub
      Rmshift = 2.121 !  radial shift of module
      smshift = 0.12 !  radial shift of steel support walls
      GapPlt = 0.3/2 !  HALF of the inter-plate gap in phi
      GapCel = 0.03/2 !  HALF of the radial inter-cell gap
      GapSMD = 3.400 !  space for SMD detector
      SMDcentr = 279.542 !  SMD position
      TieRod  = {  160.,   195} !   Radial position of tie rods 
      Bckfrnt = 306.832 !  Backplate front Z
      GapHalf = 0.4 !  1/2 Gap between halves of endcap wheel
      Cover = 0.075 !  Cover of wheel half
      ENDFILL
      FILL EETR		! Eta and Phi grid values
      Type = 1 !  =1 endcap, =2 fpd
      EtaGr = 1.0536 !  eta_top/eta_bot tower granularity
      PhiGr = 0.0981747 !  Phi granularity (radians)
      NEta = 12 !  Eta granularity
      EtaBin  = {     2.0,  1.9008,  1.8065,  1.7168,  1.6317, 
                   1.5507,  1.4738,  1.4007,  1.3312,  1.2651, 
                   1.2023,  1.1427,   1.086} !   Eta rapidities 
      ENDFILL
      FILL ESEC		! First EM section
      ISect = 1 !  Section number
      Nlayer = 1 !  Number of Sci layers along z
      Cell = 1.505 !  Cell full width in z
      Scint = 0.5 !  Sci layer thickness
      ENDFILL
      FILL ESEC		! First EM section
      ISect = 2 !  Section number
      Nlayer = 1 !  Number of Sci layers along z
      Cell = 1.505 !  Cell full width in z
      Scint = 0.5 !  Sci layer thickness
      ENDFILL
      FILL ESEC		! Second EM section
      ISect = 3 !  Section number
      Nlayer = 4 !  Number of Sci layers along z
      Cell = 1.405 !  Cell full width in z
      Scint = 0.4 !  Sci layer thickness
      ENDFILL
      FILL ESEC		! Third EM section
      ISect = 4 !  Section
      Nlayer = 18 !  Number of layers along z
      Cell = 1.405 !  Cell full width in z
      Scint = 0.4 !  Sci layer thickness
      ENDFILL
      FILL ESEC		! 4th EM section
      ISect = 5 !  Section
      Nlayer = 1 !  Number of  layers along z
      Cell = 1.505 !  Cell full width in z
      Scint = 0.5 !  Sci layer thickness
      ENDFILL
      FILL EMXG		! EM Endcap SMD basic data
      Version = 1 !  Geometry version
      Sapex = 0.7 !  Scintillator strip apex
      Sbase = 1.0 !  Scintillator strip base
      Rin = 77.41 !  inner radius of SMD plane
      Rout = 213.922 !  outer radius of SMD plane
      F4 = .15 !  F4 thickness
      ENDFILL
      FILL EXSE		! First SMD section
      JSect = 1 !  Section number
      Zshift = -1.215 !  Section width
      sectype  = {  4,  1,  0,  2,  1,  0} !   1-V,2-U,3-cutV,4-cutU     
      ENDFILL
      FILL EXSE		! Second SMD section
      JSect = 2 !  Section number
      Zshift = 0. !  Section width
      sectype  = {  0,  2,  1,  0,  2,  3} !   1-V,2-U,3-cutV,4-cutU     
      ENDFILL
      FILL EXSE		! Third SMD section
      JSect = 3 !  Section number
      Zshift = 1.215 !  Section width
      sectype  = {  1,  0,  2,  1,  0,  2} !   1-V,2-U,3-cutV,4-cutU     
      ENDFILL
      use EMCG
      sq3 = sqrt(3.)
      sq2 = sqrt(2.)
      Prin1 emcg_version;
      ('ECALGEO version ', F4.2)
      use EMCS type=1
      use EETR type=1
      orgkeep =  emcs_ZOrig
      endkeep =  emcs_ZEnd
      IF ( emcg_OnOff>0 ) THEN
      diff = 0.0
      center  = (emcs_ZOrig+emcs_ZEnd)/2
      Tan_Upp = tanf(emcs_EtaMin)
      Tan_Low = tanf(emcs_EtaMax)
      rth  = sqrt(1. + Tan_Low*Tan_Low)
      rshift  = emcs_Hub * rth
      dup=emcs_Rmshift*Tan_Upp
      dd=emcs_Rmshift*rth
      d2=rshift + dd
      radiator  = emcs_Pbplate + 2*emcs_LamPlate
      dphi = (emcs_PhiMax-emcs_PhiMin)/emcs_Nsector
      CREATE ECAL
      IF ( emcg_OnOff==1|emcg_OnOff==3 ) THEN
      POSITION ECAL in CAVE z=+center 
      ENDIF
      IF ( emcg_OnOff==2|emcg_OnOff==3 ) THEN
      POSITION ECAL in CAVE z=-center thetaz=180 
      ENDIF
      IF ( section>emcs_Zend ) THEN
      Prin0 section,emcs_Zend;
      (' ECALGEO error: sum of sections exceeds maximum ',2F12.4)
      ENDIF
      Prin1 section;
      (' EndCap calorimeter total depth ',F12.4)
      ENDIF
      Prin1 ;
      ('ECALGEO finished')
      ! ---------------------------------------------------------------------------------- ECAL
      BLOCK ECAL   is one EMC EndCap wheel
      MATERIAL Air
      MEDIUM standard
      ATTRIBUTE ECAL seen=1 colo=7
      SHAPE cone dz=(emcs_Zend-emcs_ZOrig)/2 rmn1=orgkeep*Tan_Low-d2,
            rmx1=orgkeep*Tan_Upp+dup,
            rmn2=endkeep*Tan_Low-d2 rmx2=endkeep*Tan_Upp+dup
      DO ihalf = 1, 2
      filled=1
      halfi = -105 + (ihalf-1)*180
      IF ( (ihalf==2&emcg_FillMode<3) ) THEN
      filled = 0
      ENDIF
      CREATE EAGA
      POSITION EAGA alphaz=halfi 
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EAGA
      BLOCK EAGA   is half of wheel air volume for the EndCap module
      ATTRIBUTE EAGA seen=1 colo=1 serial=filled
      MATERIAL Air
      SHAPE cons dz=(emcs_Zend-emcs_ZOrig)/2 rmn1=orgkeep*Tan_Low-d2,
            rmx1=orgkeep*Tan_Upp+dup,
            rmn2=endkeep*Tan_Low-d2 rmx2=endkeep*Tan_Upp+dup,
            phi1=emcs_PhiMin phi2=emcs_PhiMax
      IF ( filled==1 ) THEN
      CREATE EMSS
      POSITION EMSS konly='MANY' 
      curr = orgkeep ; curcl = endkeep
      CREATE ECGH
      POSITION ECGH alphaz=90 konly='ONLY' 
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EMSS
      BLOCK EMSS   is steel support of the EndCap module
      ATTRIBUTE EMSS seen=1 colo=1
      MATERIAL Iron
      SHAPE cons dz=(emcs_Zend-emcs_ZOrig)/2 rmn1=orgkeep*Tan_Low-d2,
            rmx1=orgkeep*Tan_Upp+dup,
            rmn2=endkeep*Tan_Low-d2 rmx2=endkeep*Tan_Upp+dup,
            phi1=emcs_PhiMin phi2=emcs_PhiMax
      zslice = emcs_ZOrig
      Prin1 zslice;
      (' Front Al plane starts at: ',F12.4)
      slcwid  = emcs_Front
      CREATE EFLP
      POSITION EFLP z=zslice-center+slcwid/2 
      zslice = zslice + slcwid
      Prin1 zslice;
      (' First calorimeter starts at: ',F12.4)
      fsect = 1; lsect = 3
      slcwid = emcs_SMDcentr - emcs_GapSMD/2 - zslice
      CREATE ECVO
      POSITION ECVO z=zslice-center+slcwid/2 
      slcwid  = emcs_GapSMD
      zslice = emcs_SMDcentr - emcs_GapSMD/2
      Prin1 section,zslice;
      (' 1st calorimeter ends, SMD starts at: ',2F10.5)
      CREATE ESHM
      POSITION ESHM z=zslice-center+slcwid/2 
      zslice = zslice + slcwid
      Prin1 zslice;
      (' SMD ends at: ',F10.5)
      slcwid = 0
      fsect = 4; lsect = 5
      DO I_section = fsect, lsect
      use ESEC Isect=I_section
      Slcwid  = slcwid + esec_cell*esec_Nlayer
      END DO
      slcwid = emcs_bckfrnt - zslice
      CREATE ECVO
      POSITION ECVO z=zslice-center+slcwid/2 
      zslice = emcs_bckfrnt
      Prin1 section,zslice;
      (' 2nd calorimeter ends, Back plate starts at: ',2F10.5)
      slcwid  = emcs_BckPlate
      CREATE ESSP
      POSITION ESSP z=zslice-center+slcwid/2 
      zslice = zslice + slcwid
      Prin1 zslice;
      (' BackPlate ends at: ',F10.5)
      slcwid = emcs_Zend - emcs_ZOrig
      CREATE ERCM
      DO i_str = 1, 2
      DO is = 1, 5
      xx = emcs_phimin + is*30
      yy = xx*degrad
      xc = cos(yy)*emcs_TieRod(i_str)
      yc = sin(yy)*emcs_TieRod(i_str)
      POSITION ERCM x=xc y=yc z=0 
      END DO
      END DO
      rth = orgkeep*Tan_Upp + dup + 2.5/2
      xc =(endkeep - orgkeep)*Tan_Upp
      len = .5*(endkeep + orgkeep)*Tan_Upp + dup + 2.5/2
      yc = emcs_Zend - emcs_ZOrig
      p = atan(xc/yc)/degrad
      CREATE EPSB
      DO is = 1, 6
      xx = -75 + (is-1)*30
      yy = xx*degrad
      xc = cos(yy)*len
      yc = sin(yy)*len
      POSITION EPSB x=xc y=yc alphaz=xx 
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ECVO
      BLOCK ECVO   is one of EndCap Volume with megatiles and radiators
      MATERIAL Air
      ATTRIBUTE ECVO seen=1 colo=3
      SHAPE cons dz=slcwid/2 rmn1=zslice*Tan_Low-dd,
            rmx1=zslice*Tan_Upp+dup rmn2=(zslice+slcwid)*Tan_Low-dd,
            rmx2=(zslice+slcwid)*Tan_Upp+dup
      DO J_section = 1, 6
      IF ( emcg_fillmode>1 ) THEN
      filled=1
      ELSEIF ( j_section>1&j_section<6 ) THEN
      filled=1
      ELSE
      filled=0
      ENDIF
      d3 = 75 - (J_section-1)*30
      CREATE EMOD
      POSITION EMOD alphaz=d3 ncopy=J_section 
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ESHM
      BLOCK ESHM   is the SHower Max section
      MATERIAL Air
      ATTRIBUTE ESHM seen=1 colo=4
      SHAPE cons dz=SlcWid/2 rmn1=zslice*Tan_Low-dd,
            rmx1=(zslice)*Tan_Upp+dup rmn2=(zslice+slcwid)*Tan_Low-dd,
            rmx2=(zslice+slcwid)*Tan_Upp+dup,
            phi1=emcs_PhiMin phi2=emcs_PhiMax
      use EMXG Version=1
      maxcnt = emcs_SMDcentr
      Prin1 zslice,section,center;
      (' Z start for SMD,section: ',3F12.4)
      DO J_section = 1, 3
      use EXSE Jsect=J_section
      current = exse_Zshift
      secwid  = emxg_Sapex + 2.*emxg_F4
      section = maxcnt + exse_zshift
      Prin1 j_section,current,section,secwid;
      (' layer, Z, width : ',i3,3F12.4)
      rbot=section*Tan_Low
      rtop=section*Tan_Upp
      Prin1 j_section,rbot,rtop;
      (' layer, rbot,rtop : ',i3,2F12.4)
      CREATE ESPL
      POSITION ESPL z=current 
      END DO
      CREATE ERSM
      DO i_str = 1, 2
      DO is = 1, 5
      xx = emcs_phimin + (is)*30
      yy = xx*degrad
      xc = cos(yy)*emcs_TieRod(i_str)
      yc = sin(yy)*emcs_TieRod(i_str)
      POSITION ERSM x=xc y=yc z=0 
      END DO
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ECGH
      BLOCK ECGH   is air Gap between endcap Half wheels
      MATERIAL Air
      MEDIUM standard
      ATTRIBUTE ECGH seen=0 colo=7
      SHAPE trd1 dx1=orgkeep*Tan_Upp+dup dx2=endkeep*Tan_Upp+dup,
            dy=(emcs_gaphalf+emcs_cover)/2,
            dz=(emcs_Zend-emcs_ZOrig)/2
      rth = emcs_GapHalf + emcs_cover
      xx=curr*Tan_Low - d2
      xleft = sqrt(xx*xx - rth*rth)
      yy=curr*Tan_Upp + dup
      xright = sqrt(yy*yy - rth*rth)
      secwid = yy - xx
      xx=curcl*Tan_Low - d2
      yleft = sqrt(xx*xx - rth*rth)
      yy=curcl*Tan_Upp + dup
      yright = sqrt(yy*yy - rth*rth)
      slcwid = yy - xx
      xx=(xleft + xright)/2
      yy=(yleft + yright)/2
      xc = yy - xx
      len =(xx + yy)/2
      yc = curcl - curr
      p = atan(xc/yc)/degrad
      rth = - (emcs_GapHalf + emcs_cover)/2
      CREATE ECHC
      POSITION ECHC x=len y=rth 
      POSITION ECHC x=-len y=rth alphaz=180 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ECHC
      BLOCK ECHC   is steel EndCap Half Cover
      ATTRIBUTE ECHC seen=1 colo=1
      MATERIAL Iron
      SHAPE trap dz=(curcl-curr)/2 thet=p phi=0,
            h1=emcs_cover/2 bl1=secwid/2 tl1=secwid/2 alp1=0,
            h2=emcs_cover/2 bl2=slcwid/2 tl2=slcwid/2,
            alp2=0
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ESSP
      BLOCK ESSP   is Stainless Steel back Plate
      MATERIAL Iron
      ATTRIBUTE ESSP seen=1 colo=6 fill=1
      SHAPE cons dz=emcs_BckPlate/2 rmn1=zslice*Tan_Low-dd,
            rmx1=zslice*Tan_Upp+dup rmn2=(zslice+slcwid)*Tan_Low-dd,
            rmx2=(zslice+slcwid)*Tan_Upp+dup,
            phi1=emcs_PhiMin phi2=emcs_PhiMax
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EPSB
      BLOCK EPSB   is Projectile Stainless steel Bar
      MATERIAL Iron
      ATTRIBUTE EPSB seen=1 colo=6 fill=1
      SHAPE trap dz=(emcs_Zend-emcs_ZOrig)/2 thet=p,
            phi=0 h1=2.0/2 bl1=2.5/2 tl1=2.5/2 alp1=0,
            h2=2.0/2 bl2=2.5/2 tl2=2.5/2 alp2=0
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ERCM
      BLOCK ERCM   is stainless steel tie Rod in CaloriMeter sections
      MATERIAL Iron
      ATTRIBUTE ERSM seen=1 colo=6 fill=1
      SHAPE tube rmin=0 rmax=1.0425 dz=slcwid/2
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ERSM
      BLOCK ERSM   is stainless steel tie Rod in Shower Max
      MATERIAL Iron
      ATTRIBUTE ERSM seen=1 colo=6 fill=1
      SHAPE tube rmin=0 rmax=1.0425 dz=slcwid/2
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EMOD
      BLOCK EMOD   is one module of the EM EndCap
      ATTRIBUTE EMOD seen=1 colo=3 serial=filled
      MATERIAL Air
      SHAPE cons dz=slcwid/2 rmn1=zslice*Tan_Low-dd,
            rmx1=zslice*Tan_Upp+dup rmn2=(zslice+slcwid)*Tan_Low-dd,
            rmx2=(zslice+slcwid)*Tan_Upp+dup,
            phi1=emcs_PhiMin/emcs_Nsupsec phi2=emcs_PhiMax/emcs_Nsupsec
      section = zslice
      curr = zslice + slcwid/2
      DO I_section = fsect, lsect
      use ESEC Isect=I_section
      Secwid  = esec_cell*esec_Nlayer
      IF ( I_section==3|I_section==5 ) THEN
      Secwid  = Secwid - radiator
      ELSEIF ( I_section==4 ) THEN
      Secwid  = Secwid - esec_cell + radiator
      ENDIF
      CREATE ESEC
      POSITION ESEC z=section-curr+secwid/2 
      section = section + secwid
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ESEC
      BLOCK ESEC   is a single EM section
      ATTRIBUTE ESEC seen=1 colo=1 serial=filled
      MATERIAL Air
      MEDIUM standard
      SHAPE cons dz=secwid/2 rmn1=(section-diff)*Tan_Low-dd,
            rmx1=(section-diff)*Tan_Upp+dup,
            rmn2=(section+secwid-diff)*Tan_Low-dd rmx2=(section+secwid-diff)*Tan_Upp+dup
      len = - secwid/2
      current = section
      mgt = esec_scint + emcs_AlinCell + emcs_FrPlast + emcs_BkPlast
      gap = esec_cell - radiator - mgt
      Prin2 I_section,section;
      (' ESEC:I_section,section',i3,F12.4)
      DO is = 1, esec_Nlayer
      Cell = esec_cell
      plate = radiator
      IF ( is==nint(esec_Nlayer)&(I_section==3|I_section==5) ) THEN
      Cell = mgt + gap
      Plate=0
      ELSEIF ( I_section==4&is==1 ) THEN
      Cell = radiator
      ENDIF
      Prin2 I_section,is,len,cell,current;
      (' ESEC:I_section,is,len,cell,current ',2i3,3F12.4)
      IF ( I_section==4&is==1 ) THEN
      cell = radiator + .14
      CREATE ERAD
      POSITION ERAD z=len+(cell)/2 
      len = len + cell
      current = current + cell
      ELSE
      cell = mgt
      IF ( filled==1 ) THEN
      CREATE EMGT
      POSITION EMGT z=len+(gap+cell)/2 
      xx = current + (gap+cell)/2
      Prin2 I_section,is,xx;
      (' MEGA I_section,is ',2i3,F10.4)
      ENDIF
      len = len + cell + gap
      current = current + cell + gap
      IF ( Plate>0 ) THEN
      cell = radiator
      CREATE ERAD
      POSITION ERAD z=len+cell/2 
      len = len + cell
      current = current + cell
      ENDIF
      ENDIF
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EMGT
      BLOCK EMGT   is a megatile EM section
      ATTRIBUTE EMGT seen=1 colo=1
      MATERIAL Air
      myKase=2
      IF ( (I_section==1|I_section==2|I_section==5) ) THEN
      myKase=1
      ENDIF
      IF ( myKase==1 ) THEN
      MATERIAL Air_EMGT1 isvol=0
      ELSE
      MATERIAL Air_EMGT2 isvol=0
      ENDIF
      SHAPE cons dz=mgt/2 rmn1=(current-diff)*Tan_Low-dd,
            rmx1=(current-diff)*Tan_Upp+dup rmn2=(current+mgt-diff)*Tan_Low-dd,
            rmx2=(current+mgt-diff)*Tan_Upp+dup
      IF ( myKase==1 ) THEN
      Call GStPar(ag_imed, 'CUTGAM', 0.00001)
      Call GStPar(ag_imed, 'CUTELE', 0.00001)
      ELSE
      Call GStPar(ag_imed, 'CUTGAM', 0.00008)
      Call GStPar(ag_imed, 'CUTELE', 0.001)
      Call GStPar(ag_imed, 'BCUTE', 0.0001)
      ENDIF
      DO isec = 1, nint(emcs_Nslices)
      CREATE EPER
      POSITION EPER alphaz=(emcs_Nslices/2-isec+0.5)*dphi 
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EPER
      BLOCK EPER   is a EM subsection period (super layer)
      MATERIAL POLYSTYREN
      ATTRIBUTE EPER seen=1 colo=1
      SHAPE cons dz=mgt/2 rmn1=(current-diff)*Tan_Low-dd,
            rmx1=(current-diff)*Tan_Upp+dup rmn2=(current+mgt-diff)*Tan_Low-dd,
            rmx2=(current+mgt-diff)*Tan_Upp+dup,
            phi1=emcs_PhiMin/emcs_Nsector,
            phi2=+emcs_PhiMax/emcs_Nsector
      curcl = current + mgt/2
      DO ie = 1, nint(eetr_NEta)
      EtaBot  = eetr_EtaBin(ie)
      EtaTop  = eetr_EtaBin(ie+1)
      RBot=(curcl-diff)*Tanf(EtaBot)
      IF ( Plate>0 ) THEN
      RTop=min((curcl-diff)*Tanf(EtaTop),                     ((current-diff)*Tan_Upp+dup))
      ELSE
      RTop=min((curcl-diff)*Tanf(EtaTop),                     ((current-diff)*Tan_Upp+dup))
      ENDIF
      CHECK  RBot<RTop
      xx=tan(pi*emcs_PhiMax/180.0/emcs_Nsector)
      yy=cos(pi*emcs_PhiMax/180.0/emcs_Nsector)
      CREATE ETAR
      POSITION ETAR x=(RBot+RTop)/2 ort=YZX 
      Prin2 ie,EtaTop,EtaBot,rbot,rtop;
      (' EPER : ie,EtaTop,EtaBot,rbot,rtop ',i3,4F12.4)
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ETAR
      BLOCK ETAR   is one CELL of scintillator, fiber and plastic
      ATTRIBUTE ETAR seen=1 colo=4
      SHAPE trd1 dx1=RBot*xx-emcs_GapCel/yy dx2=RTop*xx-emcs_GapCel/yy,
            dy=mgt/2 dz=(RTop-RBot)/2
      CREATE EALP
      POSITION EALP y=(-mgt+emcs_AlinCell)/2 
      G10 = esec_scint
      CREATE ESCI
      POSITION ESCI y=(-mgt+G10)/2+emcs_AlinCell+emcs_FrPlast 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ESCI
      BLOCK ESCI   is the active scintillator (polystyren) layer
      MATERIAL POLYSTYREN
      MATERIAL Cpolystyren isvol=1
      ATTRIBUTE ESCI seen=1 colo=7 fill=0
      SHAPE trd1 dy=esec_scint/2 dz=(RTop-RBot)/2-emcs_GapCel
      Call GStPar(ag_imed, 'CUTGAM', 0.00008)
      Call GStPar(ag_imed, 'CUTELE', 0.001)
      Call GStPar(ag_imed, 'BCUTE', 0.0001)
      Call GStPar(ag_imed, 'CUTNEU', 0.001)
      Call GStPar(ag_imed, 'CUTHAD', 0.001)
      Call GStPar(ag_imed, 'CUTMUO', 0.001)
      Call GStPar(ag_imed, 'BIRK1', 1.)
      Call GStPar(ag_imed, 'BIRK2', 0.013)
      Call GStPar(ag_imed, 'BIRK3', 9.6E-6)
      HITS ESCI birk:0:(0,10)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ERAD
      BLOCK ERAD   is radiator
      MATERIAL Iron
      ATTRIBUTE ERAD seen=1 colo=6 fill=1
      SHAPE cons dz=radiator/2 rmn1=(current)*Tan_Low-dd,
            rmx1=(current)*Tan_Upp+dup rmn2=(current+cell)*Tan_Low-dd,
            rmx2=(current+radiator)*Tan_Upp+dup
      CREATE ELED
      POSITION ELED 
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ELED
      BLOCK ELED   is lead absorber Plate
      MATERIAL Lead
      MATERIAL Lead_ELED isvol=0
      ATTRIBUTE ELED seen=1 colo=4 fill=1
      SHAPE tubs rmin=(current)*Tan_Low rmax=(current+emcs_Pbplate)*Tan_Upp,
            dz=emcs_Pbplate/2
      Call GStPar(ag_imed, 'CUTGAM', 0.00008)
      Call GStPar(ag_imed, 'CUTELE', 0.001)
      Call GStPar(ag_imed, 'BCUTE', 0.0001)
      Call GStPar(ag_imed, 'CUTNEU', 0.001)
      Call GStPar(ag_imed, 'CUTHAD', 0.001)
      Call GStPar(ag_imed, 'CUTMUO', 0.001)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EFLP
      BLOCK EFLP   is First Aluminium plate
      MATERIAL Aluminium
      ATTRIBUTE EFLP seen=1 colo=3 fill=1
      SHAPE cons dz=emcs_Front/2 rmn1=68.813 rmx1=(zslice-diff)*Tan_Upp+dup,
            rmn2=68.813 rmx2=(zslice+slcwid-diff)*Tan_Upp+dup,
            phi1=emcs_PhiMin,
            phi2=emcs_PhiMax
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EALP
      BLOCK EALP   is ALuminium Plate in calorimeter cell
      MATERIAL Aluminium
      MATERIAL StrAluminium isvol=0
      ATTRIBUTE EALP seen=1 colo=1
      SHAPE trd1 dy=emcs_AlinCell/2 dz=(RTop-RBot)/2
      Call GStPar(ag_imed, 'CUTGAM', 0.00001)
      Call GStPar(ag_imed, 'CUTELE', 0.00001)
      Call GStPar(ag_imed, 'LOSS', 1.)
      Call GStPar(ag_imed, 'STRA', 1.)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- ESPL
      BLOCK ESPL   is one of the Shower max PLanes
      MATERIAL Air
      ATTRIBUTE ESPL seen=1 colo=3
      SHAPE tubs rmin=section*Tan_Low-1.526 rmax=(section-secwid/2)*Tan_Upp+dup,
            phi1=emcs_PhiMin,
            phi2=emcs_PhiMax dz=SecWid/2
      use EMXG Version=1
      msecwd =(emxg_Sapex + emxg_F4)/2
      DO isec = 1, 6
      cut=1
      d3 = 75 - (isec-1)*30
      IF ( exse_sectype(isec)==0|(emcg_FillMode==1&(isec==6|isec==1)) ) THEN
      cut = 0
      CREATE EXSG
      POSITION EXSG alphaz=d3 ncopy=isec 
      ELSEIF ( exse_sectype(isec)==1 ) THEN
      CREATE EXSG
      POSITION EXSG alphaz=d3 ncopy=isec 
      CREATE EXGT
      POSITION EXGT z=msecwd alphaz=d3 
      ELSEIF ( exse_sectype(isec)==2 ) THEN
      CREATE EXSG
      POSITION EXSG alphaz=d3 ort=X-Y-Z ncopy=isec 
      CREATE EXGT
      POSITION EXGT z=-msecwd alphaz=d3 
      ELSEIF ( exse_sectype(isec)==3 ) THEN
      cut=2
      CREATE EXSG
      POSITION EXSG alphaz=d3 ncopy=isec 
      CREATE EXGT
      POSITION EXGT z=msecwd alphaz=d3 
      ELSEIF ( exse_sectype(isec)==4 ) THEN
      cut=2
      CREATE EXSG
      POSITION EXSG alphaz=d3 ort=X-Y-Z ncopy=isec 
      CREATE EXGT
      POSITION EXGT z=-msecwd alphaz=d3 
      ENDIF
      END DO
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EXSG
      BLOCK EXSG   is the Shower max Gap for scintillator strips
      ATTRIBUTE EXSG seen=1 colo=7 serial=cut
      MATERIAL Air
      SHAPE tubs rmin=section*Tan_Low-1.526 rmax=(section-secwid/2)*Tan_Upp+dup,
            phi1=emcs_PhiMin/emcs_Nsupsec,
            phi2=emcs_PhiMax/emcs_Nsupsec,
            dz=SecWid/2
      Rbot = emxg_Rin
      Rtop = emxg_Rout
      IF ( cut>0 ) THEN
      IF ( cut==1 ) THEN
      Rdel = 3.938
      Nstr = 288
      ELSE
      Rdel = -.475
      Nstr = 285
      ENDIF
      rth = .53*rdel        ! .53 --- tentatavily
      ddn = sq3*1.713 + Rdel
      ddup = .5*1.846 + 1.713
      Prin2 Rbot,Rtop,Nstr;
      (' EXSG: Rbot,Rtop,Nstr',2F12.4,I5)
      mgt = emxg_Sbase + .01
      DO i_str = 1, nstr
      p = .5*(i_str-1)*mgt + 41.3655
      IF ( p<=(.5*rbot*sq3+rth) ) THEN
      dxy = 1.9375*sq2
      xleft = .5*sq2*p*(sq3 + 1.) - dxy
      yleft = .5*sq2*p*(sq3 - 1.) - dxy
      yright = .5*sq2*(sqrt( rbot*rbot - p*p) - p)
      xright = sq2*p + yright
      ELSEIF ( (.5*rbot*sq3+rth)<p&p<=(.5*Rtop+1.5) ) THEN
      Prin2 i_str,p;
      (' EXSG: 2 - -i_str,p:',i3,F12.4)
      dxy = 1.9375*sq2
      xleft = .5*sq2*p*(sq3 + 1.) - dxy
      yleft = .5*sq2*p*(sq3 - 1.) - dxy
      dxy = rdel*sq2/sq3
      yright = .5*sq2*p*(1.- 1./sq3)
      xright = sq2*p - yright - dxy
      yright = -yright - dxy
      ELSEIF ( p>(.5*rtop+1.5) ) THEN
      Prin2 i_str,p;
      (' EXSG: 3 - - i_str,p:',i3,F12.4)
      yleft = (sqrt(rtop*rtop - p*p) - p)/sq2
      xleft = sq2*p + yleft
      dxy = rdel*sq2/sq3
      yright = .5*sq2*p*(1.- 1./sq3)
      xright = sq2*p - yright - dxy
      yright = -yright - dxy
      dxy = 0.
      IF ( (.5*sq3*160.-ddn)<p&p<=(.5*sq3*160.+ddup) ) THEN
      Prin2 i_str,p;
      (' EXSG: 4 - - i_str,p:',i3,F12.4)
      xc = .5*(sq3*160.+1.846)
      yc = xc - .5*sq3*1.713
      IF ( p>yc ) THEN
      dxy = .5*sq2*(2/sq3*rdel + .5*sq3*1.846 +                                  _
                                            sqrt(1.713*1.713 - (p-xc)*(p-xc)))
      ELSE
      dxy = sq2/sq3*(p - .5*sq3* 160. + ddn)
      ENDIF
      ELSEIF ( (.5*sq3*195.-ddn)<p&p<=(.5*sq3*195.+ddup) ) THEN
      Prin2 i_str,p;
      (' EXSG: 5 - - i_str,p:',i3,F12.4)
      xc = .5*(sq3*195.+1.846)
      yc = xc - .5*sq3*1.713
      IF ( p>yc ) THEN
      dxy = .5*sq2*(2/sq3*rdel + .5*sq3*1.846 +                                  _
                                            sqrt(1.713*1.713 - (p-xc)*(p-xc)))
      ELSE
      dxy = sq2/sq3*(p - .5*sq3*195. + ddn)
      ENDIF
      ENDIF
      xright = xright + dxy
      yright = yright + dxy
      ENDIF
      dxy = section*Tan_Upp - Rtop
      xc = .5*(xright+xleft) + dxy
      yc = .5*(yright+yleft)
      xx = .5*sq2*(xleft+yleft)
      yy = .5*sq2*(xright+yright)
      len = xx-yy
      Prin2 i_str,p,yy,xx,len,xc,yc;
      (' EXSG: i_str,x,y1,y2,len,xc,yc:',i3,6F12.4)
      CREATE EHMS
      IF ( mod(i_str,2)!=0 ) THEN
      POSITION EHMS x=xc y=yc alphaz=-45 
      ELSE
      POSITION EHMS x=xc y=yc alphaz=-45 ort=X-Y-Z 
      ENDIF
      END DO
      ENDIF
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EHMS
      BLOCK EHMS   is sHower Max Strip
      MATERIAL POLYSTYREN
      MATERIAL Cpolystyren isvol=1
      ATTRIBUTE EHMS seen=1 colo=2 serial=cut
      SHAPE trd1 dx1=0 dx2=emxg_Sbase/2 dy=len/2,
            dz=emxg_Sapex/2
      Call GStPar(ag_imed, 'CUTGAM', 0.00008)
      Call GStPar(ag_imed, 'CUTELE', 0.001)
      Call GStPar(ag_imed, 'BCUTE', 0.0001)
      Call GStPar(ag_imed, 'BIRK1', 1.)
      Call GStPar(ag_imed, 'BIRK2', 0.0130)
      Call GStPar(ag_imed, 'BIRK3', 9.6E-6)
      HITS EHMS birk:0:(0,10)
      ENDBLOCK
      ! ---------------------------------------------------------------------------------- EXGT
      BLOCK EXGT   is the G10 layer in the Shower Max
      COMPONENT Si A=28.08 Z=14 W=0.6*1*28./60.
      COMPONENT O A=16 Z=8 W=0.6*2*16./60.
      COMPONENT C A=12 Z=6 W=0.4*8*12./174.
      COMPONENT H A=1 Z=1 W=0.4*14*1./174.
      COMPONENT O A=16 Z=8 W=0.4*4*16./174.
      MIXTURE g10 dens=1.7
      ATTRIBUTE EXGT seen=1 colo=7
      SHAPE tubs rmin=(section-diff)*Tan_Low-1.526,
            rmax=(section+msecwd-diff)*Tan_Upp phi1=emcs_PhiMin/emcs_Nsupsec,
            phi2=emcs_PhiMax/emcs_Nsupsec,
            dz=emxg_F4/2
      Call GStPar(ag_imed, 'CUTGAM', 0.00001)
      Call GStPar(ag_imed, 'CUTELE', 0.00001)
      ENDBLOCK
      <W> '===>> 	[End AgML Module ECALGEO]	 <<==='; (A32,/,/);
      END! Module ECALGEO
