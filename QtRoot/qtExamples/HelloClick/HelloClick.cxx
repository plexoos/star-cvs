#include "HelloClick.h"
#include "HelloClick.h"
#include "TQtWidget.h"
#include <TApplication.h>
#include <qlayout.h>
#include <qsplitter.h>

//__________________________________________________________________
HelloClick::HelloClick(QWidget* parent)
: QFrame(parent)
{
   setupUi(this);
   init();
}
//__________________________________________________________________
void HelloClick::init()
{
#if ROOT_VERSION_CODE >= ROOT_VERSION(5,16,0)
// Make sure the ROOT graphical layer is initialised.
static struct needgraph {   needgraph () {  TApplication::NeedGraphicsLibs() ;  gApplication->InitializeGraphics();} }  needgraph;
#endif

   fDynamicExecWidget->GetCanvas()->SetName("c2");
   DynamicSlice();
   connect(fDynamicSliceWidget,SIGNAL(RootEventProcessed(TObject *, unsigned int, TCanvas *))
         ,this,   SLOT(DynamicExec(TObject *, unsigned int, TCanvas *)));
   fDynamicSliceWidget->EnableSignalEvents(kMousePressEvent);
}

void HelloClick::setupUi(QFrame *DynamicSlice)
{
   // This method was automatically generated by Qt4 designer
   QVBoxLayout *verticalLayout;
   QSplitter *splitter;
   DynamicSlice->resize(403, 435);
   verticalLayout = new QVBoxLayout(DynamicSlice);
   splitter = new QSplitter(DynamicSlice);
   splitter->setOrientation(Qt::Vertical);
   splitter->setOpaqueResize(false);
   splitter->setChildrenCollapsible(false);
   fDynamicSliceWidget = new TQtWidget(splitter);
   fDynamicExecWidget = new TQtWidget(splitter);
   verticalLayout->addWidget(splitter);
}
