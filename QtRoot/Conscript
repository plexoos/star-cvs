#!/usr/bin/env perl
Import qw ( env INCLUDE LIB BIN BUILD OBJ);
( my $build = $OBJ ) =~ s/\#//g;
$build =~ s/\\/\//g;                                    # print "OBJ = $OBJ build = $build\n";
(my $sysdir = $build ) =~ s/\/obj//i;
#print "PWD === $ENV{PWD}\n"; die;
$env->{ENV}->{QTROOTSYSDIR} = $ENV{PWD} . "/" . $sysdir;# print "QTROOTSYSDIR = $env->{ENV}->{QTROOTSYSDIR}\n";
$env->{ENV}->{QTDIR} = $env->{Packages}->{QT}->{DIR};
my $DirPath = DirPath '.';                              # print "DirPath = $DirPath\n";
( my $obj_dir = $DirPath ) =~ s/\\/\//g;                # print "obj_dir = $obj_dir\n";
( my $Dir = $obj_dir ) =~ s/$build\///g;                # print "Dir = $Dir\n";
my $PKGT = "QtRoot";
printf( "Run Conscript          in %-30s  for %-20s\n", $Dir,$PKGT );

my @src = ();
my @dirs = qw(qt qtgui qtimage qtgl qtged qtExamples qtroot qtthread);
foreach my $dir (@dirs) {
  my @srcL = find_q($Dir . "/" . $dir); #print "dir = $dir ==> @srcL\n";
  foreach my $s (@srcL) {
    push @src, $dir . "/" . $s;
  }
}
my @DepsL = map {$LIB . "/lib" . $_ . ".so"} qw(QtRoot QtGed  RQTGL QtRootGui QtImage);
my @DepsI = map {$INCLUDE .  "/TQt" . $_ . ".h"} 
  qw(       ClientGuard  GedEditor  PaletteEditor       SymbolCodec      Util
     ClientWidget      Image        Widget               Event            Lock
     RConfig           EventQueue Marker              RootApplication  ClientFilter     
     GedAttFrame       PadEditor    Timer      Condition           RootBrowserImp     
     FloatSpinBox       ObjectDialog           StyleComboBox
     CanvasWidget       ObjectListItem     TabValidator           GuiFactory    
     Pad2Html           ToolBar                     ColorSelectButton
     Gui                UpdateViewFlag       ColorSelect  
     IconBrowserImp     PatternSelectButton     ZoomPadWidget     
     ContextMenuImp     InspectImp              PatternSelect     
     ControlBarImp       RootAction          
     CustomizeCanvasMenu RootBrowserAction 
     LockWidget         
     Application AxisEditor BrowserImp Brush Canvas2Html CanvasImp IconBrowserImp RootApplication RootBrowserImp
    );

push @DepsI, $INCLUDE .  "/TBrowserCustom.h";
push @DepsI, $INCLUDE .  "/TCanvasImp.interface.h";
push @DepsI, $INCLUDE .  "/TCanvasImp.interface.h";
push @DepsI, $INCLUDE .  "/TEmbeddedPad.h";
#push @DepsI, $INCLUDE .  "/TG3Application.h";
push @DepsI, $INCLUDE .  "/TQGsiRootCanvas.h";

#TBrowserCustom Application AxisEditor BrowserImp Brush  Canvas2Html   CanvasImp    TCanvasImp.interface  TEmbeddedPad   TQGsiRootCanvas
my $DEBUG = "";
$DEBUG = " CONFIG+=debug" if $env->{DEBUG} !~ /-O/;
Command $env ["Makefile"], qw(qtRoot.pro qtthread/qtthread.pro), qq(cd $obj_dir; qmake $DEBUG);
Command $env [(@DepsL, @DepsI)], (Makefile, @src), qq(cd $obj_dir;  make; make install);
# Command $env ["Makefile"], qw(qtExamples/qtExamples.pro), qq(cd $obj_dir; qmake $DEBUG; make);
#________________________________________
sub find_q{  @main::search_files   = ();
#	     print "find_q for $_[0]\n";
  if (-d $_[0]) {
    &File::Find::find(\&wanted_q, @_);
    for my $dir (@_) {
      if ( -d $dir ) {
	my $i = 0;
	for ($i=0;$i<=$#main::search_files;$i++) {
	   $main::search_files[$i] = cutdir($dir, $main::search_files[$i]);
	}
      }
    }
  }
	     return @main::search_files;
}
#________________________________________
sub wanted_q {
#  print "wanted ",$_,"\n";
  my ($dev,$ino,$mode,$nlink,$uid,$gid) = lstat($_);
  if ( -d _ &&
       (/^CVS$/)
     ) {$File::Find::prune = 1; return;}
  if ( /^\.\#/) {return;}
  if (
      /^\w.*\.c$/       ||
      /^\w.*\.cc$/      ||
      /^\w.*\.cxx$/     ||
      /^\w.*\.cpp$/     ||
      /^\w.*\.g$/       ||
      /^\w.*\.age$/     || #for STAR      /^\w.*\.f$/       ||
      /^\w.*\.cdf$/     ||
      /^\w.*\.F$/       ||
      /^\w.*\.h$/       ||
      /^\w.*\.hh$/      ||
      /^\w.*\.inc$/     ||
      /^\w.*\.hpp$/     ||
      /^\w.*\.icpp$/    ||
      /^\w.*\.icc$/     ||
      /^\w.*\.pro$/     ||
      /^\w.*\.xpm$/     ||
      /^\w.*\.pri$/     ||
      /^\w.*\.pro$/     ||
      /^\w.*\.ui$/      ||
      /^root\w+$/       ||
      /^\w.*\.tpp$/) {# print " $File::Find::name\n";
    {# print " $File::Find::name\n";
    push @main::search_files,  $File::Find::name;
    }
  }
}
