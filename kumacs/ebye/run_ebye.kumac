***************************************************************************
* run_ebye.kumac
* 
* 07/25/1998 written by D. Weerasundara -- dhammika@gibbs.npl.washington.edu
* History
* -------
* 08/01/1998 - L.D. Carr  -- lcarr@u.washington.edu  -- modified
* 08/04/1998 - K. Turner  -- edited to make it standard
* 08/07/1998 - L.D. Carr  --    1.  changed switches
*       			2.  moved sca_ensemble_ave and sca_prior 
*				    to /dui/calib/ebye/sca
* 08/10/1998 - K. Turner  -- changed exec create_tables_global#sca to 
*                            exec create_tables_global#egr to make it standard
* 08/10/1998 - LDC        -- added calib_dir  
* 08/10/1998 - K. Turner  -- added nid to call to 
*                            write_table_to_ntuple#close_disk
* 08/11/1998 - K. Turner  -- made default TOP=$STAR
* 08/13/1998 - Dhammika W.-- Commented out extra lines need to deal with
*                            Lanny Ray's fast multiplicity generator 
*                            DSTs on /star/mds/users/ray/ebye. We don't need
*                            these lines to use standard STAR DST tables.
* 09/01/1998 - Dhammika W.-- Brought into STAR kumac framework.
* 09/11/1998 - Dhammika W.-- Updated to normalize prior and  ensemble average.
* 09/14/1998 - LDC        -- Added output xdf file in event loop and as 
*                            argument
* 10/14/1998 - K. Turner  -- put in read_default_params
* 12/10/1998 - Dhammika W.-- Updated to be in synch with SL98k BFC.
*                            Remove a call to init_sca#init_params.
*			     Add a call to init_sca#params
*
************************************************************************
************************************************************************

 macro run__
          TOP=$STAR_
          domain='geometry tpc svt global ebye' _
          input_data_prefix=/disk1/star/auau200/hijing135/default/b0_3/year2a/hadronic_on/tfs_dst/ _
          input_data_file=psc148_02_48evts_h_dst.xdf  _
          output_file=sca_out.xdf _
          num_events=1 _
          calib_dir=$STAR_CALIB/ebye_
          ebye_prior_switch=0 _
          ebye_ensemble_switch=0 _
          ebye_analysis_switch=1 _
          funit=21 _
          nfile=ebye.ntup _
          nid=111 _
          table=ebye/sca/sca_out

* 
*  this is an example!! you must change to fill your needs
*  
* --> to run
*    - change the inputs above as desired
*    - run staf
*    -   exec run_ebye
* 
* ***********************************************************
* CALCULATE STUFF FROM MACRO INPUTS 
***********************************************************
    
 input_file = [input_data_prefix][input_data_file]

***********************************************************
* PRINT OUT INPUT VALUES
***********************************************************
	  
  message ' *** TOP directory to search for kumacs --> ' [TOP]
  message ' *** domains to load  -->                   ' [domain]
  message ' *** Data Sample directory -->              ' [input_data_dir]
  message ' *** Input data file -->                    ' [input_data_file]
  message ' *** Output data file -->	               ' [output_file]
  message ' *** Num Events to process -->              ' [num_events]
  message ' *** Calibration Directory -->              ' [calib_dir]
  message ' *** Prior Switch -->                       ' [ebye_prior_switch]
  message ' *** Ensemble Switch -->                    ' [ebye_ensemble_switch]
  message ' *** Analysis Switch -->                    ' [ebye_analysis_switch]
  message ' *** ntup file unit -->                     ' [funit]
  message ' *** output Ntuple filename  -->            ' [nfile]
  message ' *** Ntuple ID # -->                        ' [nid]
  message ' *** Table to write to ntup -->             ' [table]
  
  
***********************************************************
* General Setup
***********************************************************
  
 macro/global/create TOP              [TOP]

   exec $STAR/kumacs/util/setup_defaults#run
   
   exec setup#setup
   
   macro/global/import *
     
   exec load_libraries#run [domain]
   
   exec read_default_params#init
      
**************************************************************
* OPEN FILES
****************************************************************

* open input data file
  exec read_table_from_file#init  ind  [input_file]
  if STAF_STATUS(1).eq.stafcv_bad goto ENDOFDATA

* open output ntuple
  exec write_table_to_ntuple#init_disk [funit] [nfile]  

* **************************************************************
* Setup for EbyE
* ****************************************************************  

*wait
* sca    
  exec create_tables_ebye#sca_io
  exec create_tables_ebye#sca_prior
  exec create_tables_ebye#sca_ensemble_ave

  exec init_sca#read_params
  exec init_sca#init_analysis [calib_dir] [output_file] _
	    [ebye_prior_switch] [ebye_ensemble_switch]  [ebye_analysis_switch]

***************************************************************
*  Run EbyE
* ****************************************************************

* initialize event counter.
    nev_pass=0
* read event and then process thru analysis
  do i=1,[num_events]
    message ' run_ebye: processing event ' [i]
* clear all event tables
    tabclear [event]
* read input file
    exec read_table_from_file#read  ind  [event]/data/global
    if STAF_STATUS(1).eq.stafcv_bad goto ENDOFDATA  
* check for the valid global track table.
   if ( [i] = 1 ) then	
     ls [dst]
     if (staf_status(2).ne.STAFCV_OK) then
	cp dst/run_header  [run_dst]
	cp dst/run_summary [run_dst]
	rm dst/run_header
	rm dst/run_summary
	rmdir dst
     endif        
     goto NEXT_EVENT
   endif
* do analysis
    exec run_sca#filter 
    if ( staf_status(1) .ne. STAFCV_OK) then
       message <<< WARNING >>>  Problem with sca_filter in event [i]
       goto NEXT_EVENT
    endif
    exec run_sca#runsca
    if ( staf_status(1) .ne. STAFCV_OK) then
       message <<< WARNING >>>  Problem with sca_runsca in event [i]
       goto NEXT_EVENT
    endif
* count successfully processed events.
   nev_pass=[nev_pass]+1
* write table to ntuple
    exec write_table_to_ntuple#write_event_disk [nid] [data]/[table]
* write event to file
    if [ebye_analysis_switch]=1 then
        exec write_table_to_file#write SCAANALYSIS [data]/ebye/
    endif
NEXT_EVENT:
  enddo
* -------------------- end stuff -----------------------------*
  
  ENDOFDATA:
  if [i].lt.[num_events] then
    message ' End of input file'
  endif  

* write out sca reference information if switches set accordingly
  exec finish_sca#finish
  exec run_sca#close [calib_dir] [ebye_prior_switch] _
	       [ebye_ensemble_switch] [ebye_analysis_switch]

* close ntuple
  message ' close ntuple'
  exec write_table_to_ntuple#close_disk_ntup 
  exec write_table_to_ntuple#close_file_ntup [funit]
  exec write_table_to_ntuple#delete_soc_ntup [nid]
* close input file
  message ' close input file'
  exec read_table_from_file#close  ind
  
return
 
************************************************************************













