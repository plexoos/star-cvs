* 2Jul98 K. Turner - tpc code now requires geometry so make it default
*                    in domain
* 3Jul98 K. Turner - changed tpc kumacs so that pam kumacs are called directly
* 7Jul98 K. Turner - changed to use gstar stuff
* 9Jul98 K. Turner - changed to use new tpc cluster and track eval for slow sim
* 9Jul98 K. Turner - changed to use tfc_run#run_newtab - can set adcxyzon=1
* 10Jul98 K. Turner - changed to use new version of global pam kumacs
* 11Jul98 K. Turner - changed to used tfc for adcxyz table
* 11Jul98 K. Turner - changed to load gstar more standard way 
*                   - changed inputs to bfc_start!
* 13Jul98 K. Turner - change to separate out parts of setup 
* 21Jul98 K. Turner - removed gethij & gst - not needed
* 21Jul98 K. Turner - changed to separate out the gstar & g2t parts
* 22Jul98 K. Turner - fixed to pick up correct gstar files
* 
*************************************************************
*                     BFC_UTIL.KUMAC
*************************************************************
******************************************************************
 macro bfc_start domain='geometry tpc svt global'  chain=' ' 

* SETUP DEFAULT DIRECTORIES TO GET KUMACS FROM
  exec bfc_defaults
  
* SETUP TABLE DIRECTORIES
  exec setup#setup

* SETUP LOCAL VARIABLES 
 alias/create STAFCV_OK  1
 alias/create STAFCV_BAD 0
 
* import global macros
 macro/global/import *
   
*  THESE NEXT 4 MUST BE DONE IN THIS ORDER!!!!
   exec bfc_util#bfc_gstar_setup    [chain]
   exec bfc_util#bfc_g2t_b4_load    [chain]
   exec bfc_util#bfc_load          [domain]
   exec bfc_util#bfc_g2t_after_load [chain]
 
return
 
*********************************************************************
*********************************************************************
**********************************************************************
 
macro bfc_init _
         chain=' evg2tin svg tpg srs tfs sgr tpt tte_e svm egr ev0 evout' 
  
  macro/global/import *
    
 test = [chain]
 nw = $words([test])
 message ' !!! bfc_util#init ==> Number of words in chain = ' [nw]
 
 do i = 1, [nw]
   mod = $word([test],[i],1)
   message ' !!! bfc_util#init ==> chain initialization for  ' [mod]
   vec/create v[mod]
   vec/create t[mod]
   CASE [mod] in
    (oldin)  user/input dummy [input_file]
    (evgin) newfile hij_in [input_file] r; 
            user/input u [evgen]/particle.staf
     (fzin)
  (evg2tin) exec input_g2t_file#init [input_file]
            if (STAF_STATUS(1).ne. STAFCV_OK) then
              message 'problem opening input file '
              goto EOF 
            endif
     (evin)
          exec read_table_from_file#init inev [input_file]
          exec read_table_from_file#read inev 
     (rgst)
     (rg2t)
      (svg) exec init_svg         | SVT initialization - geometry
      (tpg) exec tpg_init#init    | TPC geometry initialization
      (sss) exec svt_slow_sim#initialize | SVT initialization - slow simulation
      (srs) 
            exec create_tables_svt#srs
            exec init_srs		| SVT initialization - fast simulation
      (tfs) 
            exec create_tables_tpc#tcl_fast
            exec tcl_init#init
            exec tfs_init#init
      (tss) 
	    exec create_tables_tpc#tss [tpc_sector_first] [tpc_sector_last]
            exec tss_init#init [tpc_sector_first] [tpc_sector_last]
      (tfc) exec create_tables_tpc#tfc
      (tcl)
            exec create_tables_tpc#tcl_slow
            exec tcl_init#init
      (tpt)
	    exec create_tables_tpc#tpt
            exec tpt_init#init
            exec tid_init#init
    (tte_t) 
	    exec create_tables_tpc#tpt
            exec tpt_init#init
            exec tid_init#init
    (tte_e)
            exec create_tables_tpc#tte
            exec tte_init#init
      (stk)
	    exec create_tables_svt#sgr
            exec create_tables_svt#stk
            exec init_stk
            exec init_sgr
      (sgr) 
	    exec create_tables_svt#sgr
            exec create_tables_svt#stk
            exec init_stk
            exec init_sgr
      (svm) 
            exec create_tables_global#svm
            exec init_svm
      (egr) 
	    exec create_tables_global#egr
	    exec init_egr
      (ev0) exec create_tables_global#ev0 
            exec init_ev0#init_ev0
(ev0_eval2) exec create_tables_global#ev0_eval2
	    exec init_ev0#ev0_eval2 
      (emc)
            exec init_ems;  
            exec init_jet;     |  EMC geometry &  pam initialization 
    (fzout)  user/output o [output_fzd_file]
    (evout) if output_file="" then
              message "empty output file"
            else
	      exec write_table_to_file#init evout [output_file]
              if (STAF_STATUS(1).ne. STAFCV_OK) then
                message "Cannot open output file"
                goto eof
              endif
*             exec write_table_to_file#write evout [geant_Run]
              exec write_table_to_file#write evout [run]         
            endif
      (*)   message " !!! bfc_util: No initialization for package " [mod]
    ENDCASE
    
  enddo
EOF:
 
 return
 
**********************************************************************
**********************************************************************
**********************************************************************

 macro bfc_process _
      chain=' evg2tin svg tpg srs tfs sgr tpt tte_e svm egr ev0 evout'_
   
  macro/global/import *
  test = [chain]
  nw = $words([test])
  
  do i = 1, [nw]
   mod = $word([test],[i],1)
   message ' !!! bfc_util ==> chain processing for  ' [mod]
   CASE [mod] in 
    (oldin) nextl 1
    (evgin) cd [event]; getev hij_in
            user/input u [evgen]/particle.staf
*           exec $STAR/pams/gen/kumac/particle
  (evg2tin) exec input_g2t_file#read
            if (staf_status(1).ne.STAFCV_OK) goto EOF
     (evin) exec read_table_from_file#read inev
     (fzin) nextl 1 
     (rgst) trig 1
     (rg2t) cd [geantE]
            for/call g2t
            cd /dui
      (svg)    nextl 1
      (tpg)    nextl 1
      (sss)    exec svt_slow_sim#process_event;
      (srs)    exec svt_fast_sim#process_event; 
      (tfs)    
               exec tfs_run#run
               if (staf_status(1) .ne. stafcv_ok) then 
                  message ' problem with tpc_fast_sim_process_event'
	       endif
      (tss)    
               exec tss_run#run [tpc_sector_first] [tpc_sector_last]
               if (staf_status(1) .ne. stafcv_ok) then 
                 message ' problem with tpc_slow_sim_process_event'
               endif
      (tfc)    exec tfc_run#run_newtab [tpc_sector_first] [tpc_sector_last]
      (tcl)    
	       exec tcl_run#run_tcl [tpc_sector_first] [tpc_sector_last] 
               exec tcl_run#run_tph [tpc_sector_first] [tpc_sector_last]
               if (staf_status(1) .ne. stafcv_ok) then 
                 message ' problem with tpc_clustering_process_event'
               endif
    (tcl_e)    exec tte_run#run_tte_hit_match
      (emc)    exec run_ems_interface          
      (stk)    exec svt_tracker#process_event_stk [ievent];
               if (staf_status(1) .ne. stafcv_ok) then
                 nextl 1;
               endif
      (sgr)    exec svt_tracker#process_event_sgr [ievent];
               if (staf_status(1) .ne. stafcv_ok) then
                 nextl 1;
               endif
      (tpt)    exec tpt_run#run
               exec tid_run#run_tde_new 
               if (staf_status(1) .ne. stafcv_ok) then 
                 message ' problem with tpc_tracker_tpt'
               endif
    (tte_t)    exec tte_run#run_tte_track
               exec tid_run#run_tde_new
                 if (staf_status(1) .ne. stafcv_ok) then 
                   message ' problem with tpc_tracker_tte'
                 endif
    (tte_e)    exec tte_run#run_tte
      (svm)    exec run_svm#run_svm 	     |  TPC to SVT Matching 
      (egr)    exec run_egr#egr              |  Event Global Refit
      (ev0)    exec run_ev0#ev0_am           |  V0 Finder 
(ev0_eval2)    exec run_ev0#ev0_eval2  
      (erj)    exec run_jet_egrid
               exec run_jet_erj
    (evout)    if [output_file]="" then
                 message "Empty output file"
               else
		 exec write_table_to_file#write evout [event]
	       endif
        (*)    message " !!! bfc_util: No process stage for package " [mod]
      if (staf_status(1) .ne. stafcv_ok) goto NEXT_EVENT
   ENDCASE
	     
   sigma v[mod] = v[mod] + abs($cptime)
   sigma t[mod] = t[mod] + v[mod]
   ccc = '---'
   fmt = [ccc]//'<bfc>: Event  '//[ievent]//[ccc]//[mod]//' =' 
   fmt = $quote($quote([fmt]))//',2f12.5'
   vec/wr  v[mod],t[mod] ! [fmt]
   vec/inp v[mod] 0.0
   
  enddo
 
 NEXT_EVENT:
 EOF:
 
return
 
**********************************************************************
**********************************************************************
**********************************************************************

macro bfc_finish _
   chain=' evg2tin svg tpg srs tfs sgr tpt tte_e svm egr ev0 evout'
  
  macro/global/import *
  test = [chain]
  nw = $words([test])
  do i = 1, [nw]
    mod = $word([test],[i],1)
    CASE [mod] in 
   (evg2tin)  exec input_g2t_file#close
      (rgst)  ge/rz/cd //PAWC;
	        hi/list;  | show histograms
     (evout) exec write_table_to_file#close evout;
              oid = staf_result(1); 
              soc/deleteoid [oid] 
      (*) message " !!! bfc_util#bfc_finish No final stage for package " [mod]
    ENDCASE
  enddo
return
 
**********************************************************************
**********************************************************************
**********************************************************************
 
 macro bfc_print chain='evout'
   
  macro/global/import *
  test = [chain]
  nw = $words([test])
  do i = 1, [nw]
    mod = $word([test],[i],1)
    ccc = '---'
    fmt = '<bfc>: Event'//[ievent]//[ccc]//[mod]//[ccc]//' =' 
    fmt = $quote($quote([fmt]))//',2f10.5'
    vec/wr  v[mod],t[mod] ! [fmt]
  enddo
  
 return
 
**********************************************************************
**********************************************************************
***********************************************************************
******************************************************************
 
 macro bfc_g2t_after_load chain
   
   macro/global/import *
     
*  must fill Run tables if running g2t (rg2t in chain)
*  has to be done after loading
 test2 = [chain]
 nw2=$words([test2])
 message ' !!! bfc_g2t_after_load ==> Number of words in chain = ',[nw2]
 do i=1,[nw2]
   mod2 = $word([test2],[i],1)
   CASE [mod2] in
     (rg2t) 
       message ' !!! bfc_g2t_after_load ==> setup for chain:' [mod2]
* this command fills geant Run tables
        tables ' ' [geant_Run]
   ENDCASE
 enddo
  
return
 
*********************************************************************
**********************************************************************
**************************************************************************

 macro bfc_load domain
   
   macro/global/import *
     
*  LOAD LIBRARIES
 if $vexist(make_done)=0 then
   message " bfc_util#bfc_load: Load domains --> " [domain]
   test = [domain]
   nw = $words([test])
   do i = 1, [nw]
     mod = $word([test],[i],1)
     n = $words([mod],'/') 
     module = $word([mod],[n],[n],'/')
     test_done = [module]_done
     if ($vexist([test_done])=0) then
       vec/cre [test_done]
	message ' bfc_load: doing make for domain:' [mod]
        make [mod]
        if $iquest(1)<>0 then
            message "<bfc> Shared libraries have not been loaded : ABend"
         endif
     endif
     if $iquest(1)<>0 then
       message "<bfc> Shared libraries have not been loaded : ABend"
     endif
   enddo
   vec/cre make_done
 endif
 
 return
 
*********************************************************************
**********************************************************************
************************************************************
 
macro bfc_gstar_setup chain
   
   macro/global/import *
     
      
 test1 = [chain]
 nw1=$words([test1])
 message ' !!! bfc_gstar_setup ==> Number of words in chain = ',[nw1]
 do i=1,[nw1]
   mod1 = $word([test1],[i],1)
   CASE [mod1] in
     (rgst)
         message ' !!! bfc_gstar_setup ==> set params for chain:' [mod1]
* initialize physics types for running gstar
	 exec set_phys_hadronic_[phystype]
         message ' gstar: set hadronic physics ' [phystype]
* initialize geometry for running gstar
         if ([geomtype].eq.all) then 
           message ' gstar: load star geometry - all '
           exec set_geom#all
         elseif ([geomtype].eq.tpc_nofield) then
           message ' gstar: load star geometry - tpc only, no mag.field '
           exec set_geom#tpc_nofield
	 elseif ([geomtype].eq.tpc_field) then
	   message ' gstar: load star geometry - tpc only with mag field'
	   exec set_geom#tpc_field
         else 
           message ' gstar: geometry type not available!! '
         endif	  
   ENDCASE
 enddo
       
return
 
*********************************************************************
**********************************************************************
************************************************************
 
macro bfc_g2t_b4_load chain
   
   macro/global/import *
           
 test1 = [chain]
 nw1=$words([test1])
 message ' !!! bfc_g2t_b4_load ==> Number of words in chain = ',[nw1]
 do i=1,[nw1]
   mod1 = $word([test1],[i],1)
   CASE [mod1] in
     (rg2t)
         message ' !!! bfc_g2t_b4_load ==> set params for chain:' [mod1]
* initialize for g2t: tell g2t where to put tables
         detp g2tmain gttc.rdir=0		  
   ENDCASE
 enddo
       
return
 
*********************************************************************
*********************************************************************
*********************************************************************

macro bfc_defaults
  
macro/global/import *
 DEFAULT = _
[TOP]/kumacs/sim,_
[TOP]/kumacs/util,_
[TOP]/kumacs/chain,_
[TOP]/kumacs/emc,_
[TOP]/kumacs/svt,_
[TOP]/kumacs/tpc,_
[TOP]/pams/emc/kumac,_
[TOP]/pams/global/kumac,_
[TOP]/pams/svt/kumac,_
[TOP]/pams/tpc/kumac,_
$STAR/kumacs/sim,_
$STAR/kumacs/util,_
$STAR/kumacs/chain,_
$STAR/kumacs/emc,_
$STAR/kumacs/svt,_
$STAR/kumacs/tpc,_
$STAR/pams/ctf/kumac,_
$STAR/pams/emc/kumac,_
$STAR/pams/ftpc/kumac,_
$STAR/pams/gen/kumac,_
$STAR/pams/global/kumac,_
$STAR/pams/mwc/kumac,_
$STAR/pams/svt/kumac,_
$STAR/pams/tpc/kumac,_
$STAR/pams/trg/kumac

 def [DEFAULT]
 message ' bfc_defaults: Define default kumac search path as' [default]
 
return

**********************************************************************
**********************************************************************
**********************************************************************

















