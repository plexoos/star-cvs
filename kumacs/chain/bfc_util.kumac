* 2Jul98 K. Turner - tpc code now requires geometry so make it default
*                    in domain
* 3Jul98 K. Turner - changed tpc kumacs so that pam kumacs are called directly
* 7Jul98 K. Turner - changed to use gstar stuff
* 9Jul98 K. Turner - changed to use new tpc cluster and track eval for slow sim
* 9Jul98 K. Turner - changed to use tfc_run#run_newtab - can set adcxyzon=1
* 10Jul98 K. Turner - changed to use new version of global pam kumacs
* 11Jul98 K. Turner - changed to used tfc for adcxyz table
* 11Jul98 K. Turner - changed to load gstar more standard way 
*                   - changed inputs to bfc_start!
* 13Jul98 K. Turner - change to separate out parts of setup 
* 21Jul98 K. Turner - removed gethij & gst - not needed
* 21Jul98 K. Turner - changed to separate out the gstar & g2t parts
* 22Jul98 K. Turner - fixed to pick up correct gstar files
* 27Jul98 K. Turner - fixed to include all domains in bfc_defaults 
* 27Jul98 K. Turner - allow to run gstar from input txt file
* 28Jul98 K. Turner - separate bfc_defaults and bfc_load to 
*                      kumacs/util/setup_defaults and load_libraries
* 1Aug98  K. Turner - tid now separated out of tpt
* 3Aug98  K. Turner - use new detp geometry command instead of bfc_gstar_setup
* 7Aug98  K. Turner - removed unneeded user/input under evgin in bfc_process 
* 11Aug98 K. Turner - now make split_off default for running gstar 
* editted 8/12/98 K. Turner - more comments; combine geomtype+phystype into
*                             gstar_settings; use gstar_settings=field_only
*                             if not running gstar
* editted 8/12/98 K. Turner - added new modules to chain:
*                               ==> chain name/module
*                                    evr       evr
*                                    ddedx     dst_dedx_filler
*                                    dmsft     dst_monitor_soft_filler
*                                    dmhrd     not available yet
*                                    desum     fill_dst_event_summary
*                                    drsum     fill_dst_run_summary
*                                    emc       ems_interface2
*                                    jet       emc_egrid,emc_erj
*                                    ctf       cts,ctu
*                                    mwc       mws,mwu
*                                    trg       l3cl,ftf_tpc - won't work yet
* 
* 
*************************************************************
*                     BFC_UTIL.KUMAC
*************************************************************
******************************************************************
 macro bfc_start _ 
   domain='geometry tpc svt global' _
   chain=' ' _
   gstar_settings=' ' 

* SETUP LOCAL VARIABLES 
 alias/create STAFCV_OK  1
 alias/create STAFCV_BAD 0
 
* import global macros
 macro/global/import *
   
*  THESE NEXT 4 MUST BE DONE IN THIS ORDER!!!!
   message ' *** SET GEOMETRY in gstar:  -->   ' [gstar_settings]
   message '        !!! split_off is hardwired into this kumac !!! '
   detp geometry [gstar_settings] split_off
   exec bfc_util#bfc_g2t_b4_load    [chain]
   exec load_libraries#run          [domain]
   exec bfc_util#bfc_g2t_after_load [chain]
 
return
 
*********************************************************************
*********************************************************************
**********************************************************************
 
macro bfc_init _
         chain=' g2tin svg tpg srs tfs sgr tpt tte_e svm egr ev0 evout' 
  
  macro/global/import *
    
 test = [chain]
 nw = $words([test])
 message ' !!! bfc_util#init ==> Number of words in chain = ' [nw]
 
 do i = 1, [nw]
   mod = $word([test],[i],1)
   message ' !!! bfc_util#init ==> chain initialization for  ' [mod]
   vec/create v[mod]
   vec/create t[mod]
   CASE [mod] in
    (oldin)  user/input dummy [input_file]
    (evgin) newfile hij_in [input_file] r; 
            user/input u [evgen]/particle.staf
    (gtxin) user/input dummy [input_file]
     (fzin) gfile pz [input_file]
     (g2tin) exec input_g2t_file#init [input_file]
            if (STAF_STATUS(1).ne. STAFCV_OK) then
              message 'problem opening input file '
              goto EOF 
            endif
     (evin)
          exec read_table_from_file#init inev [input_file]
          exec read_table_from_file#read inev 
     (rgst)
     (rg2t) 
     (svg) exec init_svg#read
           exec init_svg#svg_am
     (tpg) exec tpg_init#read
           exec tpg_init#tpg_main
      (sss) exec init_sss
            exec init_ssf
      (srs) 
            exec create_tables_svt#srs
            exec init_srs		| SVT initialization - fast simulation
      (tfs) 
            exec create_tables_tpc#tcl_fast
            exec tcl_init#init
            exec tfs_init#init
      (tss) 
	    exec create_tables_tpc#tss [tpc_sector_first] [tpc_sector_last]
            exec tss_init#init [tpc_sector_first] [tpc_sector_last]
      (tfc) exec create_tables_tpc#tfc
      (tcl)
            exec create_tables_tpc#tcl_slow
            exec tcl_init#init
      (tpt)
	    exec create_tables_tpc#tpt
            exec tpt_init#init
    (tte_t) 
	    exec create_tables_tpc#tpt
            exec tpt_init#init            
    (tte_e)
            exec create_tables_tpc#tte
            exec tte_init#init
      (tid) exec tid_init#init
      (stk)
	    exec create_tables_svt#sgr
            exec create_tables_svt#stk
            exec init_sgr
            exec init_stk#init
	    exec init_stk#vtx
      (sgr) 
	    exec create_tables_svt#sgr
            exec create_tables_svt#stk
            exec init_sgr
            exec init_stk#init
	    exec init_stk#vtx
      (svm) 
            exec create_tables_global#svm
            exec init_svm
      (evr) exec init_evr
      (egr) 
	    exec create_tables_global#egr
	    exec init_egr
      (ev0) exec create_tables_global#ev0 
            exec init_ev0#init_ev0
    (ev0_e) exec create_tables_global#ev0_eval2
            exec init_ev0#ev0_eval2
      (ctb) exec create_tables_ctf#init
            exec ctg_init#read
            exec cts_init#cts_init
      (mwc) exec mwg_init
	    exec mws_init
	    exec create_tables_mwc#init
      (trg) exec l3cl_init
	    exec l3t_init
	    exec create_tables_l3
      (emc) exec create_tables_emc#ems
	    exec init_ems#init
      (jet) exec create_tables_emc#jet
	    exec init_jet#init
    (ddedx) exec create_tables_global#dst
    (dmsft) exec create_tables_global#dst
    (dmhrd) exec create_tables_global#dst
    (desum) exec create_tables_global#dst
    (drsum) exec create_tables_global#dst   
    (fzout)  user/output o [output_fzd_file]
    (evout) if output_xdf_file="" then
              message "empty output file"
            else
	      exec write_table_to_file#init outfile [output_xdf_file]
              if (STAF_STATUS(1).ne. STAFCV_OK) then
                message "Cannot open output file"
                goto eof
              endif
              exec write_table_to_file#write outfile [run]         
            endif
      (*)   message " !!! bfc_util: No initialization for package " [mod]
    ENDCASE
    
  enddo
EOF:
 
 return
 
**********************************************************************
**********************************************************************
**********************************************************************

 macro bfc_process _
      chain=' g2tin svg tpg srs tfs sgr tpt tte_e svm egr ev0 evout'_
   
  macro/global/import *
  test = [chain]
  nw = $words([test])
  
  do i = 1, [nw]
   mod = $word([test],[i],1)
   message ' !!! bfc_util ==> chain processing for  ' [mod]
   CASE [mod] in 
    (oldin) nextl 1
    (evgin) cd [event]; 
            getev hij_in
     (g2tin) exec input_g2t_file#read
            if (staf_status(1).ne.STAFCV_OK) goto EOF
     (gtxin) nextl 1
     (evin) exec read_table_from_file#read inev
     (fzin) trig 1 
     (rgst) trig 1
     (rg2t) cd [geantE]
            for/call g2t
            cd /dui
      (svg)    nextl 1
      (tpg)    nextl 1
      (sss)    exec run_sss
               exec run_ssf
      (srs)    exec run_srs
               if (staf_status(1) .ne. stafcv_ok) then 
                  message ' problem with run_srs'
		endif
      (tfs)    
               exec tfs_run#run
               if (staf_status(1) .ne. stafcv_ok) then 
                  message ' problem with tfs_run'
	       endif
      (tss)    
               exec tss_run#run [tpc_sector_first] [tpc_sector_last]
               if (staf_status(1) .ne. stafcv_ok) then 
                 message ' problem with tss_run'
               endif
      (tfc)    exec tfc_run#run_newtab [tpc_sector_first] [tpc_sector_last]
      (tcl)    
	       exec tcl_run#run_tcl [tpc_sector_first] [tpc_sector_last] 
               exec tcl_run#run_tph [tpc_sector_first] [tpc_sector_last]
               if (staf_status(1) .ne. stafcv_ok) then 
                 message ' problem with tpc_clustering_process_event'
               endif
    (tcl_e)    exec tte_run#run_tte_hit_match
       
      (stk)    exec run_stk#run
               if (staf_status(1) .ne. stafcv_ok) then
                 nextl 1;
               endif
      (sgr)    exec run_sgr#run
	       exec run_stk#run
               if (staf_status(1) .ne. stafcv_ok) then
                 nextl 1;
               endif
      (tpt)    exec tpt_run#run
	       if (staf_status(1) .ne. stafcv_ok) then 
                 message ' problem with tpc_tracker_tpt'
               endif 
    (tte_t)    exec tte_run#run_tte_track
                 if (staf_status(1) .ne. stafcv_ok) then 
                   message ' problem with tpc_tracker_tte'
                 endif
      (tid)    exec tid_run#run_tde_new 
               if (staf_status(1) .ne. stafcv_ok) then 
                 message ' problem with tpc_tracker_tpt'
               endif
    (tte_e)    exec tte_run#run_tte
      (svm)    exec run_svm#run_svm 	     |  TPC to SVT Matching 
      (evr)    exec run_evr
      (egr)    exec run_egr#egr	|  Event Global Refit
      (ev0)    exec run_ev0#ev0_am           |  V0 Finder 
    (ev0_e)    exec run_ev0#ev0_eval2  
      (ctf)    exec cts_run
               exec ctu_run 
      (mwc)    exec mws_run
	       exec mwu_run
      (trg)    exec l3cl_run
	       exec ftf_run
      (emc)    exec run_ems#ems_interface2  
      (jet)    exec run_jet#egrid
               exec run_jet#erj
    (ddedx)    exec run_dst#dst_dedx_filler
    (dmsft)    exec run_dst#dst_mon_soft
    (dmhrd)    nextl 1
    (desum)    nextl 1
    (drsum)    nextl 1
    (evout)    if [output_xdf_file]="" then
                 message "Empty output file"
               else
		 exec write_table_to_file#write outfile [event]
	       endif
        (*)    message " !!! bfc_util: No process stage for package " [mod]
      if (staf_status(1) .ne. stafcv_ok) goto NEXT_EVENT
   ENDCASE
	     
   sigma v[mod] = v[mod] + abs($cptime)
   sigma t[mod] = t[mod] + v[mod]
   ccc = '---'
   fmt = [ccc]//'<bfc>: Event  '//[ievent]//[ccc]//[mod]//' =' 
   fmt = $quote($quote([fmt]))//',2f12.5'
   vec/wr  v[mod],t[mod] ! [fmt]
   vec/inp v[mod] 0.0
   
  enddo
 
 NEXT_EVENT:
 EOF:
 
return
 
**********************************************************************
**********************************************************************
**********************************************************************

macro bfc_finish _
   chain=' g2tin svg tpg srs tfs sgr tpt tte_e svm egr ev0 evout'
  
  macro/global/import *
  test = [chain]
  nw = $words([test])
  do i = 1, [nw]
    mod = $word([test],[i],1)
    CASE [mod] in 
     (g2tin)  exec input_g2t_file#close
      (rgst)  ge/rz/cd //PAWC;
	        hi/list;  | show histograms
     (evout) exec write_table_to_file#close outfile;
      (*) message " !!! bfc_util#bfc_finish No final stage for package " [mod]
    ENDCASE
  enddo
return
 
**********************************************************************
**********************************************************************
**********************************************************************
 
 macro bfc_print chain='evout'
   
  macro/global/import *
  test = [chain]
  nw = $words([test])
  do i = 1, [nw]
    mod = $word([test],[i],1)
    ccc = '---'
    fmt = '<bfc>: Event'//[ievent]//[ccc]//[mod]//[ccc]//' =' 
    fmt = $quote($quote([fmt]))//',2f10.5'
    vec/wr  v[mod],t[mod] ! [fmt]
  enddo
  
 return
 
*********************************************************************
**********************************************************************
************************************************************
 
macro bfc_g2t_b4_load chain
   
   macro/global/import *
           
 test1 = [chain]
 nw1=$words([test1])
 message ' !!! bfc_g2t_b4_load ==> Number of words in chain = ',[nw1]
 do i=1,[nw1]
   mod1 = $word([test1],[i],1)
   CASE [mod1] in
     (rg2t)
         message ' !!! bfc_g2t_b4_load ==> set params for chain:' [mod1]
* initialize for g2t: tell g2t where to put tables
         detp g2tmain gttc.rdir=0		  
   ENDCASE
 enddo
       
return

**********************************************************************
**********************************************************************
***********************************************************************
******************************************************************
 
 macro bfc_g2t_after_load chain
   
   macro/global/import *
     
*  must fill Run tables if running g2t (rg2t in chain)
*  has to be done after loading
 test2 = [chain]
 nw2=$words([test2])
 message ' !!! bfc_g2t_after_load ==> Number of words in chain = ',[nw2]
 do i=1,[nw2]
   mod2 = $word([test2],[i],1)
   CASE [mod2] in
     (rg2t) 
       message ' !!! bfc_g2t_after_load ==> setup for chain:' [mod2]
* this command fills geant Run tables
        tables ' ' [geant_Run]
   ENDCASE
 enddo
  
return



**********************************************************************
**********************************************************************
**********************************************************************

















