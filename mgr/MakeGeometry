#!/usr/local/bin/perl
#
# (c) J.Lauret 2019
#
# Handle generating geometry files and will avoid all
# of those issues with "cons" cross-dependencies.
#
# If cons fails or you want to start afresh, use -r to
# delete the target directory needed.
#
#
use Env;

$SYSNM = $ENV{STAR_HOST_SYS};
$STARD = ($ENV{NODEBUG}?"OBJ":"obj");
$CNT   = 0;

die "Could not find a directory named StarVMC\b" if ( ! -d "StarVMC");

# quick and dirty, will parse later of more options are needed
if ( $ARGV[0] eq "-r"){
    print "Deleting the install directory\n";
    system("/bin/rm -fr .$SYSNM/$STARD/StarVMC");
}
if ( ! -e ".$SYSNM/$STARD/StarVMC"){
    $BUILD = 1;
} else {
    $BUILD = 0;
}


# open pipe to find and process XML
open(PP,"/usr/bin/find StarVMC -name '*.xml' -print |");

while ( defined($f = <PP>)) {
    chomp($f);
    $f =~ m/(.*\/)(.*)(\..*)/;
    ($p,$f,$module) = ($1,$2.$3,$2); 

    $CMD1 = "mgr/agmlParser.py --file=$p$f --module=$module --export=AgROOT --path=StarVMC/StarGeometry";
    $CMD2 = "mgr/agmlParser.py --file=$p$f --module=$module --export=Mortran > StarVMC/xgeometry/$module.age";

    $TEST3 = $TEST2 = $TEST1 = 0;
    $t = (stat("$p$f"))[9];

    # TGeo
    foreach $ext ( (".h",".cxx") ){
	if ( -e "StarVMC/StarGeometry/$module$ext" ){
	    #$T = (stat("StarVMC/StarGeometry/$module$ext"))[10];
	    #print "[$T] [$t]\n";
	    $TEST2 |= (stat("StarVMC/StarGeometry/$module$ext"))[10] < $t;
	} else {
	    $TEST1 |= 1;
	}
    }
    # Motran
    if ( -e "StarVMC/xgeometry/$module.age"){
	$TEST3 |= (stat("StarVMC/xgeometry/$module.age"))[10] < $t;
    } else {
	$TEST3 |= 1;
    }

    # Now execute the commands
    if ( $p !~ m/Compat/ ){
	if ( $TEST1 || $TEST2 ){
	    print "Need to update TGeo  files for $module\n";
	    system($CMD1);
	    $CNT++;
	} else {
	    print "TGeo files for  $module are up to date\n";
	}
    }
    if ( $TEST3 ){
	print "Need to update Motran file for $module\n";
	system($CMD2);
	$CNT++;
    } else {
	print "Motran file for $module is up to date\n";
    }
       
}

print 
    "If you are executing this from several windows, please launch ".
    "the others now ...\n";

# Any $CNT != means we have generated something
# we could do a cons +StarVMC/Geometry - this will
# install the age files
if ( $CNT != 0 || $BUILD ){
    print "$CNT files (re)generated\n";
    print "Finalizing ... please wait ".localtime()."\n";
    system("cons +StarVMC/Geometry >&/dev/null");
    print "Finalizing ... please wait ".localtime()."\n";
    system("cons -k +StarVMC >&/dev/null");
} 
print "Done ".localtime()."\n";


