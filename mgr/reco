#!/usr/local/bin/tcsh
#  $Id: reco,v 1.2 1998/08/19 18:01:37 didenko Exp $
#  $Log: reco,v $
#  Revision 1.2  1998/08/19 18:01:37  didenko
#  error correction
#
#  Revision 1.1  1998/08/19 17:30:48  didenko
#  new script to submit jobs
#
#  Revision 1.1  1998/08/17 14:44:28  didenko
#  ****
#
# This script is to submit an example job to execute  NQS queues.
# You can submit it with the command: 
#	qsub -q express star_nqs.batch      
# You can modify your copy of this script to suit your needs.
#
# When this script starts executing, assumes as default directory
# the directory from where you submitted it. First compiles any
# fortran files and after that creates the executable at the NQS
# workspace. Several files are linked to the current directory to
# create the default running environment.
#  
# During the execution output files are written at the directory you
# submitted the script. Check if your quota space is enough.
#
#  
# DQS embedded directives  follow
#@$ -a 12241200  # date-time to run, format [[CC]yy]MMDDhhmm[.SS]
# merge std error and out
#$ -eo           
# Send mail to these users
#$ -M fisyak@bnl.gov,didenko@bnl.gov
# Mail at beginning/end/on suspension
#$ -m bes        
# under what shell to execute
#$ -s /usr/local/bin/tcsh 
#    
# Go to the directory from where job was submitted.
#   
echo Starting job execution at `date`
set first      = 1
set no_events  = 20
set size       = 80
set prefix_in  = /star/mds/data/SD98/auau200/bfc/central/hijing/set0001/regular/tss/
set input_file = auau_ce_b0-2_0001_0020
set dir_out    = /star/mds/data/SD98/auau200/bfc/central/hijing/set0001/regular/reco
while ( $#argv > 0 )
        switch ($1)
        case -f:        # set first
        shift; if ( $#argv > 0 ) set first  = $1
                breaksw
        case -n:        # no. of event to process
        shift; if ( $#argv > 0 ) set no_events = $1
                breaksw
	case -i:
	shift; if ( $#argv > 0 ) set input_file = $1
        default:
	case -s:
	shift; if ( $#argv > 0 ) set size = $1
        default:
                echo $1 unrecognised
        endsw
        if ( $#argv > 0 ) shift
end
set first = `echo ${input_file} | sed -e 's/auau_ce_b0-2_//g' -e 's/.xdf//' | awk -F_ '{print $1}'`
if ( -d $dir_out) mkdir -p $dir_out
cd 
if ( -d PILOT == 0) mkdir -p PILOT
cd PILOT 
if ( -d log == 0) mkdir -p log
cd log
if ( -d reco == 0) mkdir -p reco
cd reco
if (! ${?JOB_ID}) setenv JOB_ID "000" 
  set log      = ${SCRATCH}/reco/`hostname`_job_${JOB_ID}_bfc_${first}_${no_events}
  set log_dir  = `dirname ${log}`
  if ( -d ${log_dir} == 0) mkdir -p ${log_dir}
  set log_file = $HOME/PILOT/log/reco/${first}_${no_events}_`hostname`_job_${JOB_ID}_bfc
  set log_done = $HOME/PILOT/summary/reco/run_${first}_${no_events}${JOB_ID}_`hostname`_bfc
touch ${log_file}
STAR_LEVELS >>  ${log_file}
if ( -e ${log}) rm ${log}
cd ${SCRATCH}/reco
if ( -d bfc_$first == 0) mkdir -p bfc_$first
cd bfc_$first
if ( -e  batch_${first}.kumac ) rm  batch_${first}.kumac 
cat > batch_${first}.kumac <<EOF
trace off full
debug on 
   exec $STAR/kumacs/chain/bfc _ 
   TOP=$STAR _
   tpc_sector_first=1 _
   tpc_sector_last=24 _
   gstar_settings=' field_only' _
   domain=' geometry tpc svt global ' _
   chain=' evin tpg svg tcl tpt tte_e tid sgr svm egr ev0 evout' _
   first=${first} _ 
   no_events=${no_events} _ 
   input_data_prefix=${prefix_in} _ 
   input_data_file=${input_file}.xdf _ 
   output_file=${dir_out}/${input_file} _ 
   log=${log_file} 
exit 
EOF
time  staf -w 0 -b batch_${first}.kumac >& ${log}
# Clean files/links not needed anymore...
mv ${log_file} ${log_file}.done
mv ${log} ${log_done}
echo
echo   Job finished at `date`

#END








