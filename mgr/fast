#!/usr/local/bin/tcsh
#  $Id: fast,v 1.1 1998/05/15 21:38:49 fisyak Exp $
#  $Log: fast,v $
#  Revision 1.1  1998/05/15 21:38:49  fisyak
#  add fast
#
# This script is to submit an example job to execute  NQS queues.
# You can submit it with the command: 
#	qsub -q express star_nqs.batch
# You can modify your copy of this script to suit your needs.
#
# When this script starts executing, assumes as default directory
# the directory from where you submitted it. First compiles any
# fortran files and after that creates the executable at the NQS
# workspace. Several files are linked to the current directory to
# create the default running environment.
# 
# During the execution output files are written at the directory you
# submitted the script. Check if your quota space is enough.
#
#
# DQS embedded directives  follow
#@$ -a 12241200  # date-time to run, format [[CC]yy]MMDDhhmm[.SS]
#$ -eo           # merge std error and out
#$ -m bes        # Mail at beginning/end/on suspension
#$ -M fisyak@bnl.gov       # Send mail to these users
#$ -s /usr/local/bin/tcsh # under what shell to execute
#
# Go to the directory from where job was submitted.
#
echo Starting job execution at `date`
set part      = 0001_0010
set nevent    = 10
set inp_dir   = /star/mds/data/SD98/auau200/g2t/central/hijing/set0001/regular
set out_dir   = /star/mds/data/SD98/auau200/fast/central/hijing/set0001/regular
set home_dir  = /star/u2d/fisyak/sol/SL98c
while ( $#argv > 0 )
        switch ($1)
        case -p:        # set part
        shift; if ( $#argv > 0 ) set part  = $1
                breaksw
        case -n:        # no. of event to process
        shift; if ( $#argv > 0 ) set nevent = $1
                breaksw
	case -h:
	shift; if ( $#argv > 0 ) set home = $1
        default:
                echo $1 unrecognised
        endsw
        shift
end
if ( -d $out_dir) mkdir -p $out_dir
set log  = `hostname`_fast_${part}_`date +"%d_%h_%Y"`
#
cd ${SCRATCH}
if ( -d log/fast/${part} == 0) mkdir -p log/fast/${part}
cd log/fast
if ( -e ${log}) rm ${log}
cd ${part}
if ( -e  batch_${part}.kumac ) rm  batch_${part}.kumac 
cat > batch_${part}.kumac <<EOF
trace on full
debug on
exec /star/sol/users/fisyak/SL98c/kumacs/chain/emc_glob_svt_tpc_chain no_events=${nevent} _
input_data_dir=${inp_dir}/ _
inp_file=auau_ce_b0-2_${part}.xdf _ 
output_data_dir=${out_dir}/ _
out_file=auau_ce_b0-2_${part}.xdf 
*svt_simul=sss
exit

EOF
# ============================================
time staf -w 0 -g 0 -b batch_${part}.kumac  > ${SCRATCH}/log/fast/${log}
#
# Clean files/links not needed anymore...
echo
echo   Job finished at `date`
#
#END








