#!/opt/star/bin/perl
# $Id: Construct,v 1.90 2000/03/07 14:38:18 fisyak Exp $
use Env;
#use lib qw($STAR . "/mgr"); # Modify perl include path
use lib $STAR . "/mgr"; # Modify perl include path
use ConsDefs;
print "Install includes\n";
my @subdirs = ();
# make Targets and install includes
foreach my $dir ("pams","StRoot"){#,"StDb") {
  next if ! -d $dir;
  opendir (DIR, $dir) or die "Can't open $dir\n";
  my @subdirS = readdir DIR;
  closedir DIR; #print "subdirS = @subdirS\n";
  foreach my $sub_dir (@subdirS) {
    my $sub_DIR = $dir . "/" . $sub_dir; #print "sub_DIR = $sub_DIR\n";
    if (-d $sub_DIR) {
      if ($sub_dir =~ /^macros$/     ||
	  $sub_dir =~ /^test$/)  {next;}
      if ($sub_dir =~  /\./ || $sub_dir =~ /\.\./ || $sub_dir =~ /CVS/ || 
	  $sub_dir =~ /^html$/ || $sub_dir =~ /^test$/ || $sub_dir =~ /^doc/) {next;}
      if ($sub_dir =~ /^St_base$/ ||
	  $sub_dir =~ /^Star2Root$/ ||
	  $sub_dir =~ /^StChain$/ ||
	  $sub_dir =~ /^StBFChain$/ ||
	  $sub_dir =~ /^StUtilities$/ ||
	  $sub_dir =~ /^StAnalysisUtilities$/ ||
	  $sub_dir =~ /^xdf2root$/ ||
	  $sub_dir =~ /^StarClassLibrary$/ ||
	  $sub_dir =~ /^StEvent$/ ||
	  $sub_dir =~ /^StEventUtilities$/ ||
	  $sub_dir =~ /^StMcEvent$/ 
	 ) {
	opendir (DIR, $sub_DIR) or die "Can't open $sub_DIR\n";
	my @incs = readdir DIR; 
	closedir DIR; #print "incs = @incs\n";
	my @incT = ();
	foreach my $inc (@incs) {
	  if ($inc =~ /\.h$/ || $inc =~ /\.hh$/ ||$inc =~ /\.inc$/) { 
	    push @incT, $sub_DIR ."/" . $inc;# print "+++ add $inc\n";
	  }
	}
	if ($#incT > -1 && ! $param::rflag) {Install $env $INCLUDE, @incT;}
      }
      opendir (DIR, $sub_DIR) or die "Can't open $sub_DIR\n";
      my @subsubdirS = readdir DIR;
      closedir DIR;# print "subsubdirS = @subsubdirS\n";
      foreach my $subsub_dir (@subsubdirS) {
	my $subsub_DIR = $sub_DIR . "/" . $subsub_dir;
	if (-d $subsub_DIR) {
	  if ($subsub_dir =~  /\./     || $subsub_dir =~ /\.\./  || 
	      $subsub_dir =~ /CVS/     || $subsub_dir =~ /^doc/  ||
	      $subsub_dir =~ /^local/  || $subsub_dir =~ /^run/  ||
	      $subsub_dir =~ /^wrk$/   ||
	      $subsub_dir =~ /^example/|| $subsub_dir =~ /^kumac/) {next;}
	  if ($subsub_dir =~ /^inc$/ || $subsub_dir =~ /^idl$/ ) {
	    opendir (DIR, $subsub_DIR) or die "Can't open $sub_DIR\n";
	    my @incs = readdir DIR; 
	    closedir DIR; #print "subsub_DIR = $subsub_DIR\n";
	    my @incT = ();
	    foreach my $inc (@incs) {
	      if ($inc =~ /\.h$/ || $inc =~ /\.hh$/ || 
		  $inc =~ /\.hpp$/ || $inc =~ /\.inc$/ ||
		  $inc =~ /\.idl$/) {
		push @incT, $subsub_DIR ."/" . $inc; #print "+++ add $inc\n";
	      }
	    }
	    if ($#incT > -1 && ! $param::rflag) {Install $env $INCLUDE, @incT;}
	    next;
	  }
	  if (($sub_dir =~ /^sim$/ || $sub_dir =~ /^gen$/)){
	    # &&  $subsub_dir !~ /^g2t$/) {
	    # one more level for gen & sim
	    if ($SKIP_DIRS && $SKIP_DIRS =~ $subsub_dir) {
	      print "skip dir: $subsub_dir \t=> $SKIP_DIRS\n";
	      next;
	    }
	    push @subdirs, $subsub_DIR; #print "================== add $subsub_DIR\n";
	  }
	}
      }
#      if ($sub_dir =~ /^sim$/ || $sub_dir =~ /^gen$/) {next;} 
      if ($SKIP_DIRS && $SKIP_DIRS =~ $sub_dir) {
	print "skip dir: $sub_dir \t=> $SKIP_DIRS\n";
	next;
      }
#      next if ($sub_dir =~ /tables/);
      if ($STAR_HOST_SYS =~ /^hp_ux102$/ &&  
	  ($sub_dir =~ /StHbtMaker/ || $sub_dir =~ /StFlow/)) {next;}
      if ($STAR_HOST_SYS =~ /^sun4x_56$/ &&  
	  ($sub_dir =~ /StHbtMaker/ || 
	   $sub_dir =~ /StSpectraMaker/ || 
	   $sub_dir =~ /StRrsMaker/ || 
	   $sub_dir =~ /StAngleCorrMaker/ ||
	   $sub_dir =~ /StSpectraTagsMaker/ 
	  )) {next;}
      push @subdirs, $sub_DIR;# print "================== add $sub_DIR\n";
    }
  }
}
print "subdirs = @subdirs\n"  if $param::debug;
my @Targets = ();
foreach $dir ("asps/rexe","StDb",@subdirs) {
  if (-d $dir) {
    print "Add dir : $dir\n" if $param::debug;
    push @Targets, $OBJ . "/" . $dir . "/Conscript";
  }
}
print "BUILD  = $BUILD EXPORT =  $EXPORT OBJ = $OBJ\n" unless ($param::quiet);  
print "Targets = @Targets\n" if $param::debug;
Export qw( env INCLUDE LIB BIN EXPORT BUILD OBJ MAIN);
Default qw (   .  );
Build  @Targets;
#________________________________________________________________________________
__END__;
