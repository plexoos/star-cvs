#!/usr/bin/env perl
use Env;
#if (defined($AFS)) {$File::Find::dont_use_nlink;}
require "find.pl";
my @dirs = ();
if ($#ARGV > -1) {push @dir, $ARGV[0]; }
else {push @dirs, "obj"; push @dirs, "OBJ";}
my $KEEP = 1;
if ($#ARGV > 0) {$KEEP = $ARGV[1];}
foreach my $dir (@dirs) {
  if (-l $dir) {
    $dir = readlink $dir;
  }
  if (-r $dir) {
    print "Run $0 in $dir keep = $KEEP\n";
    &File::Find::find (\&wanted_S,$dir);
  }
  sub wanted_S {
    ($dev,$ino,$mode,$nlink,$uid,$gid) = lstat($_);
    my $name = $File::Find::name;# print "name = $name\n";
    if (-e _ && /\.\d+$/) {#    print "Version $name\n";
      my $so = $_; $so =~ s/\.\d*$//; 
      my $link = $so; 
      if (-l $link) {
	my $file = readlink $link;#      print "Found Link = $link -> $file\n";
	my $vers = $file; $vers =~ s/$so\.//;# print "so = $so vers = $vers\n";
	#      chop ($file);
	$so .= ".*"; #print "so = $so\n";
	my @So = glob $so; #print "sos = @So\n";
	my $keep = 0;
	foreach my $s (@So) {
	  my $v = $s; $v =~ s/$so\.//;# print "s = $s v = $v vers = $vers\n";
	  next if !$v;
	  if ($vers == $v) {
	    print "keep \t$file => \t$link\n";
	    next;
	  }
	  my $diff = $vers - $v - $KEEP;
	  if ($diff lt 0) {
	    print "keep \t$file => \t$link / $s : $vers - $v - $KEEP = $diff < 0\n"; 
	    next;
	  }
	  print "Delete $s \n";
	  unlink $s;
	}
      }
    }
  }
}
