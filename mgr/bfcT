#!/usr/local/bin/perl
use Env;
use File::Basename;
use File::Copy;
system 'echo "Starting job execution at" `date` " on " $HOSTNAME';
print "STAR_LEVEL = $STAR_LEVEL\n";
my $Chain = "";
die "No input Chain defined" if ! defined($ARGV[0]);
for (my $i = 0;$i<=$#ARGV;$i++){
  if ($ARGV[$i] && ! ($ARGV[$i] =~ /\./)) {$Chain .= " " .  $ARGV[$i];}
}
my  $input_file;
my  @ACTUAL_OUTPUTS = ($ACTUAL_OUTPUT0,
		       $ACTUAL_OUTPUT1,
		       $ACTUAL_OUTPUT2,
		       $ACTUAL_OUTPUT3);

my @OUTPUTS = ($OUTPUT0,
	       $OUTPUT1,
	       $OUTPUT2,
	       $OUTPUT3);

my  @OUTPUT_FILES = ();
my  @output_files = ();
if ($ACTUAL_INPUT0) {
  chomp ($ACTUAL_INPUT0);
  print "Input: ",$ACTUAL_INPUT0, "\n";
  $input_file = basename($ACTUAL_INPUT0);
  print "input: ",$input_file,"\n";
  foreach my $actual_output (@ACTUAL_OUTPUTS) {
    if ($actual_output) {
      push @OUTPUT_FILES, $out;
      my $outf = basename($out);
      push @output_files, $outf;
    }
  }
  print "ACTUAL_OUTPUTS = @ACTUAL_OUTPUTS\n";
  print "OUTPUT_FILES   = @OUTPUT_FILES\n";
  print "output_files   = @output_files\n";
  my $out_dir      = dirname ($OUTPUT_FILES[0]);
  print "Dirname:", $out_dir, "\n";
  if ($out_dir && !-d $out_dir) {mkdir $out_dir,0773;}
  foreach my $out (@output_files) {unlink $out if $out && -f $out;}
  symlink $INPUT0      ,  $input_file;
  for (my $i = 0; $i<=$#OUTPUT_FILES; $i++) {
    next if ! $output_files[$i];
    symlink $output_files[$i],  $OUTPUTS[$i]; # convert to real names
  }
}
else {
  for (my $i = 0;$i<=$#ARGV;$i++){
    if ($ARGV[$i] && $ARGV[$i] =~ /\./) {$input_file =  $ARGV[$i];}
  }
}
die "No input file has been defined" if ! $input_file;

symlink "/star/data20/reco/StarDb", "StarDb";
my $cmd = " root4star -q -b 'bfc.C(400,\"in TpcT0 ry2001\",\"" . $input_file . "\")\'";
system 'echo "Start calibration job execution at" `date` " on " `hostname`'; 
print "$cmd\n";
system $cmd;
system 'echo "Finished job execution at" `date` " on " `hostname`'; 


exit 0;
#______________________________________________________
#________________________________________________________________________________
__END__;





