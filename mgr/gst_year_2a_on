#! /usr/local/bin/tcsh -f
#  $Id: gst_year_2a_on,v 1.2 2006/08/15 18:37:32 jeromel Exp $
#  $Log: gst_year_2a_on,v $
#  Revision 1.2  2006/08/15 18:37:32  jeromel
#  rhic -> rhic.bnl.gov
#
#  Revision 1.1  1998/09/25 00:27:00  fisyak
#  Add job control scripts
#
#  Revision 1.2  1998/09/09 04:37:34  fisyak
#  simplify logic
#
#  Revision 1.1  1998/09/08 23:10:12  fisyak
#  gstar+g2t  for 2a
#
# This script is to submit an example job to execute  NQS queues.
# You can submit it with the command: 
#	qsub -q express star_nqs.batch      
# You can modify your copy of this script to suit your needs.
#
# When this script starts executing, assumes as default directory
# the directory from where you submitted it. First compiles any
# fortran files and after that creates the executable at the NQS
# workspace. Several files are linked to the current directory to
# create the default running environment.
#  
# During the execution output files are written at the directory you
# submitted the script. Check if your quota space is enough.
#
#  
# DQS embedded directives  follow
#@$ -a 12241200  # date-time to run, format [[CC]yy]MMDDhhmm[.SS]
# merge std error and out
#$ -eo           
# Send mail to these users
#$ -M fisyak@bnl.gov,didenko@bnl.gov
# Mail at beginning/end/on suspension
#$ -m bes        
# under what shell to execute
#$ -s /usr/local/bin/tcsh 
#    
# Go to the directory from where job was submitted.
#   
echo Starting job execution at `date`
setenv NODEBUG on
source /afs/rhic.bnl.gov/rhstar/group/.stardev
echo $STAR_LIB
set first  = 1
set prefix_in  = "/star/mds/data/SD98/auau200/evg/central/hijing/set0001/regular/auau_ce_b0-2"
set prefix_out = "/disk1/star/auau200/year2a/central/hijing/set0001/regular/gst/auau_ce_b0-2"
set no_events  = 50
while ( $#argv > 0 )
        switch ($1)
        case -f:        # set first event no.
        shift; if ( $#argv > 0 ) set first  = $1
                breaksw
        case -n:        # 
        shift; if ( $#argv > 0 ) no_events  = $1
                breaksw
        case -s:        # data set 
        shift; if ( $#argv > 0 ) set dir = $1
                breaksw
        default:
                echo $1 unrecognised
        endsw
        if ( $#argv > 0 ) shift
end
if ( -d $HOME/MDC1 == 0) mkdir -p $HOME/MDC1
if ( -d $HOME/MDC1/log == 0) mkdir -p $HOME/MDC1/log
if ( -d $HOME/MDC1/log/gst_year_2a == 0) mkdir -p $HOME/MDC1/log/gst_year_2a
if ( -d $HOME/MDC1/requests/gst_year_2a == 0) mkdir -p $HOME/MDC1/requests/gst_year_2a
if (! ${?JOB_ID}) then
  set JOB_ID = 000 
  set DQS_STDOUT = "$HOME/MDC1/requests/gst_year_2a/run_${first}_${JOB_ID}_`hostname`_gst_year_2a"
endif
  set log_file = `basename $DQS_STDOUT`
  set log      = ${SCRATCH}/gst_year_2a/`hostname`_job_${JOB_ID}_gst_year_2a_${first}_${no_events}
  set log_dir  = `dirname ${log}`
  if ( -d ${log_dir} == 0) mkdir -p ${log_dir}
  set log_done = $HOME/MDC1/log/gst_year_2a/hadronic_on_${first}_${no_events}_`hostname`_job_${JOB_ID}_gst_year_2a
touch ${DQS_STDOUT}
STAR_LEVELS >> ${DQS_STDOUT}
if ( -e ${log}) rm ${log}
cd ${SCRATCH}/gst_year_2a
if ( -d gst_year_2a_${first}_${no_events} == 0) mkdir -p gst_year_2a_${first}_${no_events}
cd gst_year_2a_${first}_${no_events}
if ( -e  batch_${first}.kumac ) rm  batch_${first}.kumac 
time  staf -w 0 -g 20 >& ${log} <<EOF
trace on full
debug on 
   exec $STAR/kumacs/chain/gst_year_2a_on _ 
   first=$first _
   no_events=$no_events _
   prefix_in=$prefix_in _
   prefix_out=$prefix_out _
   log=$log_file 
exit 

EOF

# Clean files/links not needed anymore...
cat $log_file >> ${DQS_STDOUT}
mv ${log} ${log_done}
echo
echo   Job finished at `date`

#END









