#!/bin/csh

#
# (c) J. Lauret 2020 - helper script for consistent 
#     compilation with reference and master/replica
#

if ( ! $?SCRATCH ) then
   setenv SCRATCH /tmp/$USER/$$
   /bin/mkdir -p $SCRATCH
endif

STAR_LEVELS

set optl="Debug"
if ( $?NODEBUG ) then
    if ( $NODEBUG == 1 ) then
	set arch="Optmized"
    endif
endif

# this can be done independently of the Geometry making
# which will take a while so ... why not gaining some time?
if ( -d "asps") then
    echo "Compiling asps on `/bin/date`"
    cons -k +asps >&$SCRATCH/asps.$STAR_HOST_SYS.$optl.log &
    sleep 5
endif
# those are not necessary now but can be done in //
if ( -d "pams") then
    echo "Compiling pams on `/bin/date`"
    cons -k +pams >&$SCRATCH/pams.$STAR_HOST_SYS.$optl.log &
    sleep 5
endif


# That's the long one we need to do separatly from "cons"
if ( -e "mgr/MakeGeometry" ) then
    echo "Preparing geometry (this may take a while)"
    mgr/MakeGeometry
endif

# wait for my above detached compilation to end
wait
rehash



set ISAFS   = `echo $PWD | grep '/afs/'`
set ISCVMFS = `echo $PWD | grep '/cvmfs/'`

if ( "$ISAFS" == "" && "$ISCVMFS" == "" ) then
    echo "You are making a local compilation"
    cons
else
    if ( "$ISAFS" != "" ) then
	echo "We are in AFS ... Due the Master/Replica mechanism, there "
	echo "are many (redundant) steps to perform. Be patient."
	echo ""
	echo "We will release the volume to create a baseline `/bin/date`"
	relVol -w
	rehash

	echo "We will now compile ignoring all errors         `/bin/date`"
	sleep 5
	cons -k 
	echo "Doing some cleanup"
	mgr/CleanLibs  0
	echo "Master/Replica in AFS requires another release  `/bin/date`"
	relVol -w 
	rehash

	echo "Compiling using the Replica as reference        `/bin/date`"
	sleep 5
	cons -k
    else
	echo "We are in CVMFS - good news, this will be easier"
	rehash
	echo "We will now compile ignoring all errors         `/bin/date`"
	cons -k 
	rehash
    endif
    echo "Now finalizing - this pass should show nothing else to do"
    cons

    mgr/CleanLibs  0  &
    echo <<EOF 

This pass should have ended saying 

cons: "." is up-to-date

If not, you need to type "cons" again.
If so, you are done and you can now release the volume once for all
ongoing compilations and you are all done. Remember to test this
library ... 

EOF
    wait
endif

