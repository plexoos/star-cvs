#!/usr/local/bin/tcsh
#  $Id: t3e,v 1.2 1998/09/08 06:46:08 fisyak Exp $
#  $Log: t3e,v $
#  Revision 1.2  1998/09/08 06:46:08  fisyak
#  Standard extension for HP StAF libraries
#
#  Revision 1.1  1998/08/25 21:32:26  didenko
#  new script to run mds files
#
#  Revision 1.5  1998/08/21 20:57:46  didenko
#  fixed log file
#
#  Revision 1.2  1998/08/21 20:08:36  fisyak
#  add log
#
#  Revision 1.1  1998/08/21 15:44:48  fisyak
#  Add reco_ds
#
#  Revision 1.3  1998/08/19 21:41:41  fisyak
#  Split base -> base + xdf2root
#
#  Revision 1.2  1998/08/19 18:01:37  didenko
#  error correction
#
#  Revision 1.1  1998/08/19 17:30:48  didenko
#  new script to submit jobs
#
#  Revision 1.1  1998/08/17 14:44:28  didenko
#  ****
#
# This script is to submit an example job to execute  NQS queues.
# You can submit it with the command: 
#	qsub -q express star_nqs.batch      
# You can modify your copy of this script to suit your needs.
#
# When this script starts executing, assumes as default directory
# the directory from where you submitted it. First compiles any
# fortran files and after that creates the executable at the NQS
# workspace. Several files are linked to the current directory to
# create the default running environment.
#  
# During the execution output files are written at the directory you
# submitted the script. Check if your quota space is enough.
#
#  
# DQS embedded directives  follow
#@$ -a 12241200  # date-time to run, format [[CC]yy]MMDDhhmm[.SS]
# merge std error and out
#$ -eo           
# Send mail to these users
#$ -M fisyak@bnl.gov,didenko@bnl.gov
# Mail at beginning/end/on suspension
#$ -m bes        
# under what shell to execute
#$ -s /usr/local/bin/tcsh 
#    
# Go to the directory from where job was submitted.
#   
echo Starting job execution at `date`
set first  = 1
set no_of_files = 16
set mds     = "/star/mds/data/SD98"
set hpss    = "/disk1/star"
set set_dir = "/auau200/hijing135/default/b0_3/year1a/hadronic_off/Gstardata"
set dir     = pet020
set dir_out = "${hpss}${dir}"

while ( $#argv > 0 )
        switch ($1)
        case -f:        # set list of input files
        shift; if ( $#argv > 0 ) set first  = $1
                breaksw
        case -n:        # set no_of_files
        shift; if ( $#argv > 0 ) no_of_files  = $1
                breaksw
        case -s:        # data set 
        shift; if ( $#argv > 0 ) set dir = $1
                breaksw
        default:
                echo $1 unrecognised
        endsw
        if ( $#argv > 0 ) shift
end
set data = ${set_dir}/${dir}
cd  ${mds}/${data};
set second = `expr $first + 1`
set list = `ls *.fz`
set list_of_files = ""
set no   = 0
set last = `expr $first + $no_of_files - 1`
foreach file ($list)
  set no = `expr $no + 1`
  if ($no < $first || $no > $last ) then
  else
    set list_of_files = "${list_of_files} ${file}"
  endif
end
echo $list_of_files
cd -
if ( -d $dir_out) mkdir -p $dir_out
cd 
if ( -d MDC1 == 0) mkdir -p MDC1
cd MDC1 
if ( -d log == 0) mkdir -p log
cd log
if ( -d tss_mds == 0) mkdir -p t3e_tss
cd t3e_tss
if (! ${?JOB_ID}) then
  set JOB_ID = 000 
  set DQS_STDOUT = "$HOME/MDC1/summary/t3e_tss/run_${first}_${JOB_ID}_`hostname`_t3e_tss"
endif
  set log_file = `basename $DQS_STDOUT`
  set log      = ${SCRATCH}/t3e_tss/`hostname`_job_${JOB_ID}_t3e_tss_${first}_${dir}
  set log_dir  = `dirname ${log}`
  if ( -d ${log_dir} == 0) mkdir -p ${log_dir}
  set log_done = $HOME/MDC1/log/t3e_tss/hadronic_off_${dir}_${first}_`hostname`_job_${JOB_ID}_t3e_tss
  touch ${DQS_STDOUT}
STAR_LEVELS >> ${DQS_STDOUT}
if ( -e ${log}) rm ${log}
cd ${SCRATCH}/t3e_tss
if ( -d tss_${first}_${dir} == 0) mkdir -p tss_${first}_${dir}
cd tss_${first}_${dir}
if ( -e  batch_${first}.kumac ) rm  batch_${first}.kumac 
cat > batch_${first}.kumac <<EOF
trace off full
debug on 
   exec $STAR/kumacs/chain/t3e_tss _ 
   TOP=$STAR _
   list_of_files='${list_of_files}' _
   mds=${mds} _
   hpss=${hpss} _
   set=${data} _
   log=$log_file 
exit 
EOF
cat  batch_${first}.kumac >> $DQS_STDOUT
time  staf -w 0 -g 20 -b batch_${first}.kumac >& ${log}
# Clean files/links not needed anymore...
cat $log_file >> $DQS_STDOUT
mv ${log} ${log_done}
echo
echo   Job finished at `date`

#END








