/*    emcCalSettings.idl
*
*  Table: emcCalSettings
*
*       description: //:  Table which contains the calibration settings
*/ 


struct emcCalSettings { 

   long  DataType;   /*     data type  */
   long  UseL3Tracks;   /*     type of track used  */
   float  ZVertexCut;   /*     z vertex cut  */
   long  NEtaBins;   /*     number of eta bins  */
   float  EtaBinWidth;   /*     width of eta bin  in detector units  */
   long  DoEqualization;   /*     1 - Equalize eta bins, 0 - dont equalize  */
   long  EqualizationMethod;   /*     equal method  */
   float  EqEventsPerBin;   /*     minimum number of events per bin for Equalization  */
   float  EqMinNumberOfTracks;   /*     minimum number of tracks for a equalization event  */
   float  EqMinOccupancy;   /*     minimum occupancy for hole detector for equalization  */
   long  UseMipCalib;   /*     1 - use MIP peak for calibration, 0 - Dont use MIP  */
   long  UseMipEtaBin;   /*     1 - use Etabin (requires equalization), 0 - Dont use Etabin  */
   float  EOverMipCte;   /*     see V.Rykov for details  */
   long  MipPeakFitFuntion;   /*     function used to fit the MIP peak, 0 = two gaussians  */
   float  MipEventsPerBin;   /*     minimum number of events per bin for calibration  */
   float  MipMaxNumberOfTracks;   /*     maximum number of tracks for a calibration event  */
   float  MipMinOccupancy;   /*     minimum occupancy for hole detector for calibration  */
   float  MipMinimumMomentum;   /*     minimum momentum for a MIP track  */
   long  UsePi0Calib;   /*     1 - use Pi0 for calibration, 0 - Dont use Pi0  */
   long  UseElectronCalib;   /*     1 - use Electron for calibration, 0 - Dont use Electron  */
   long  DoPedSubtraction;   /*     subtract or not electronic pedestals  */
   long  DoEffPedCalculation;   /*     calculate effective pedestals  */
   long  DoEffPedSubtraction;   /*     do eff pedestal subtraction (requires effped calc)  */
   long  EffPedMethod;   /*     method to calculate pedestal  */
   float  EffPedEventsPerBin;   /*     number of events per bin  */
   float  EffPedMinOccupancy;   /*     minimum occupancy to be ready for ped calculation  */
   float  EffPedMaxNumberOfTracks;   /*   max number of tracks for eff pedestal calulation  */

 };  
