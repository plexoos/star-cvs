//:Description: Drift Veolocity per Hybrd
//:Synonyms::::
//:Source:
//:Update:
//:Update frequncy:
//:Reminder:
//:Recall frequency:
//:Size of Data:
//:Pointer to data:  svtHybridDriftVelocity.time:
struct svtHybridDriftVelocity {
  short  type;  // type = 0 polymonical fit,
                // type = 1 TChebyshev poly in range [min,max] => [-1,1]
                // type = 2 shifted  TChebyshev poly in range [min,max] => [ 0,1]
                // type = 10 (== log(1. + OffSet/x) + poly(x,npar)
  short  status;// status word with the bits set:
                //  1 - No data on tmin and tmax
                //  2 - No parameters for x(t) dependence
                //  4 - Statistic too low to evaluate quality of x(t)-fit
                //  8 - Large deviation of data and x(t)-fit (now, >60 mkm)
  long   idx;   // row index
  long   nrows; // total no. of real rows in the table; For Db interface (where nrows = 50)
  long   npar;  //= 100*I + 10*nv + nu; I - igonre region, nv and nu power for parameterization (v - anodes, u - drift) 
                // I != 0 drift region is valid in range [dtim,dtmax] only   
                // For type=0 & npar=2, |x|=v0-v1*t in Local Wafer Frame (LWF) for t>27 tbins
  long   Id;    // 10*(1000* layer + 100* wafer +  ladder) + hybrid;
  octet  barrel;
  octet  ladder;
  octet  wafer;
  octet  hybrid;
  double tmin;  // fit range
  double dtmin;
  double tmax;  // 
  double dtmax;
  double v0, v1, v2, v3, v4, v5, v6, v7, v8, v9; // parameters, interpretation depenends on type
};
