* $Id: agspkine.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
* $Log: agspkine.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:37  potekhin
*
* Revision 1.2  2001/02/28 17:16:08  nevski
* agckine.inc moved to commons
*
* Revision 1.1  2001/02/27 10:14:13  nevski
*  first working release
*
**********************************************************************
                Subroutine  A G S P K I N E
* Description:  Generates Kinematics for primary track               *
*    PtFlag:  <---collider mode--->   <-----fix target----->         *
*             <pdg>   <---geant--->   <-pdg->  <---geant--->         *
*             0   1   2 .3. . . . 9   10   11  12 . . . . 20         *
*             E  PT........................................>         *
*               <eta>....<rapidity>                                  *
*                                                                    *
**********************************************************************
#include "commons/typing.inc"
#include "geant321/gcbank.inc"
#include "geant321/gconst.inc"
#include "geant321/gcflag.inc"
#include "commons/agckine.inc"
     REAL      Theta,Eta,Phi,Etot,Ptot,PT,P(3),vertex(4),RNDM(3),
               Amass,Charge,Tlife,Ub(100)
     Integer   NVRT,NTRK,IParti,Itrtyp,Nu
     Character Cname*20
*
     CALL GRNDM(rndm,3)
     IParti = nint(ptype)                                            " *star "
     If (mod(nint(ptflag),10)<=1) Call aPDG2GEA (nint(ptype),IParti) " atlas "
     If (Iparti==0) "replace by muon"  Iparti=6
     Call GFPART(Iparti,Cname,Itrtyp,Amass,Charge,Tlife,Ub,Nu)
*
*  collider or fixed target datacard...         Ilia Iliych:
     if (ptflag<10) then                  "    collider mode     "
        Eta    = EtaMin+RNDM(1)*(EtaMax-EtaMin)
        Phi    = PhiMin+RNDM(2)*(PhiMax-PhiMin)
        etot   = PtMin +Rndm(3)*(PtMax - PtMin)
        Theta  = 2*ATAN(EXP(-Eta))
        If (ptflag==0)  { Ptot = Etot;    PT   = Ptot*SIN(Theta) }
        else            { PT   = Etot;    Ptot = PT / SIN(Theta) }
        P             = { PT*Cos(Phi), PT*Sin(Phi), PTOT*COS(Theta) }
        If (ptflag>=3)  P(3)=Sqrt(Amass**2+Pt**2)*sinh(Eta)
     else                                 "  Fixed target mode   "
        P      = { Pxmin+RNDM(1)*(Pxmax-Pxmin),
                   Pymin+RNDM(2)*(Pymax-Pymin),
                   Pzmin+RNDM(3)*(Pzmax-Pzmin) }
     endif
*
     Call VZERO   (vertex,4)
     Call aGSVERT (vertex, 0, 0, 0.,0,NVRT)
     Call aGSKINE (P,IParti,NVRT,0.,0,NTRK)
END


