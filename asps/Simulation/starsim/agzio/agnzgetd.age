* $Id: agnzgetd.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
* $Log: agnzgetd.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:37  potekhin
*
* Revision 1.1  2001/02/27 10:14:10  nevski
*  first working release
*
****************************************************************************
           SUBROUTINE AGNZGETD(IL,IDE,IMOTH,NDAU,IDAUG)
*                                                                          *
* description: get list of daughters of a given particle                   *
* Input : IL    - Link number : 1 = primary, 2 = secondary (obsolete)      *
*         IDE   - ID number of event in gate                               *
*         IMOTH - parent particle number in event record                   *
* I/O:    NDAU  - in - Maximum number of daughters to return               *
*         NDUAG - out- actual number of daughters                          *
* Output: IDAUG - vector of daughters                                      *
* Original Version.                                 R. DeWolf   25/09/91   *
****************************************************************************

#include "commons/typing.inc"
#include "geant321/gcbank.inc"
#include "slug/sclink.inc"

      INTEGER IL,IDE,IMOTH,NDAU,IDAUG(*)
      INTEGER LGENE,LGENP,LZFIND,LK,ND,MODUL,NPA,NDAUM,IP,JM1,JM2,IOFF
*     CHARACTER CBANK*4
*
      entry GNZGETD(IL,IDE,IMOTH,NDAU,IDAUG)
      NDAUM = NDAU
      NDAU  = 0

* Find the event with the desired IDE:
      Lk=LZFIND(IXDIV,LkEvnt,IDE,-5);               Check   Lk>0
      check  "#of links" IQ(Lk-2)>=2
      LGENE = LQ(Lk-2);                             Check   LGENE>0
      check  "bank length" IQ(LGENE-1)>=12 & "#of links" IQ(LGENE-2)>=1

      LGENP = LQ(LGENE-1);                          Check   LGENP>0
*     Call UHTOC(IQ(LGENP-4),4,Cbank,4);            Check Cbank=='GENP'
*
* Get number of particles:
      ND    = IQ(LGENP-1)
      NPA   = MOD(IQ(LGENP+2),100 000)
      MODUL = MOD(IQ(LGENP+3),100 000)
*
* Loop over particle list
      DO IP = 1,NPA
         IOFF = (IP-1)*MODUL +3
         Check  IOFF+MODUL <=ND
         JM1  = IQ(LGENP+IOFF+3)
         JM2  = IQ(LGENP+IOFF+4)
         If (abs(JM1)==IMOTH) | (JM2>=0 & JM2==IMOTH)  _
          | (JM2<0 & abs(JM1)<=IMOTH&IMOTH<=abs(JM2))
          {  NDAU += 1; If (NDAU<=NDAUM) IDAUG(NDAU)=IP; }
      enddo
*
      END
