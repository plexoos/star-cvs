* $Id: agezkine.age,v 1.1.1.1 2004/01/12 23:49:36 potekhin Exp $
* $Log: agezkine.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:36  potekhin
*
* Revision 1.1  2001/02/27 10:14:07  nevski
*  first working release
*
**************************************************************************
                SUBROUTINE   A g E Z K I N E   (Iprin)
* Description: routine for feeding EGZ information into GEANT.           *
* Note the use of TOFG in common GCTRAK, set before Calls to GSVERT,     *
* to store the correct time of the vertices.                             *
* Iprin is defined as Idebug+1 in AGZREAD                                *
**************************************************************************
#include "commons/typing.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcflag.inc"
#include "geant321/gcunit.inc"
#include "geant321/gcnum.inc"
#include "slug/sclink.inc"
    Character Cname*4,Gname*8,Gnamo*8/' '/
    Real      evtver,zproj,aproj,ztarg,atarg,sqrts,bmin,bmax,bimevt,
              plab(4),UBUF(100),VERT(4)/4*0/
    Integer   Iprin,L,i,nptls,nptarg,nntarg,npproj,nnproj,ntry,
              IdPtl,IoPtl,IC,Ipart,NVTX,Nt,part_size/6/,Nu/0/
*
*     generator run header
      check   LKRUNT>0;    call UHTOC(IQ(LKRUNT-4),4,CNAME,4)
      check  "bank length" IQ(LKRUNT-1)>=10 & "name" CNAME=='CODE'
*
      call UHTOC(IQ(LKRUNT+1),4,Gname,8)
      evtver  = Q(LKRUNT+3)
      zproj   = Q(LKRUNT+4)
      aproj   = Q(LKRUNT+5)
      ztarg   = Q(LKRUNT+6)
      atarg   = Q(LKRUNT+7)
      sqrts   = Q(LKRUNT+8)
      bmin    = Q(LKRUNT+9)
      bmax    = Q(LKRUNT+10)
      If Gname!=Gnamo
      { Prin1 Gname,evtver,zproj,aproj,ztarg,atarg,sqrts,bmin,bmax
        (' AgEZKINE: generator ',a8,' version ',f8.3/10x,
        ' beam z/a',2f5.0,' target a/z',2f5.0,' sqrt(s)=',f6.1,' b=',2f8.3)
      }
          Gnamo=Gname;                       IC=0
      If (Gname='VENUS'  | Gname='HIJET')    IC=1
      If (Gname='HIJING')                    IC=2
      If (Gname='FRITIOF'| Gname='FRTIOF17') IC=3
      If (IC==0) <w> Gname; (' AgEZKINE error: unknown event generator ',a)

*     Normal event following
      Check   LKEVNT>0;    Call UHTOC(IQ(LKEVNT-4),4,CNAME,4)
      check  "bank length" IQ(LKEVNT-1)>=7 & "name" CNAME=='EVEN'

*     Do leading part of bank
      nptls   = IQ(LKEVNT+1)
      nptarg  = IQ(LKEVNT+2)
      nntarg  = IQ(LKEVNT+3)
      npproj  = IQ(LKEVNT+4)
      nnproj  = IQ(LKEVNT+5)
      ntry    = IQ(LKEVNT+6)
      bimevt  =  q(LKEVNT+7)
      Call aGSVERT(VERT,0,0,Ubuf,Nu,Nvtx)
      prin3 nptls,npproj,nnproj,nptarg,nntarg,ntry,bimevt
      (' AgEZKINE: setting GEANT vertex with Npart=',i6,' (before filter)'/,
        10x,' beam p/n=',2i5,'  targ p/n=',2i5,'  ntry=',i6,'  b=',f8.3)

*     Do trailing part of bank:  ID, 4-momentum, daughter/parent information
      do i=1,nptls
         L=LKEVNT+7+(i-1)*part_size
         Ipart    =  0
         Idptl    = IQ(L+1)
         plab(1)  =  Q(L+2)
         plab(2)  =  Q(L+3)
         plab(3)  =  Q(L+4)
         plab(4)  =  Q(L+5)
         ioptl    = IQ(L+6)
         If (Ic==1) Call ISA_to_GEANT    (IdPtl,Ipart)
*        If (Ic==2) Call HIJING_to_GEANT (IdPtl,Ipart)
         If (Ic==2) Call a PDG 2 GEA     (IdPtl,Ipart)
         If (Ic==3) Call LUND_to_GEANT   (IdPtl,Ipart)
         If Ipart<=0
         {  Prin2 IdPtl,Gname;
            (' AgEZKine: particle code ',i6,' from ',A,' is unknown ')
            Next
         }
         CALL aGSKINE (Plab,Ipart,NVTX,Ubuf,Nu,Nt)
      enddo
*
    prin2 Ntrack,Nvertx;
         (' AgEZKINE: # of particles in GEANT=',I6,' # of VERTEX',I6)
*
    END


