* $Id: agbeamdat.age,v 1.1.1.1 2004/01/12 23:49:36 potekhin Exp $
* $Log: agbeamdat.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:36  potekhin
*
* Revision 1.3  2001/03/02 21:03:11  nevski
* agmer splitted, gnz restored
*
************************************************************************
       Subroutine    A g B E A M D A T
************************************************************************
#include "commons/typing.inc"
#include "commons/quest.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcunit.inc"
#include "geant321/gcflag.inc"
#include "slug/sclink.inc"
Integer Iarray(10000), Lbuff/10000/, Lsize, num(5)
Integer itit(100,5),ICntr,ICnts,Ndet,id,ITR,Idet,ld,Jdet,JCntr,JCnts,Ldet
Integer Nsub,is,JTR,Jsub,Lsub,Lab,ls,KCntr,KCnts,Nsss,KTR,Ksss,j,iz,
        larea,lf,LLast,N,Lt,Iprin/0/,ISLFLAG,L
common /beamLINK/ Larea(2),Lf,Ld,Ls,LLast
Character*4  cform/'-I'/

Call  MZLINT(IxSTOR,'beamLINK',Larea,Lf,LLast)
Lf=LkARAW; N=1; Iprin=max(Idebug+1,Islflag('INPU','RECO'));
Check LkARAW>0
Lsize=0
" get general event header, pointers to control and data (detector list)"
 ICntr=IQ(lf+9);   ICnts=IQ(lf+10);
 Lt=11; If (Icntr>0) Lt=min(11+IQ(lf+ICntr+1),100)
 Call UCOPY(IQ(lf+1),Itit(1,1),Lt);
 num(1)=1; num(2)=N; call RBSTORE('/RECB/RAWH',num,Cform,Lt,Itit(1,1))
"      top data block: number of detectors and their id+pointers        "
Check Icnts>0;  Ndet = IQ(lf+ICnts+1);
Prin3 Ndet; (' AgBeamDat: Ndet = ',i5)

Do id=1,2*NDet,2
{ ITR =IQ(lf+ICnts+1+id);  " pointer to the detector block "
  Idet=IQ(lf+ICnts+2+id);  " it's identificator  "
  Prin5 IDet,ITR;  (' AgBEAMdat: Found detector Idet=',i6,' at pointer ',i5)
  check ITR > 0

  "  get into the detector header "  ld=lf+ITR; Jdet=max(1,Idet/1000)
  JCntr=IQ(ld+9);  JCnts=IQ(ld+10);  Ldet=IQ(ld+2)
  Lt=11; If (Jcntr>0) Lt=min(11+IQ(ld+JCntr+1),100)
  Call UCOPY(IQ(ld+1),Itit(1,2),Lt)
  num(3)=Jdet; call RBSTORE('/RECB/RAWH/DETE',num,Cform,Lt,Itit(1,2))

  check Jcnts>0; Nsub=IQ(ld+Jcnts+1);
  Prin3 Nsub; (' AgBeamDat: Nsub = ',i5)
  Do is=1,2*Nsub,2
  { JTR =IQ(ld+JCnts+1+is);   " pointer to the subdetector block "
    Jsub=IQ(ld+JCnts+2+is);   " it's identificator  "
    Check JTR > 0
    Lsub=IQ(ld+JTR+1);        " subdet info length  "
    Lab =IQ(ld+JTR+2);        " suddet label   "
    If Jsub<1000
    { Prin1 Jsub,JTR,Lsub,Lab
      (' AgBEAMdat: bad subdetector Isub=',i6,' at pointer',i6,
       ' Len=',i6,' label',i6);  next;
    }
    if Lsub<Ldet
    { Prin5 Jsub,JTR,Lsub,Lab
      (' AgBEAMdat: Found subdetec Isub=',i6,' at pointer',i6,
       ' Len=',i6,' label',i6)
        Lsize=Lsub-2;  If Lsize>Lbuff
        { prin0 lab,Lsize,Lbuff
         (' Insufficient length of user array for subdet block',i8,/,
          ' Length=',i8,' available size=',i8,' the rest will be lost')
        }
        L=min(Lsize,Lbuff);  Call Ucopy(IQ(ld+JTR+3),Iarray,L);  num(4)=Jsub;
        Prin8 Lsub, Lab, (IQ(ld+JTR+2+j),j=1,L)
              (' AgBEAMdat: Raw data: size, ID=',2i6/(10z9))
        call RBSTORE('/RECB/RAWH/DETE/SUBD',num,Cform,L,Iarray)
    }
    else   " detector with  subsubdivisions - not tested "
    { Prin5 Jsub,JTR
      (' AgBEAMdat: Found subsystem Jsub=',i5,' at pointer',i5)
      " get into the subdet header "  ls=ld+JTR
      Call UCOPY(IQ(ls+1),Itit(1,3),8); KCntr=IQ(ls+9); KCnts=IQ(ls+10)
      num(4)=Jsub;
      call RBSTORE('/RECB/RAWH/DETE/SUBA',num,Cform,8,Itit(1,3))

      Nsss=IQ(ls+KCnts+1)
      Do iz=1,2*Nsss,2
      { KTR =IQ(ls+KCnts+1+iz);  " pointer to the subsubdet block "
        Ksss=IQ(ls+KCnts+2+iz);  " it's identificator  "
        CHECK KTR>0
        Lsub=IQ(ls+KTR+1);       " subdet info length  "
        Lab =IQ(ls+KTR+2);       " suddet label        "
        If Ksss<1000 | Ksss!=Lab
        { Prin1 Ksss,KTR,Lsub,Lab
          (' AgBEAMdat: bad subdetec Isub=',i5,' at pointer',i5,
           ' Len=',i5,' label',i5);  next;
        }
        Lsize=Lsub-2; Prin5 Ksss,KTR,Lsize,Lab
        (18x,'subsubdet Isub=',i5,' at pointer',i5,'  Len=',i5,' label',i5)
        If Lsize>Lbuff
        { <w> Ksss,Lbuff,Lsize
          (' Insufficient length of user array for subsubdetector block',i6/,
          ' User array length',i6,' block length',i6,' the rest will be lost')
        }
        L=min(Lsize,Lbuff); Call Ucopy(IQ(ls+KTR+3),Iarray,L); num(5)=Lab;
        Prin8 Lsub, Lab, (IQ(ls+KTR+2+j),j=1,L)
        (' AgBEAMdat: Raw data: size, ID=',2i6/(10z9))
        call RBSTORE('/RECB/RAWH/DETE/SUBA/SUBD',num,Cform,L,Iarray)
} } } }
larea(1)=0; Iquest(1)=0
End

