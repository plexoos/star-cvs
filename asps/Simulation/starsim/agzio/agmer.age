*
* $Id: agmer.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
* $Log: agmer.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:37  potekhin
*
* Revision 1.8  2003/12/21 22:49:14  nevski
* improve access
*
* Revision 1.7  2001/07/26 16:06:45  nevski
* *** empty log message ***
*
* Revision 1.6  2001/06/15 00:02:17  nevski
* merging differences between private cmz and this version
*
* Revision 1.5  2001/06/14 00:38:59  nevski
* for construct stil does not work
*
* Revision 1.3  2001/03/05 20:28:12  nevski
* introduce a temporary AGEOLD flag
*
* Revision 1.2  2001/03/02 21:03:11  nevski
* agmer splitted, gnz restored
*
* Revision 1.1  2001/02/27 10:14:09  nevski
*  first working release
*
*
#include <atlsim/config.h>
*****************************************************************************
            subroutine   A g M E R  (Iprin,Jj,k,N1,N2)
* Description : return object counters of 2 sequential banks in N1 and N2.  *
*  for positive k, IQ(J+k) should contain object counter, +k+1 - offset     *
*               Banks are relocated from the second tree to the first one   *
*               if there will be more then 64k banks, they stay in place    *
*  for negative, it is number of words or liks.                             *
*               Nothing is relocated                                        *
*****************************************************************************
#include "commons/typing.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcnum.inc"
#include "geant321/gcunit.inc"
#include "slug/sclink.inc"
   Integer Iprin,N,N1,N2,K1,K2,M,M1,M2,jj,jv,jw,i,k,ier,Seg
   EQUIVALENCE (Jv,LKSLUG(NSLINK))

*      count all objects

   {N1,N2} = 0;
   Check Jj> 0;
   for ( Jv=Jj; Jv>0; Jv=LQ(Jv) )
   {  N=IQ(jv+k);   if (k==1)  N-=IQ(jv+2);
      if IQ(jv)==0 { N1+=N; } else { N2+=N; }
   }

* for tracks and vertices only:

   Check K==1;
   {M,M1,M2,Seg} = 0;

*  update subevent counters, subevent starts with an offset=0

   for ( Jv=Jj; Jv>0; Jv=LQ(Jv) )
   {  Jw=Jv; M=IQ(Jv+2)
      *  next segment starts ?
      If (M==0)  {  M1+=M2; Seg+=1; }
      M2=IQ(Jv+1); IQ(Jv+1)+=M1; IQ(Jv+2)+=M1;
   }

*  append LAST subevent only if last segment has a single bank

   Check Jj!=Jw & M==0
   Jv=LQ(Jw+2);  K1=IQ(Jv+1)-IQ(Jv+2);  K2=IQ(Jw+1)-IQ(Jw+2)

   If K1+K2 <= 64000
   {  Call AgPUSH(Iprin,Jv,K1+K2,1,Ier);    check Ier==0;  Jw=LQ(Jv)
      prin4 N1,K1,N2,K2; (' AgMER :1: N,K=',2i7,' :2: N,K=',2i7);
      DO I=1,K2    { Call ZSHUNT(IxSTOR,LQ(Jw-I),Jv,-(K1+I),1) }
      IQ(Jv+1)+=K2;  Call MZDROP(IXSTOR,Jw,'L');
   }
END

