*
* $Id: agpread.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
* $Name:  $
* $Log: agpread.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:37  potekhin
*
* Revision 1.10  2003/12/05 16:17:58  nevski
* suppress header check in case of read error
*
* Revision 1.9  2003/08/30 16:52:24  nevski
* bugfix: HEAD bank lost on event skip
*
* Revision 1.8  2003/07/29 10:37:02  nevski
* bugfix in subevent merging
*
* Revision 1.7  2003/06/13 14:51:57  nevski
* multi-file chain implemented on P stream
*
* Revision 1.6  2002/11/14 14:06:10  nevski
* keep first rndm bank in splitted events
*
* Revision 1.5  2002/11/14 11:41:26  nevski
* on splitted events keep HEAD(1-4 and 9-10)
*
#include "atlsim/config.h"
******************************************************************
      subroutine    A G P R E A D (ier)
* description: read and possible re-assembly splitted subevents  *
******************************************************************
#include "commons/typing.inc"
#include "commons/quest.inc"
#include "geant321/gcunit.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcnum.inc"
#include "geant321/gcflag.inc"
#include "commons/agckine.inc"
#include "slug/sclink.inc"
   Integer    CSADDR,ISLFLAG,LENOCC,IHEAD(10),IRAND(25),Istat/0/,
              IsubEv,Iprin,IbEvnt,ier,jer,i,iadr,Lr,ier1
   Character  IDH*4,Ctest*60
*
   IbEvnt = 0; IsubEv = 1; Istat=0;
   Iprin = ISLFLAG('INPU','PRIN')

   jer=1; call AgZread('P',ier)
* 
   if Ier!=0  
   { Call AgZOPEN('P',' ',' ',ier1)      " try to chain input files "
     if (ier1==0) call AgZread('P',ier1) " skip  geometry record "
     if (ier1==0) call AgZread('P',ier1) " get new physics event "
     if (ier1!=0) Return                 " can not continue"
     Ier=0                               " otherwise clear old error code "
   }
   ctest = 'initial read and HEAD bank presence'
   if (Ier!=0 | JHEAD<=0)  go to :er:
   call UCOPY(IQ(JHEAD+1),IHEAD(1),10)
   Lr=0; if (IQ(JHEAD-2)>0) Lr = LQ(JHEAD-1)
   if (Lr>0 & IQ(Lr-1)>=25) Call UCOPY(IQ(Lr+1),IRAND,25)
* appending
    While IQ(JHEAD+5)>IQ(JHEAD+6) & INDEX(StrmKINE,'C')==0
    {
      jer=2;  call AgZread ('P',ier);
      ctest = 'subevent read and HEAD bank presence'
      if (ier!=0 | JHEAD<=0) go to :er:
      IbEvnt=IQ(JHEAD+6);    IsubEv+=1;
      prin2 Isubev,IHEAD,(IQ(JHEAD+i),i=1,10)
      (' AGPREAD: appending subevent',i3,' HEADER ='/(10x,2i6,2i12,6i6))
      ctest = 'subevent sequence'
      jer=3;  if (IbEvnt!=IsubEv) go to :er:
      call AgMERGE (Iprin,0,IbEvnt,0.,0,Ier)
      ctest = 'subevent merging'
      jer=4;  if (Ier!=0) go to :er:
    }
    Call Ucopy(IHEAD(1),IQ(JHEAD+1),4)
    Call Ucopy(IHEAD(9),IQ(JHEAD+9),2)
    Lr=0; if (IQ(JHEAD-2)>0) Lr = LQ(JHEAD-1)
    if (Lr>0 & IQ(Lr-1)>=25) Call UCOPY(IRAND,IQ(Lr+1),25)

* Load Kine bank
    If (LKEVNT>0&INDEX(CoptKine,'E')>0&INDEX(CoptKine,'K')==0)
    { Iadr=CSADDR('AGUSKINE');  call UHTOC(IQ(LKEVNT-4),4,IDH,4)
      If      IDH=='EVNT' { Call AgGZKINE(iprin)      }
      else If IDH=='EVEN' { Call AgEZKINE(iprin)      }
      else If IADR!=0     { Call CSJCAL(Iadr,1, Iprin,0,0,0,0, 0,0,0,0,0) }
      else { <w> IDH; (' AGPREADRZ error: unknown event bank :',a) }
    }
    ier=0; IQUEST(1)=0;
    Return

:er:; prin0 jer,ier,Isubev,IbEvnt,%L(ctest)
      (' AGPREAD: error',2i3,' in subevent =',2i6,' test on ',a,' fails')
      if   ier>3 { IQUEST(1)=jer; IQUEST(2)=ier; ier=jer }
      else       { ier=0; IQUEST(1)=0; }
      IEOTRI = jer
      end

