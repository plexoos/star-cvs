* $Id: aguprod.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
* $Name:  $
* $Log: aguprod.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:37  potekhin
*
* Revision 1.6  2002/06/12 22:06:53  nevski
* additional IO facilities: text IO, heptuple, mickey-mouse generator
*
* Revision 1.5  2002/06/11 18:17:15  nevski
* extract run number from input DB
*
* Revision 1.4  2002/04/22 01:32:27  nevski
* automatic afs token regeneration
*
* Revision 1.3  2002/02/21 01:11:49  nevski
* extend pathname in gexec command
*
* Revision 1.2  2002/02/18 01:11:49  nevski
* event id numbering improved
*
* Revision 1.1  2002/01/25 01:41:50  nevski
* add facility to collect all IDs
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      subroutine AgUPROD
*     collect and output production event Ids
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#include "commons/typing.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcflag.inc"
#include "geant321/gctime.inc"
#include "commons/quest.inc"

  Real             vert(4),weigh,TT,T0/0/,dt/0/
  Integer          SYSTEMF,LENOCC,NGnzPart,IRUN,IEVT,Irndm1,Irndm2,IWTFL,INP
  Integer          ier,Nev/0/,Nev0/-1/,File/-1/,Nleft/1000000/,NevNext,
                   inum,it,it0,ii,kk,ib,nn,Li,il,L0,Iv0,Ir0,i,j
  Character        c*(*),cGName*4,cfile*20,Ctag*80,s*1,Line*200,Cnum*50,
                   cw*8,cu*8
  Integer          NtrSubEV,NkineMax,NhitsMax,NtoSkip,NsubToSkip,Nsubran
  COMMON /AgCSUBE/ NtrSubEV,NkineMax,NhitsMax,NtoSkip,NsubToSkip,Nsubran(2)
  Integer          IgChoice,Lux,ISEED
  common /AgCRNDM/ IgChoice,Lux,ISEED
  Logical          sleeping/.true./
  Logical          first/.true./

    if (sleeping) return
    check NtoSkip==0 & JHEAD>0 & Ieotri==0
    Call  Timel(TT)

    if Nev==0  { T0=TT }
    else       { dt=abs(t0-tt)/nev; nleft=(tt-TIMEND)/dt }
    Nev+=1
    call  AgNZGETE(1,1,NGnzPart,IRUN,IEVT,CGNAME,VERT,IWTFL,WEIGH)

*   complete event numbering (usually on simulations):
    Iv0 = IQ(JHEAD+10)
    if Iv0==0
    {  IQ(JHEAD+10)=Ievent; 
       if (nev0 >=0 ) IQ(JHEAD+2)=nev+nev0; 
       if (File >=0 ) IQ(JRUNG+30)=File;
    }
    Ir0 = IQ(JRUNG+1)
    if (ir0<=0) 
    {  IQ(JHEAD+1) = IRUN
       IQ(JHEAD+2) = IEVT
    }
*   Call  GRNDMQ  (Irndm1,Irndm2,0,'G')
    write (line,*) 'EventId:',
           ' File/Ev=',IQ(JRUNG+30),IQ(JHEAD+10),
           ' GnzR/Ev=',Irun,        Ievt,
           ' GeaR/Ev=',IQ(JHEAD+1), IQ(JHEAD+2)
*
    if (Iv0>0  & File>0)         " renumbering/filter pass "
    {  Write(Cnum,*) 'FltR/Ev=',File,nev; line(Lenocc(line)+1:)=Cnum; }
*
    WRite (cnum,*) 'rndm=',IQ(JHEAD+3), IQ(JHEAD+4)
*                  'Lux=', IgChoice,Lux,ISEED
    line(Lenocc(line)+1:) = Cnum
*
    print *,%L(line)
*
    if (mod(nev,10).eq.0) then
       cw=' '; call getenv('PW',cw)
       cu=' '; call getenv('USER',cu)
       if(cw!=' ') i=systemf('klog -principal '//cu//' -password '//cw)
       if (Idebug>0) print *,' ==> time,nev left =',tt,nleft,' <=='
    endif
    return
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    entry AgUDSET (c)
* recorde the generated dataset name. Format AAAAAAnnnn.BBBBBBBmmmm.etc
       sleeping = .false.
       call getenv ('tag',ctag)
       if (LENOCC(c)>LENOCC(ctag)) ctag = c

       L0=LENOCC(ctag)
       print *,' ===> dataset tag ',ctag(1:L0)
       if (IQ(JRUNG-2)<=1) Call MZPUSH(IxCONS,   JRUNG, 2,0,'I')
       if (LQ(JRUNG-2)<=0) Call MZBOOK(IxCONS,Li,JRUNG,-2,'RTAG',0,0,20,5,0)
       call UCOPY(Ctag,IQ(LQ(JRUNG-2)+1),20)

       it=0; Inum=0; kk=0; nn=0
       do il=1,L0+1
          it0=it;  s=c(il:il);  j=ICHAR(s)
          if      (ICHAR('0')<=j & j<=ICHAR('9')) then
             it=1; ii=j-ICHAR('0');   ib=10
          else if (ICHAR('a')<=j & j<=ICHAR('z')) then
             it=2; ii=j-ICHAR('a')+1; ib=32
          else if (ICHAR('A')<=j & j<=ICHAR('Z')) then
             it=2; ii=j-ICHAR('A')+1; ib=32
          else
             it=0;
          endif
*
          if (it==it0 & it>0) then
             nn+=1; if (it==1&nn<=9 | it==2&nn<=6) Inum=Inum*ib+ii
          else
             if (it0>0) then
                kk+=1; if (kk<=4) IQ(JRUNG+6+kk)=Inum
             endif
             if (it>0)  then
                Inum=ii; nn=1
             endif
          endif
       enddo
    return
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    entry AgUFILE (inp)
* record the generated input file number
       sleeping = .false.
       File = inp
       if (inp<0) sleeping = .true.
    return
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    entry AgUEVNT (inp)
* reset event numbering for restart
       sleeping = .false.
       Nev0 = inp
       if (inp<0) sleeping = .true.
    return
    END
