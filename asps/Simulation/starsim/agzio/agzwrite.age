*
* $Id: agzwrite.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
*
* $Name:  $
*
* $Log: agzwrite.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:37  potekhin
*
* Revision 1.6  2003/05/07 17:04:01  nevski
* make draw bank persistent
*
* Revision 1.5  2003/05/05 17:07:51  nevski
* agzwrite fixed - never write RECB on first call
*
* Revision 1.4  2002/10/01 23:30:32  nevski
* more pile-up tools
*
* Revision 1.3  2001/06/13 23:51:42  nevski
* write start-of-run record as in dice
*
* Revision 1.1  2001/02/27 10:14:15  nevski
*  first working release
*
#include "atlsim/config.h"
******************************************************************************
*                                                                            *
                subroutine    A G Z W R I T E (Stream,ier)
*                                                                            *
* PN 07.05.2003: when called from GUOUTE, no delayed action is needed anymore*
*                                                                            *
******************************************************************************
#include "commons/typing.inc"
#include "commons/quest.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcunit.inc"
#include "geant321/gcflag.inc"
#include "commons/agckine.inc"
#include "slug/sclink.inc"
   Integer      ISLFLAG,iu,Lun,Iev,Ier,iprin, Idevt0/-1/,IsubE0/0/,Lk/0/,Ia
   Logical      Done/.true./
   Character    stream*(*)
*  tentative guess for standard GFOUT data
*  'PART','MATE','TMED','VOLU','ROTM','SETS','DRAW','RUNG','DETM','DRAW',
*  'RUNT','EVNT','DETM','a','a','a','HEAD','VERT','KINE','JXYZ','HITS','DIGI'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
    Ier=0;  if (Stream=='O' & JHEAD<=0) return  
    Ier=0;  Iu=3;  Iev=Kevent(iu);  Lun=20+iu;
    Iprin=max(ISLFLAG('OUTP','PRIN'),Idebug)  
    prin2 Idevt,Idevt0,Iev,CoptOutp
    (' AGZwrite Idevt,Idevt0,Iev = ',3I10,' opt=',a)
*
    If Kevent(iu)==0
    {  Call FZRUN(LUN,IDRUN,0,0); Iev=IDRUN;
       Call AgZout(LUN,'RUNG','*',Iev,CoptOutp,JRUNG, 'IDRUN',  +1, 8, ier)
       Call AgZout(LUN,'PART','G',Iev,CoptOutp,JPART, 'NPART',  -2, 1, ier)
       Call AgZout(LUN,'MATE','G',Iev,CoptOutp,JMATE, 'NMATE',  -2, 2, ier)
       Call AgZout(LUN,'TMED','G',Iev,CoptOutp,JTMED, 'NTMED',  -2, 3, ier)
       Call AgZout(LUN,'ROTM','G',Iev,CoptOutp,JROTM, 'NROTM',  -2, 5, ier)
       Call AgZout(LUN,'VOLU','G',Iev,CoptOutp,JVOLUM,'NVOLUM', -2, 4, ier)
       Call AgZout(LUN,'SETS','G',Iev,CoptOutp,JSET,  'NSET',   -1, 6, ier)
       Call AgZout(LUN,'DETM','G',Iev,CoptOutp,LKDETM,'NDETM',  -1, 9, ier)
       Call AgZout(LUN,'DRAW','P',Iev,CoptOutp,JDRAW, 'NKVIEW', -2, 10,ier)
       Kevent(iu)=1;  Lk=-1;  Idevt0=-1;  If Ier!=0 { IOutpOld=0;  Return }
    }
    check JHEAD>0 & IEOTRI==0;                   Iev=Kevent(iu);
    If Idevt != Idevt0 | IsubEVnt !=IsubE0
    {  if (JHITS>0) Call GRLEAS (JHITS)
       if (JDIGI>0) Call GRLEAS (JDIGI)
       Call AgZout(LUN,'HEAD','*',Iev,CoptOutp,JHEAD, 'IDEVT',  +2, 17,ier)
       Call AgZout(LUN,'RUNT','E',Iev,CoptOutp,LKRUNT,'JOCRUN', +5, 11,ier)
       Call AgZout(LUN,'EVNT','E',Iev,CoptOutp,LKEVNT,'JOCEVT', +6, 12,ier)
       Call AgZout(LUN,'VERT','K',Iev,CoptOutp,JVERTX,'NVERTX', +1, 18,ier)
       Call AgZout(LUN,'KINE','K',Iev,CoptOutp,JKINE, 'NTRACK', +1, 19,ier)
       Call AgZout(LUN,'HITS','H',Iev,CoptOutp,JHITS, 'NHSETS', -2, 21,ier)
       Call AgZout(LUN,'DIGI','D',Iev,CoptOutp,JDIGI, 'NDSETS', -2, 22,ier)
       Call AgZout(LUN,'RECB','R',Iev,CoptOutp,LKARP1,'NSECT',  -2, 13,ier)
       Kevent(iu)+=1;
    }
*
    If (Ier!=0) IOutpOld=0
    Lk      =   LKARP1
    Idevt0  =   Idevt
    IsubE0  =   IsubEvnt
end


