* $Id: agkuser.age,v 1.1.1.1 2004/01/12 23:49:38 potekhin Exp $
* $Name:  $
* $Log: agkuser.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:38  potekhin
*
* Revision 1.6  2003/09/11 11:50:28  nevski
* correct logo length
*
* Revision 1.5  2003/08/24 16:32:50  nevski
* save atlsim version in user run header
*
* Revision 1.4  2003/04/24 08:46:02  nevski
* more paw-like feature
*
* Revision 1.3  2001/10/28 15:02:41  nevski
* support automatic run
*
* Revision 1.1  2001/06/22 16:35:41  nevski
* improve trace/debug on macros
*
      subroutine AGKUSER
* may be a general user command modifier, see KUIP manual p.156
#include "commons/typing.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcflag.inc"
      CHARACTER*255   CMDLIN
      COMMON /KCPARC/ CMDLIN
      Integer         kdebug,ktrace
      common /AKCPAR/ kdebug,ktrace
      CHARACTER*120   LOGO
      COMMON/AgLOGO/  LOGO
      INTEGER         LENOCC,INDEX,IA/-1/,L,N,I,J
      character       CMD1*4/' '/,CRUN*8/' '/,CTEMP*255/' '/
      Logical First /.true./ 

* if the previous command opened an input file, rewrite run info
      if (JRUNG>0 & IQ(JRUNG-2)>0 & LQ(JRUNG-1)>0 & IA!=IQ(LQ(JRUNG-1)-1)) then
        IA = IQ(LQ(JRUNG-1)-1)
        L  = LENOCC(LOGO);  Call GSRUNG(L/4+1,LOGO(1:L)//';',IA)
        L  = LENOCC(CTEMP); Call GSRUNG(L/4+1,CTEMP(1:L)//';',IA)
      endif
*
      IA    = 0
      CTEMP = %L(CMDLIN)

* substitute $run:
      i=INDEX(CMDLIN,'$run')
      if (i>0) then
         if (Crun==' ') Call AgRUNNUM(Crun)
         CTEMP  = CMDLIN(1:i-1)//%L(Crun)//CMDLIN(i+4:)
      endif

*     find an existing length or book a new bank
      if (JRUNG>0) then
        IF (IQ(JRUNG-2)>0 & LQ(JRUNG-1)>0) THEN
          IA=IQ(LQ(JRUNG-1)-1)
        ELSE
          IA=0
          CALL MZBOOK (IXCONS,J,JRUNG,-1,'RUNH',0,0,10,5,0)
        ENDIF
        if (First) then
           first=.false.
           L = LENOCC(LOGO)
           call GSRUNG(L/4+1,LOGO(1:L)//';',IA)
        endif
        L  = LENOCC(CTEMP)
        CALL GSRUNG(L/4+1,CTEMP(1:L)//';',IA)
      endif
*
* special treatment of DEBUG AND TRACE commands on the top level (not in macro)
*
      do i=1,L { if (CTEMP(i:i)!=' ') Break; }
      CMD1=' '; if (i+3<L) CMD1=CTEMP(i:i+3)
      Call CLTOU (CMD1)
*
* Only DEBUG and GDEBUG command are allowed to change Idebug:
* those commands set 'undefinite' status which forces the next command
* to retrieve Idebug and save it in Kdebug
* All other commands restore current Idebug from Kdebug
*
      if (Kdebug >0) Idebug=Kdebug-1
      if (Kdebug==0) Kdebug=Idebug+1
      if (CMD1=='DEBU' | CMD1=='GDEB') Kdebug=0
*
* On a TRACE command simply get and hold its value
*
      if (CMD1=='TRAC') then
         i=INDEX(CTEMP,'O')+1
         if CTEMP(i:i)=='N'  { Ktrace=1 } else { Ktrace=0 }
      else
         if (Ktrace==1) call kuexec ('trace on')
         if (Ktrace==0) Call Kuexec ('trace off')
      endif

*ps: setting Kdebug,Kdebug to <0  switch both these subsitutions off!

      end

