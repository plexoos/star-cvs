* $Id: traceq.age,v 1.1.1.1 2004/01/12 23:49:38 potekhin Exp $
* $Name:  $
* $Log: traceq.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:38  potekhin
*
* Revision 1.1  2001/06/22 16:35:41  nevski
* improve trace/debug on macros
*
#ifndef __ROOT__
************************************************************************
      subroutine TRACEQ
*                         (LUNP,LEV)
*                                                                      *
* Description: dispatch an abnormal situation (arithmetics or ZEBRA)   *
************************************************************************
      Implicit   NONE
      Integer    Lenocc,AgPHASE,AgIPAW,IwTYP,Npar,Nerr/0/,SYSTEMF,Ier
      Common /AgCPHASE/ AgPHASE
      Common /AgCIPAW/  AgIPAW,IwTyp
      character*32      command,commando/' '/
      common /kcparc/   cmdlin
      character*255     cmdlin
      integer              cmd
      common /cmdcurrent/ cmd(20)
*
*     show CWD
      ier = systemf('uname -a')
      ier = systemf('pwd')
*    first, protect against infinite break loops - they are dangerous
      call kupatl (command,npar)
      print *,'*** Last Kuip command was ',%L(Command),' Npar=',Npar,' ***'
      print *,'*** in ',%L(cmdlin),' ***'
*
      if (command=='QUIT' | command=='EXIT') STOP 'IN TRACEQ forced exit'

      if (command==commando) then
         nerr=nerr+1
         if (nerr>10)    STOP 'IN TRACEQ - too many consequtive entries'
      else
         nerr=0
         commando =command
      endif
*
      call dump_arg_list
*
      call traceqc
      If AgPHASE>0                                 " in event loop  "
      {  call qnexte; print *,' in traceq: qnexte exit' }
      ELSE IF AgIPAW>0                              " single command "
      {  call kusibr; print *,' in traceq: kusibr exit' }
*
      Print *,' Abnormal break recovery - neither Phase nor Ipaw set '
      Print *,' Only limited functionality is expected before crash  '
      CALL   AGPAWQ
      STOP ' TRACEQ exit from AGPAWQ reached '

      END
#endif


