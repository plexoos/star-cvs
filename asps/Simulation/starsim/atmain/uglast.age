* $Id: uglast.age,v 1.2 2009/04/09 22:46:31 perev Exp $
* $Log: uglast.age,v $
* Revision 1.2  2009/04/09 22:46:31  perev
* End of Geant, filter Finish()
*
* Revision 1.1.1.1  2004/01/12 23:49:38  potekhin
*
*
* Revision 1.4  2003/05/07 17:04:06  nevski
* make draw bank persistent
*
* Revision 1.3  2001/10/28 15:06:49  nevski
* correct event counting
*
* Revision 1.2  2001/02/28 17:16:17  nevski
* agckine.inc moved to commons
*
* Revision 1.1  2001/02/27 10:14:56  nevski
*  first working release
*
*********************************************************************
                Subroutine   U G L A S T
* Modifications:
* PN,  03.09.98: terminate spool output.
*      03.01.00: supress memory usage table if no debug
*********************************************************************
#include "commons/typing.inc"
#include "geant321/gcbank.inc"
#include "slug/sclink.inc"
#include "geant321/gcunit.inc"
#include "geant321/gcflag.inc"
#include "commons/agckine.inc"
    Integer      LENOCC,ICYCLE,Unit,Iu,N1,N,L
    Character*80 CTOP
    Integer Ntrdone,N00
    common /AgCNDONE/ Ntrdone

    If Ioutp==-1
    {  Unit=23; Iu=3; call GUOUTE(2)
       If LkMAPP>0 & IQ(LkMAPP-2)>=iu
       {  If (idebug>0) print *,' writing DaT record ....'
          L=LQ(LkMAPP-iu); If L>0
          {  N=IQ(L+3); N1=IQ(L-1)-3*(N+1)
             If (N1>0) Call MZPUSH (IxCons,L,0,-N1,'I')
             Call FZODAT(Unit,IxCons,LQ(LkMAPP-Iu))
             Call MZDROP(IxCons,LQ(LkMAPP-Iu), 'L')
          }
          If (idebug>0) print *,' writing DaT record done '
       }
       Call FZENDO(Unit,'TX')
       Ioutp=0; IoutpOld=0;
    }

    IF IUHIST>0
    { CTOP='//'//CDHIST;  <w> %L(CTOP),CFHIST;
      (' Saving Histograms from ',a,' to ',a)
      CALL  RZCDIR(CTOP,' ');        CALL RZCDIR(CTOP,'P');
      CALL  HCDIR('//PAWC','  ');    CALL HCDIR(CTOP,' ');
      CALL  HROUT(0,ICYCLE,'NT');    Call HREND(CTOP)
      If (Idebug>0) Call HLDIR('//PAWC','TSIA')
      CLOSE (IUHIST);    IUHIST=0
    }
    * Call RZCLOS(' ','A')
    IF (IDEBUG<2) CALL ZLOGSET(99)
    N00   =Ievent
    Ievent=Ntrdone
    Call GLAST
*//		Filter Finish
    Call filt_act(7,0,0)
    Ievent=N00
    " STOP "
    END

    SUBROUTINE ZLOGSET(L)
*   set ZEBRA LOG UNIT in ZUNIT (no typedefs!)
#include "zebra/zunit.inc"
    IQLOG = L
    END
