* $Id: zabend.age,v 1.1.1.1 2004/01/12 23:49:38 potekhin Exp $
* $Log: zabend.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:38  potekhin
*
* Revision 1.2  2001/06/20 00:18:31  nevski
* rzin instability hopefully gone
*
* Revision 1.1  2001/02/27 10:14:56  nevski
*  first working release
*
**************************************************************************
                subroutine   z a b e n d (NQCASE,LINK)
**************************************************************************
#include "geant321/gcbank.inc"
#include "geant321/gcunit.inc"
#include "geant321/gcnum.inc"
#include "geant321/gcvolu.inc"
#include "commons/quest.inc"

  Integer      CSADDR,i,NQCASE,LINK,iadr
  Character    Cname*8
  Equivalence (Cname,IQUEST(9))
*
* print *,'*************************************************************'
* print *,'***       Our old Zebra is heavilly ill, almost dead      ***'
* print *,'***       next time try to treat her more carefully       ***'
* print *,'***                 Or ask Pavel to save her              ***'
* print *,'*************************************************************'
*
* Call UHTOC(IQUEST(9),4,CNAME,8)
  <w> Nzebra,Cname,NQCASE,NQPHAS,NQFATA
  (' zebra age = ',i8,' hinted by ',a8,' for case ',i4,
   ' in phase ',i3,' fatality ',i3)

  If Cname='MZGAR1'
  {  L= "LQSYSR(KQT+1)" LINK;
     IF (NQCASE==1) <w> IQUEST(11),(IQ(L+i),i=-5,1)
     (' ** LACK OF SPACE to push a bank,' ,  i12 , ' words missing **'/,
      ' **     increase GCBANK size using -g key and run again     **'/,
      ' *************************************************************'/,
      ' bank ID=',i6,a6,'  NL,ND=',3i8,'  system, data=',2i12)
  }
  else If Cname='MZTABC'
  { IF (NQCASE==1) print *,' the BANK CHAINING is CLOBBERED (corrupted)',
                           ' the start of clobbered region is ',IQuest(11)  }
  else If Cname='MZPUSH'
  { if (NQCASE==1) print *,' this means the link ',IQUEST(11),' is invalid '
    if (NQCASE==2) print *,' cannot push a dead bank '
    if (NQCASE==3) print *,' invalid increment request, probably NL>64000'
  }
  else If Cname='ZSHUNT'
  { if (NQCASE==2) print *,' the supporting link ',IQUEST(12),' is invalid '}
  else If Cname='FZLOC'
  { print *,' FZLOC reports an illegal FZ control information access (p.269)'
    print *,' Lun=',iquest(11),' I/O mode (1-i, 2-o) ',iquest(12)
    If (NQCASE==1) print *,' WRITE after READ without switching by FZENDI  '
    If (NQCASE==2) print *,' READ after WRITE without switching by FZENDO  '
    If (NQCASE==3) print *,' access permision fault, e.g. write protected  '
    If (NQCASE==4) print *,' access to the file was not declared by FZFILE '
  }
  else If Cname='MZLIFT'
  { print *,' MZLIFT Cannot mount a new bank possibly because of '
    If (NQCASE==1) print *,'        faulty bank parameters '
    If (NQCASE==2) print *,'        invalid supporting link'
    If (NQCASE==3) print *,'        bank at LSUP has too few structural links'
    If (NQCASE==4) print *,'        invalid next link '
    If (NQCASE==5) print *,'        non-existing I/O characteristic'
    If (NQCASE==6) print *,'        invalid I/O parameter'
    If (NQCASE==7) print *,'        attempt to lift bank in a wrong division'
    If (NQCASE==8) print *,'   attempt to connect the new bank inside a bank'
  }
  else If Cname='MZDROP'
  {  print *,' MZDROP can not drop bank because '
     If (NQCASE==1) print *,'  the Link ',Iquest(11),' is illegal '
     If (NQCASE==2) print *,'  the Next Link ',Iquest(12),' is illegal '
  }
  else
  { Print *,' JVOLUM,NVOLUM =',JVOLUM,Nvolum
    If 0<Jvolum&Jvolum<Nzebra
    { If (IQ(Jvolum-1)!=Nvolum) print *,' real VOLU bank length=',IQ(Jvolum-1)}
    else
    { print *,' JVOLUM points outside reasonable area '}

    Print *,' JGPAR,NLEVEL  =',JGPAR,NLEVEL
    If (0<JGpar & JGpar<Nzebra)
    { print *,' real GPAR bank data/link length=',(IQ(JGPAR-i),i=1,3)
      "If (IQ(JGPAR-1)<=0)" JGpar=0
    }
    print *,' that is all for the moment, Have you done GGCLOS ? '
  }
  <w> (IQUEST(i),i= 1,10); (' Iquest=',10i9)
  <w> (IQUEST(i),i=11,20); (' Iquest=',10i9)
  NQCASE=0

  iadr= CSADDR('UTRAP')
  if (iadr.ne.0) Call CSJCAL(iadr,0,0,0,0,0,0,0,0,0,0,0)

  end


