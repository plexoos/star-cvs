//
// File generated by rootcint at Fri Dec 12 10:09:53 2003.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

#include "atlrootDict.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "RtypesImp.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void agconvert_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   TClass *agconvert_IsA(const void*);
   void *new_agconvert(void *p = 0);
   void *newArray_agconvert(Long_t size);
   void delete_agconvert(void *p);
   void deleteArray_agconvert(void *p);
   void destruct_agconvert(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const agconvert*)
   {
      agconvert *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("agconvert", agconvert::Class_Version(), "agconvert.h", 8,
                  typeid(agconvert), DefineBehavior(ptr, ptr),
                  &::agconvert::Dictionary, &agconvert_IsA, 0);
      instance.SetNew(&new_agconvert);
      instance.SetNewArray(&newArray_agconvert);
      instance.SetDelete(&delete_agconvert);
      instance.SetDeleteArray(&deleteArray_agconvert);
      instance.SetDestructor(&destruct_agconvert);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const agconvert*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void aroot_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   TClass *aroot_IsA(const void*);
   void *new_aroot(void *p = 0);
   void *newArray_aroot(Long_t size);
   void delete_aroot(void *p);
   void deleteArray_aroot(void *p);
   void destruct_aroot(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const aroot*)
   {
      aroot *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("aroot", aroot::Class_Version(), "aroot.h", 5,
                  typeid(aroot), DefineBehavior(ptr, ptr),
                  &::aroot::Dictionary, &aroot_IsA, 0);
      instance.SetNew(&new_aroot);
      instance.SetNewArray(&newArray_aroot);
      instance.SetDelete(&delete_aroot);
      instance.SetDeleteArray(&deleteArray_aroot);
      instance.SetDestructor(&destruct_aroot);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const aroot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *agconvert::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *agconvert::Class_Name()
{
   return "agconvert";
}

//______________________________________________________________________________
const char *agconvert::ImplFileName()
{
   return ROOT::GenerateInitInstance((const agconvert*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int agconvert::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const agconvert*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void agconvert::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const agconvert*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *agconvert::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const agconvert*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *aroot::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *aroot::Class_Name()
{
   return "aroot";
}

//______________________________________________________________________________
const char *aroot::ImplFileName()
{
   return ROOT::GenerateInitInstance((const aroot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int aroot::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const aroot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void aroot::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const aroot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *aroot::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const aroot*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void aroot::Streamer(TBuffer &R__b)
{
   // Stream an object of class aroot.

   ::Error("aroot::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void aroot::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class aroot.

      TClass *R__cl = aroot::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
}

namespace ROOT {
   // Return the actual TClass for the object argument
   TClass *aroot_IsA(const void *obj) {
      return ((::aroot*)obj)->IsA();
   }
   // Wrappers around operator new
   void *new_aroot(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::aroot : new ::aroot;
   }
   void *newArray_aroot(Long_t size) {
      return new ::aroot[size];
   }
   // Wrapper around operator delete
   void delete_aroot(void *p) {
      delete ((::aroot*)p);
   }
   void deleteArray_aroot(void *p) {
      delete [] ((::aroot*)p);
   }
   void destruct_aroot(void *p) {
      typedef ::aroot current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class aroot

//______________________________________________________________________________
void agconvert::Streamer(TBuffer &R__b)
{
   // Stream an object of class agconvert.

   ::Error("agconvert::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void agconvert::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class agconvert.

      TClass *R__cl = agconvert::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTop", &fTop);
      R__insp.Inspect(R__cl, R__parent, "*fView", &fView);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   TClass *agconvert_IsA(const void *obj) {
      return ((::agconvert*)obj)->IsA();
   }
   // Wrappers around operator new
   void *new_agconvert(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::agconvert : new ::agconvert;
   }
   void *newArray_agconvert(Long_t size) {
      return new ::agconvert[size];
   }
   // Wrapper around operator delete
   void delete_agconvert(void *p) {
      delete ((::agconvert*)p);
   }
   void deleteArray_agconvert(void *p) {
      delete [] ((::agconvert*)p);
   }
   void destruct_agconvert(void *p) {
      typedef ::agconvert current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class agconvert

/********************************************************
* atlrootDict.cxx
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableatlrootDict();

extern "C" void G__set_cpp_environmentatlrootDict() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("agconvert.h");
  G__add_compiledheader("aroot.h");
  G__cpp_reset_tagtableatlrootDict();
}
class G__atlrootDictdOcxx_tag {};

void* operator new(size_t size,G__atlrootDictdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__atlrootDictdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_atlrootDictdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevatlrootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* agconvert */
static int G__atlrootDict_121_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   agconvert *p=NULL;
   if(G__getaryconstruct()) p=new agconvert[G__getaryconstruct()];
   else p=::new((G__atlrootDictdOcxx_tag*)G__getgvp()) agconvert;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__atlrootDictLN_agconvert);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((agconvert*)(G__getstructoffset()))->ag2root());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((agconvert*)(G__getstructoffset()))->convert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((agconvert*)(G__getstructoffset()))->ag2view((TVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((agconvert*)(G__getstructoffset()))->ag2view((TVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((agconvert*)(G__getstructoffset()))->ag2view((TVolume*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((agconvert*)(G__getstructoffset()))->ag2view());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)agconvert::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)agconvert::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)agconvert::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      agconvert::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const agconvert*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((agconvert*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((agconvert*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((agconvert*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)agconvert::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)agconvert::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)agconvert::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_121_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)agconvert::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__atlrootDict_121_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   agconvert *p;
   p=new agconvert(*(agconvert*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__atlrootDictLN_agconvert);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef agconvert G__Tagconvert;
static int G__atlrootDict_121_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (agconvert *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((agconvert *)((G__getstructoffset())+sizeof(agconvert)*i))->~G__Tagconvert();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((agconvert *)(G__getstructoffset()))->~G__Tagconvert();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* aroot */
static int G__atlrootDict_122_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   aroot *p=NULL;
   if(G__getaryconstruct()) p=new aroot[G__getaryconstruct()];
   else p=::new((G__atlrootDictdOcxx_tag*)G__getgvp()) aroot;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__atlrootDictLN_aroot);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      aroot::kuexec((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((aroot*)(G__getstructoffset()))->operator()((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((aroot*)(G__getstructoffset()))->operator()();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)aroot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)aroot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)aroot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      aroot::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const aroot*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((aroot*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((aroot*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((aroot*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)aroot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)aroot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)aroot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__atlrootDict_122_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)aroot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__atlrootDict_122_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   aroot *p;
   p=new aroot(*(aroot*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__atlrootDictLN_aroot);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef aroot G__Taroot;
static int G__atlrootDict_122_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (aroot *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((aroot *)((G__getstructoffset())+sizeof(aroot)*i))->~G__Taroot();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((aroot *)(G__getstructoffset()))->~G__Taroot();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* agconvert */

/* aroot */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncatlrootDict {
 public:
  G__Sizep2memfuncatlrootDict() {p=&G__Sizep2memfuncatlrootDict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncatlrootDict::*p)();
};

size_t G__get_sizep2memfuncatlrootDict()
{
  G__Sizep2memfuncatlrootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceatlrootDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableatlrootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* agconvert */
static void G__setup_memvaragconvert(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__atlrootDictLN_agconvert));
   { agconvert *p; p=(agconvert*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__atlrootDictLN_TVolume),-1,-1,2,"fTop=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__atlrootDictLN_TVolumeView),-1,-1,2,"fView=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__atlrootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* aroot */
static void G__setup_memvararoot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__atlrootDictLN_aroot));
   { aroot *p; p=(aroot*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__atlrootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvaratlrootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncagconvert(void) {
   /* agconvert */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__atlrootDictLN_agconvert));
   G__memfunc_setup("agconvert",969,G__atlrootDict_121_0_0,105,G__get_linked_tagnum(&G__atlrootDictLN_agconvert),-1,0,0,1,1,0,"","fTop,fView initialised to 0",(void*)NULL,0);
   G__memfunc_setup("ag2root",702,G__atlrootDict_121_2_0,85,G__get_linked_tagnum(&G__atlrootDictLN_TVolume),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("convert",769,G__atlrootDict_121_3_0,85,G__get_linked_tagnum(&G__atlrootDictLN_TVolume),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ag2view",693,G__atlrootDict_121_4_0,85,G__get_linked_tagnum(&G__atlrootDictLN_TVolumeView),-1,0,3,1,1,0,
"U 'TVolume' - 0 0 tree i - 'Int_t' 0 3 first "
"i - 'Int_t' 0 5 last",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__atlrootDict_121_5_0,85,G__get_linked_tagnum(&G__atlrootDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__atlrootDict_121_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__atlrootDict_121_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__atlrootDict_121_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__atlrootDict_121_9_0,85,G__get_linked_tagnum(&G__atlrootDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__atlrootDict_121_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__atlrootDict_121_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__atlrootDict_121_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__atlrootDict_121_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__atlrootDict_121_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__atlrootDict_121_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__atlrootDict_121_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("agconvert",969,G__atlrootDict_121_7_1,(int)('i'),G__get_linked_tagnum(&G__atlrootDictLN_agconvert),-1,0,1,1,1,0,"u 'agconvert' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~agconvert",1095,G__atlrootDict_121_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncaroot(void) {
   /* aroot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__atlrootDictLN_aroot));
   G__memfunc_setup("aroot",549,G__atlrootDict_122_0_0,105,G__get_linked_tagnum(&G__atlrootDictLN_aroot),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("kuexec",645,G__atlrootDict_122_2_0,121,-1,-1,0,1,3,1,0,"C - - 10 - command",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__atlrootDict_122_3_0,121,-1,-1,0,1,1,1,0,"C - - 10 \"help\" command",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__atlrootDict_122_4_0,85,G__get_linked_tagnum(&G__atlrootDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__atlrootDict_122_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__atlrootDict_122_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__atlrootDict_122_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__atlrootDict_122_8_0,85,G__get_linked_tagnum(&G__atlrootDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__atlrootDict_122_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__atlrootDict_122_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__atlrootDict_122_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__atlrootDict_122_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__atlrootDict_122_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__atlrootDict_122_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__atlrootDict_122_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("aroot",549,G__atlrootDict_122_6_1,(int)('i'),G__get_linked_tagnum(&G__atlrootDictLN_aroot),-1,0,1,1,1,0,"u 'aroot' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~aroot",675,G__atlrootDict_122_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncatlrootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)(&Ag),117,1,0,G__get_linked_tagnum(&G__atlrootDictLN_agconvert),-1,-1,1,"Ag=",0,(char*)NULL);
   G__memvar_setup((void*)(&kuexec),117,1,0,G__get_linked_tagnum(&G__atlrootDictLN_aroot),-1,-1,1,"kuexec=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalatlrootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcatlrootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__atlrootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__atlrootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__atlrootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__atlrootDictLN_TVolumeView = { "TVolumeView" , 99 , -1 };
G__linked_taginfo G__atlrootDictLN_TVolume = { "TVolume" , 99 , -1 };
G__linked_taginfo G__atlrootDictLN_agconvert = { "agconvert" , 99 , -1 };
G__linked_taginfo G__atlrootDictLN_aroot = { "aroot" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableatlrootDict() {
  G__atlrootDictLN_TClass.tagnum = -1 ;
  G__atlrootDictLN_TBuffer.tagnum = -1 ;
  G__atlrootDictLN_TMemberInspector.tagnum = -1 ;
  G__atlrootDictLN_TVolumeView.tagnum = -1 ;
  G__atlrootDictLN_TVolume.tagnum = -1 ;
  G__atlrootDictLN_agconvert.tagnum = -1 ;
  G__atlrootDictLN_aroot.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableatlrootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__atlrootDictLN_TClass);
   G__get_linked_tagnum(&G__atlrootDictLN_TBuffer);
   G__get_linked_tagnum(&G__atlrootDictLN_TMemberInspector);
   G__get_linked_tagnum(&G__atlrootDictLN_TVolumeView);
   G__get_linked_tagnum(&G__atlrootDictLN_TVolume);
   G__tagtable_setup(G__get_linked_tagnum(&G__atlrootDictLN_agconvert),sizeof(agconvert),-1,1280,(char*)NULL,G__setup_memvaragconvert,G__setup_memfuncagconvert);
   G__tagtable_setup(G__get_linked_tagnum(&G__atlrootDictLN_aroot),sizeof(aroot),-1,1280,(char*)NULL,G__setup_memvararoot,G__setup_memfuncaroot);
}
extern "C" void G__cpp_setupatlrootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupatlrootDict()");
  G__set_cpp_environmentatlrootDict();
  G__cpp_setup_tagtableatlrootDict();

  G__cpp_setup_inheritanceatlrootDict();

  G__cpp_setup_typetableatlrootDict();

  G__cpp_setup_memvaratlrootDict();

  G__cpp_setup_memfuncatlrootDict();
  G__cpp_setup_globalatlrootDict();
  G__cpp_setup_funcatlrootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncatlrootDict();
  return;
}
class G__cpp_setup_initatlrootDict {
  public:
    G__cpp_setup_initatlrootDict() { G__add_setup_func("atlrootDict",(G__incsetup)(&G__cpp_setupatlrootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initatlrootDict() { G__remove_setup_func("atlrootDict"); }
};
G__cpp_setup_initatlrootDict G__cpp_setup_initializeratlrootDict;

