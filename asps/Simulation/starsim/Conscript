#!/opt/star/bin/perl
#use Env;
Import qw ( env INCLUDE LIB BIN BUILD OBJ);
(my $build = $OBJ) =~ s/\#//g;
$build =~ s/\\/\//g;# print "OBJ = $OBJ build = $build MAIN = $MAIN\n";
(my $ObjDir = DirPath '.') =~ s/\\/\//g;# print "ObjDir = $ObjDir\n";
(my $Dir = $ObjDir) =~ s/$build\///g; #print "Dir = $Dir\n";
$ObjDir = "#" . $ObjDir;# print "ObjDir = $ObjDir\n";
my $STAR_SYS = $env->{ENV}->{STAR_SYS};
my $FC     = $env->{FC};
my $FCPATH = $env->{FCPATH};
my $FFLAGS = $env->{FFLAGS};
my $FPPFLAGS = $env->{FPPFLAGS};
my $FEXTEND = $env->{FEXTEND};
my $CPPFLAGS = $env->{CPPFLAGS};
my $CPPPATH = $env->{CPPPATH};
my $pkg  = "starsim"; 
my $PKG = $pkg;     print "Run cons in $Dir for $PKG\n";
my $SO_PKG = $PKG . "." . $env->{SUFSOLIB};# print "SO_PKG = $SO_PKG\n";
my $LIBPKG = "lib" . $PKG . "." . $env->{SUFLIB};
$FCPATH  = "#asps/Simulation/starsim/include";
$FCPATH .= $main::PATH_SEPARATOR . "#asps/Simulation/gcalor/include";
$FCPATH .= $main::PATH_SEPARATOR . $env->{ENV}->{CERN_ROOT} . "/include";
my $CPP_DATE = "031201";
my $CPP_TIME = "1937";
$FPPFLAGS .= " -D__ROOT_ -DCERNLIB_TYPE -DCERNLIB_UNIX " .
  "-DCERNLIB_BSLASH -DCERNLIB_DZDOC -DCERNLIB_SHL " .
  "-DCERNLIB_NONEWL -DCERNLIB_HIGZ  -DCERNLIB_CG  " .
  "-DCERNLIB_HADRON -DCERNLIB_GCALOR";
$FPPFLAGS .= " -DCPP_TITLE_CH=\"'" . $pkg . "'\"";
$FPPFLAGS .= " -DCPP_VERS=\"'v*'\"";
$FPPFLAGS .= " -DCPP_DATE=\"`date +%%y%%m%%d`\"";
$FPPFLAGS .= " -DCPP_TIME=\"`date +%%H%%M`\"";
$CPPFLAGS .= " -Df2cFortran";
$CPPPATH  = "#asps/Simulation/starsim/include";
$CPPPATH .= $main::PATH_SEPARATOR . $env->{Packages}->{MYSQL}->{INCDIR}; 
$CPPPATH .= $main::PATH_SEPARATOR . $env->{ENV}->{CERN_ROOT} . "/include";
$CPPPATH .= $main::PATH_SEPARATOR . $env->{ENV}->{CERN_ROOT} . "/src/pawlib/paw/ntuple";
$CPPFLAGS  = "-Df2cFortran -D__ROOT__ -DCERNLIB_QMGLIBC -DCERNLIB_DZDOC -DCERNLIB_NONEWL -DCERNLIB_SHL -DCERNLIB_HADRON -DCERNLIB_BSLASH -DCERNLIB_HIGZ -DCERNLIB_CG -DCERNLIB_MYSQL";
if ($STAR_SYS =~ /^rh/) {
  $FPPFLAGS .= " -DCERNLIB_LINUX -DCERNLIB_MYSQL";
  $CPPFLAGS .= " -DCERNLIB_LINUX -DCERNLIB_MYSQL";
}
if ($FC =~ /pgf77/) { 
  $FC       = $env->{G77}; print "set FC => $FC ==============================\n" if $param::debug;
  $FFLAGS   = $env->{G77FLAGS}; 
  $FEXTEND  = $env->{G77EXTEND};
}
$env2 = $env->clone('FC'           => $FC,
		    'FPPFLAGS'     => $FPPFLAGS,
		    'FFLAGS'       => $FFLAGS,
		    'FCPATH'       => $FCPATH,
		    'FEXTEND'      => "",
		    'CPPFLAGS'     => $CPPFLAGS,
		    'CPPPATH'      => $CPPPATH,
		    #		    'LIBPATH'      => $LIBPATH,
		    'LIBS'         => $LIBS,
		    'ObjDir'       => $obj_dir,
		    'Libraries'    => $Libraries
		   );
#my @Sources = qw(aversion.F 
		 #		 atmain/*.age atmain/*.F atmain/*.c atmain/*.cxx 
		 #		 atgeant/*.age 
		 #		 atutil/*.age atutil/*.F
		 #		 agzio/*.age agzio/*.F  
		 #		 rebank/*.age  
		 #		 dzdoc/*.F  
		 #		 geant/*.F geant/*.c  
		 #		 comis/*.F  
		 #		 deccc/*.c
#		);
my @src  = find_sources($Dir);
my $pwd = Cwd::cwd();# print "pwd = $pwd  Dir => $Dir\n";
my @sources = ();
foreach my $s (@src) {
  my @list = glob "$Dir/$s"; #print "$s => list = @list\n";
  foreach my $ss (@list) {
    $ss =~ s/$Dir\///;# print "$ss\n";
    next if $ss =~ /atlroot/;
    next if $ss =~ /acmain\.cxx/;
    #    next if $ss =~ /deccc\/traceqc\.c/;
    next if $ss =~ /atmain\/etime\.F/ and $FC !~ /g77/;
    next if $ss =~ /atmain\/agxinit\.cdf/;
    next if $ss =~ /atmain\/guinti\.cdf/;
    #    next if $ss =~ /deccc\/fputools\.c/ and $CC !~ /gcc/;
    push @sources, $ss; 
  }
}
#print "source = @sources\n";
if ($#sources > -1) {
  Library      $env2 $LIBPKG, @sources;  
  Install $env2 $LIB, $LIBPKG;
}
#my @starsim = qw(acmain.cxx deccc/traceqc.c);
my @starsim = qw(acmain.cxx);
my $pgm = "starsim";
my $PGI = $env->{ENV}->{PGI};
my $PGILIBS = "";
#if ($PGI) {
#  $PGILIBS .= " -L$PGI/linux86/lib";
#  $PGILIBS .= " -Wl,--whole-archive -Wl,-Bstatic";
#  if ( -e "$PGI/linux86/lib/libpgftnrtl.a"){
#    $PGILIBS .= " -lpgftnrtl";
#  }
#  if ( -e "$PGI/linux86/lib/libpgc.a"){
#    $PGILIBS .= " -lpgc";
#  }
#  if ( -e "$PGI/linux86/lib/libpgnod_prof.a"){
#    $PGILIBS .= " -lpgnod_prof";
#  }
#  $PGILIBS .= " -Wl,--no-whole-archive -Wl,-Bdynamic";
#}
script::Keep $pgm;
my $LDFLAGS = $env->{LDFLAGS};
$LDFLAGS .= " -export-dynamic -rdynamic -Wl,-noinhibit-exec,-Bdynamic";
my $LIBPATH    = $env->{LIBPATH};
if ($LIBPATH) {$LIBPATH .= $main::PATH_SEPARATOR;}

#$LIBPATH .= $env->{Packages}->{QT}->{LIBDIR};
$LIBPATH .= $main::PATH_SEPARATOR . $env->{Packages}->{MYSQL}->{LIBDIR};
my $LIBS    = $env->{LIBS};
if ($PGILIBS) {$LIBS .= " " . $PGILIBS;}
$LIBS .= " -Wl,--whole-archive -Wl,-Bstatic -lstarsim -lg2c -lstdc++ -Wl,--no-whole-archive -Wl,-Bdynamic";# -lg2c";
$LIBS .= " -lgeant321";
$LIBS .= " -lgcalor";
my $Libraries = $env->{Libraries};
		 my $LD = $env->{CC};
		 $Libraries .= " " . $env->{CERNLIBS} . " " . $env->{Packages}->{MYSQL}->{LIBS} . " " . 
		 $env->{FLIBS} . " " . $env->{CLIBS} . " " . $env->{SYSLIBS};
$envP = $env2->clone('LDFLAGS'   => $LDFLAGS,
		     'LIBPATH'   => $LIBPATH,
		     'LIBS'      => $LIBS,
		     'LD'        => $LD,
		     'FEXTEND'      => "",
		     'Libraries' => $Libraries
		    );
#print "LIBPATH = $envP->{LIBPATH}\n";
Program      $envP $pgm . ".new", @starsim;
InstallAs $envP $BIN . "/gstar", $pgm;
my $d = $Dir . "/";
my @list = glob $d . "atlsim.*";# print "Dir  = $Dir; list = @list\n";
my @Deps = ($pgm . ".new","#" . $d . "atlsim.makefile","#" . $d . "atlsim.bank","#" . $d . "atlsim.logon.kumac");
foreach my $l (@list) {
  my $f = File::Basename::basename($l); 
  my $s = $f; $s =~ s/atlsim/starsim/; #  print "$l => $s\n";
  InstallAs $envP $BIN ."/". $s, "#" . $d ."/". $f;
  push @Deps, $BIN . "/" . $s;
}		 
Command      $env  $pgm, @Deps, 
		 q(
		   cp     %1  %>
		   echo  '#######.makefile########' >> %>
		   echo  '#chto v imeni tebe moem#' >> %>
		   echo  '#######.makefile.#######' >> %>
		   cat      %2      >> %>
		   echo  '#######.endfile.########' >> %>
		   echo  '#########.bank##########' >> %>
		   echo  '#chto v imeni tebe moem#' >> %>
		   echo  '#########.bank.#########' >> %>
		   cat      %3          >> %>
		   echo  '#######.endfile.########' >> %>
		   echo  '#chto v imeni tebe moem#' >> %>
		   echo  '#####.logon.kumac#######' >> %>
		   cat      %4   >> %>
		   echo  '#######.endfile.########' >> %>
);
Install $envP $BIN, $pgm;
