*
* $Id: agfdig1.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
* $Name:  $
* $Log: agfdig1.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:37  potekhin
*
* Revision 1.2  2001/03/01 19:55:36  nevski
* config file becomes atlsim specific
*
* Revision 1.1  2001/02/27 10:14:26  nevski
*  first working release
*
*
#include <atlsim/config.h>
**********************************************************************
*                                                                    *
     Function     A g F D I G 1 (NHit,LTRA,ISC,HITS)
*                                                                    *
* Description:  make a loop over detector elements and give to user  *
*               all hits in the selected element sequentially        *
**********************************************************************
 Replace [;#?;]   With   [; IF #1 {" Take next word " K=1; Nk+=1; } ]
#include "commons/typing.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcunit.inc"
#include "geant321/gcvolu.inc"
#include "geant321/gcnum.inc"
#include "commons/agcbuff.inc"
#include "commons/agcrdig.inc"
#if defined(CERNLIB_OLDD)
integer           nac,nas,iac,itc,jtr
common /agctrbuf/ nac,nas,iac(50000),itc(50000)
#endif
                 Integer Lp; Parameter (Lp=20);
Integer          AgFDIG1,ISC(*),NVL(Lp),Nhit,LTRA,ja,Itr,Lev
Real             HITS(*);
Save             NVL;
*
   Lev=0     " will be set to the lowest Iv of the volume index been changed "
If Iv>=0     " Iv - the last changed level is saved in the AGCHIT common     "
{  If Ia==0
   {  Lev=LP; Nhit=0;
      :a:;If (Iv>0) NVL(Iv)+=1;  call UZERO(NVL,Iv+1,Lp);
          Lev=min(max(1,Iv),Lev);
          Ia=1; Iv=0; While Iv<max(1,Nvb)       " bootstrap index "
          {  IF NVL(Iv+1)>=Ibuf(Ia) { If (Iv==0) goto :e:; goto :a:; }
             Iv+=1;  Ia=IBuf(Ia+NVL(Iv)+1);   If (Ia=0) goto :a:;
   }      }
                               * * *
   "   getting a hit in the selected element and the address of the next "
   Ja=JXD+Nw*(Ia-1)+1;   call  AgGETDIG (JD,Ja,ISC,HITS);
*
   "   get track number and next hit number "
#if !defined(CERNLIB_OLDD)
   ITR=IQ(Ja); Ia=IQ(JDS+Ia+1)
#endif
#if defined(CERNLIB_OLDD)
*  check for the track overlap, clear track number
   jtr=JBYT(IQ(ja),1,32-Mb)*nas;
   do i=1,nas { itr=itc(jtr+i); if (iac(jtr+i+1)>Ia) break; }
   Ia=JBYT(IQ(ja),33-Mb,Mb);  IQ(Ja)=Itr
#endif
*
   If (Nhit==0) LTRA=ITR;      If (LTRA!=ITR) LTRA=-ITR
                              * * *
   " Count hits in the same element, the last one get Nhit negative "
   Nhit+=1; If (Ia=0) Nhit=-Nhit; Nc2+=1;  AgFDIG1=0; "intermediate" Return;
}
   :e:   IWA(1)=0;                         AgFDIG1=-1; "  final  "   Return;
   END


