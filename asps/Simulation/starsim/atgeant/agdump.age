*
* $Id: agdump.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
* $Name:  $
* $Log: agdump.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:37  potekhin
*
* Revision 1.2  2001/03/01 19:55:35  nevski
* config file becomes atlsim specific
*
* Revision 1.1  2001/02/27 10:14:25  nevski
*  first working release
*
*
#include <atlsim/config.h>
***************************************************************************
*                                                                         *
            Subroutine   A G D U M P (CpathI,NUM,Chopt)
*                                                                         *
* Description: Given a path, dump the whole structure below it with DZDOC *
*      NUM   :  If NUM(1) is zero, array of 1s is assumed                 *
*      Chopt : F - write output in a file with the name of the bank(.sgml)*
*            : C - dump values only (to be read by another program)       *
*            : U - dump also undocumented banks, otherwise they are skept *
*            : 1 - skip banks longer then 1000 words                      *
*            : S - SGML format                                            *
*            : H - HGML format                                            *
***************************************************************************
#include "commons/typing.inc"
#include "commons/quest.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcunit.inc"
#include "atlsim/rbbank.inc"
  INTEGER    AgPFLAG,LENOCC,INDEX,IL(15),LK(15),Num(15),Nun(15)/15*1/,
             L,I,J,K/0/,Luu/6/,MOQUEQ/11/,Ierr/0/,Iprin/0/
  Character  CpathI*(*),Cpath*80,Chopt*(*),Cbank*4,
             Ctop*4,Bank*8,Cold*8,Chop*4,Cfile*4
  Logical    Opnd
*
     INQUIRE(FILE='detm.rz',OPENED=opnd)
     if (.not.opnd) Call Agsbegm('DOCUM',Iprin)
     Iprin=AgPFLAG('DOCU','PRIN')

*                  convert to capitals
L=Lenocc(CpathI);  Cpath=CpathI(1:L);  Call CLTOU(CPATH(1:L))
*
If Num(1)>0 { Call ReBANK(Cpath,Num,0,L,J) }
else        { Call ReBANK(Cpath,Nun,0,L,J) }
Check L>0;  J=1;  Cold=' ';  Luu=Lout;
If Index(Chopt,'F')!=0
{  Luu=62;  Call UHTOC(IQ(L-4),4,Cfile,4)
   Open(Luu,File=Cfile//'.sgml',STATUS= 'UNKNOWN')
}
*
Loop
{   If L>0
    {  If LQ(L+1)<=0  { Ctop='NONE' }
       else           { Call UHTOC(IQ(LQ(L+1)-4),4,CTOP,4) }
       Call UHTOC(IQ(L-4),4,CBank,4);   Bank=Cbank//Ctop;
*                                          print bank header
       Chop='PRZ'
       If (Index(Chopt,'H')!=0) Chop='PRZH'
       If (Index(Chopt,'S')!=0) Chop='PRZS'
       If Cold != bank                   " dump new bank header "
       {  IQUEST(MOQUEQ)=1; Call DzDOCO(Luu,Bank,Chop); IERR=IQUEST(MOQUEQ) }
*                                          print the bank itself
       If (Index(Chopt,'C')==0) { Chop=' ' } else { Chop='C' }
       If ((Ierr==0|Index(Chopt,'U')>0) & (Index(Chopt,'1')==0|IQ(L-1)<1000))_
          Call DzDDOC(IrbDiv,L,Bank,Chop,1,IQ(L-1),Luu,'    ',K)
       Lk(j)=L;  IL(j)=0;  Cold=Bank;
*                                          skip content of docu tree
       if (Bank='DOCUDETM' & J>1) IL(j)=999999;
    }
*    now navigate in the structure - first through links, then to next bank
    If IL(j)<IQ(LK(j)-2)  { IL(j)+=1; L=LQ(LK(j)-IL(j));  If (L >0) j+=1; }
    else   " brothers "   { If (j==1) Break; L=LQ(LK(j)); If (L<=0) j-=1; }
}
If Index(Chopt,'F')!=0
{ Close (Luu);  If (Index(Chopt,'H')!=0)
  {  L=Lenocc(CPath);  J=0;  Ctop='NONE'
     do i=1,L-14  { If (CPath(i:i)='/') J=i }
     If (J>0) Ctop=CPath(J+1:J+4)
     Open (Luu,  File=Cfile//'.sgml', STATUS= 'UNKNOWN')
     Call DZE2HT(Luu,Luu+1,3,Ctop)
     close (Luu)
} }
END


