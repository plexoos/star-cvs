*
* $Id: agsdeth.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
* $Name:  $
* $Log: agsdeth.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:37  potekhin
*
* Revision 1.3  2002/11/09 19:05:02  nevski
* correct re-creation of digits
*
* Revision 1.2  2001/06/13 23:42:10  nevski
* cosmetics only
*
* Revision 1.1  2001/02/27 10:14:33  nevski
*  first working release
*
*
#include <atlsim/config.h>
***************************************************************************
*                                                                         *
                  Subroutine   A g S D E T H (IEXT)
*                                                                         *
*  Description:  fill the description of a new hit element in DETU.       *
*  In a digitization module a modification mode is also possible.         *
*  Final analyse is done by AggDETV and AggDETU called from AggCLOS.      *
*  This is done on the exit from a geometry module, when all volume       *
*  positionning is finished, or at the end of the DIGI operator           *
*  in a digitization module where positionning is already done.           *
*                Called from users code on each hit element               *
*  Possible hit options are:  C,H,X,R,S - see comments in the code        *
*                             F - in AggDETU sets 'float' bins            * 
*  If hit code is undefined, an attempt is made to find 'codehit' routine *
*  It is supposed to have same arguments as any user step routine-(j,hit) *
*  Modifications:                                                         *
*  15feb97, PN: Allow less then 4 letters for a 'chit'HIT  routine        *
*  09mar01, PN: FhMin/Max set to global min/max                           *
***************************************************************************
#include "commons/typing.inc"
#include "commons/agecom.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcunit.inc"
#include "geant321/gconst.inc"
 Integer     CSADDR,LENOCC,IEXT,Ltab,Ioption,Jdu,Ia,N,Ja,i1,i2,Ifun,k,i,new
 Real        ARFROMC
 Parameter   (Ltab=30)
 Character   T*1, Hit*4, Ctab(Ltab)*4 _
            /'X','Y','Z','R','RR','PHI','THE','ETA','TDR','CT',
             'CX','CY','CZ','ETOT','ELOS','BIRK','STEP','LGAM','TOF','USER',
             'XX','YY','ZZ','PX','PY','PZ','SLEN','PTOT','LPTO','rese'/

  Check %Idet>0 & %Iset>0 & %Jdu>0;
  " save next hit in DETU bank for a new structure marked by negative U(10) "
  JDU=%Jdu;  Ia=Q(Jdu+1);    N=Q(jdu+2);      Ja=Jdu+Ia+%NwuHit*N;
             Hit=%Parlist;   new=Q(Jdu+10);   T=%EXNAME;
                               * * *
  If new<0                                            " a new hit element "
  {  Ia=Q(Jdu+1);   N=Q(jdu+2);    Ja=Jdu+Ia+%NwuHit*N;
     If (N>=14)    {%error('Can not store more hit elements ',N)};
     N+=1;          Q(jdu+2)=N;    Q(jdu+3)=Ia+%NwuHit*N;
     Call  Vzero(Q(Ja+1),10);
     Q(Ja+1)=ARFROMC(%ParList);    Q(Ja+2)=ARFROMC(%Option);
     Q(Ja+3)=%Nbits;   Q(Ja+4)=%FhMin;   Q(Ja+5)=%FhMax;
     If (%bin>0)       Q(Ja+7)=1/%bin;
     If (HIT='USER')   IQ(Ja+9)=IEXT;                " not exportable...   "
     Ifun=0;      k=Lenocc(Hit)                      " hit function code   "
     do i=1,Ltab  { Check Hit(1:k)==Ctab(i)(1:k);    Ifun=i;   break;      }
     If Ifun==0   { IQ(Ja+9)=CSADDR(HIT(1:k)//'HIT') }
*
     Q(Ja+10)=Ifun;  Ioption=Q(Jdu+7);               " global option setup "
     "option H used in AggDETU to mark the start of 'hit' field a la GEANT "
     "option R                 to require bin rounding up to 2 digits      "
     if (Index(%Option,'S')>0) Call SBIT1(Ioption,1) " single step option  "
     if (1 <=Ifun & Ifun<= 10) Call SBIT1(Ioption,2) " local coordinate rq "
     if (Index(%Option,'X')>0) Call SBIT1(Ioption,2) " same explicitly     "
     if (11<=Ifun & Ifun<= 13) Call SBIT1(Ioption,3) " local direction rq  "
     if (Index(%Option,'X')>0) Call SBIT1(Ioption,3) " same explicitly     "
     if (Index(%Option,'C')>0) Call SBIT1(Ioption,4) " Calorimeter option  "
     Q(Jdu+7)=Ioption
  }
  else                               " update an existing hit/digi element "
  {  i1=Q(Jdu+1); i2=Q(Jdu+3);
     do ia=i1,i2-1,%NwuHit
     {  Ja=Jdu+ia;   check Q(Ja+1)=ARFROMC(%ParList)
        If (%Option # '*') Q(Ja+2)=ARFROMC(%Option)
        If (%Nbits#%Magic) Q(ja+3)=%Nbits;
        Q(ja+4)=%FhMin;    Q(ja+5)=%FhMax;
*       If (Q(ja+4)==%Magic) Q(ja+4)=%FhMin
*       If (%FhMin !=%Magic) Q(Ja+4)=min(Q(ja+4),%FhMin);
*       If (Q(ja+5)==%Magic) Q(ja+5)=%FhMax
*       If (%FhMax !=%Magic) Q(Ja+5)=max(Q(ja+5),%FhMax);
        If (%bin>0)      { Q(Ja+7)=1/%bin;  Q(Ja+3)=%Magic; }
  }  }
  END



