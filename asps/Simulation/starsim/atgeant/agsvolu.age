*
* $Id: agsvolu.age,v 1.1.1.1 2004/01/12 23:49:38 potekhin Exp $
* $Name:  $
* $Log: agsvolu.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:38  potekhin
*
* Revision 1.2  2001/10/28 14:57:17  nevski
* optimise search
*
* Revision 1.1  2001/02/27 10:14:39  nevski
*  first working release
*
*
#include <atlsim/config.h>
**********************************************************************
*                                                                    *
                    Subroutine   A g S V O L U
*                                                                    *
*  Description: On SHAPE returns Ivolume, actual Npar and Npo of the *
*  existing GEANT volume or creates and returns the new volume number*
**********************************************************************
#include "commons/typing.inc"
#include "commons/agecom.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcunit.inc"
#include "geant321/gcnum.inc"
#include "geant321/gconst.inc"
Integer     Name,LENOCC,Ivo,Jvo,IDH,Npo,Npa,i,JATTF,Jj,Jat,Id0/0/,Ivs/1/
real        eps/1.e-6/,P(50),Tth,Phi,Ph
JATTF(Jj) = Jj+int(Q(Jj+5))+6
*
* Toggle the actual Npa = 0 | NPar
  Npa=0;  Do I=1,%Npar { if (%Par(i)#0) Npa=%Npar; }
  Call UCTOH(%Volume,Name,4,4);  %Ignum=-1;  Ivo=0;
  If %IMED<=0 {%error(' Medium  in  ',%Volume,' not defined')};
  if %Idtype!=Id0 { Id0=%Idtype; Ivs=NVOLUM+1; }

* if the top level volume has a hole, its inner radius(radii) is reset to 0:
   if Nvolum==0
   {  If %Ishape==5 | %Ishape==6 | %Ishape==9 { %Par(1)=0 " - TUBE,TUBS,SPHE"}
      If %Ishape==7 | %Ishape==8   { %Par(2)=0; %Par(4)=0 " - CONE,CONS     "}
      If %Ishape==11  {  do i=1,nint(%PAR(4)) { %Par(3*i+3)=0 }  " - PGON   "}
      If %Ishape==12  {  do i=1,nint(%PAR(3)) { %Par(3*i+2)=0 }  " - PCON   "}
   }
* If the volume has been defined with the same dimensions, return %Ivolume;
  :volume: Do %Ivolume=NVOLUM,Ivs,-1
  { if (Ivo>0) Break :volume:;
    "take next volum's IDs "     Jvo=LQ(JVOLUM-%Ivolume);   IDH=IQ(Jvo-4);
    "Select same generic names"  check IDH==Name;   "and count them" %Ignum+=1;
    "Select Big Brother" if (IQ(JVOLUM+%Ivolume)==Name) Ivo=%Ivolume;

    "Now check that parameters are the same, otherwise search for another copy"
    "Undefined volumes with Npa=0  will fit any other volume "
     Npo=Q(Jvo+5);     Jat=JATTF(Jvo);
     If %Ishape==4 | %Ishape==10      "      special cases in Geant 3.21     "
     {  Call Ucopy(%Par,P,min(%Npar,30));
        IF %ISHAPE==4                 "        Trapezoid    "
        {  TTH =TAN(P(2)*DEGRAD);   PHI  =P(3)*DEGRAD;
           P(2)=TTH*COS(PHI);       P(3) =TTH*SIN(PHI)
           P(7)=TAN(P(7)*DEGRAD);   P(11)=TAN(P(11)*DEGRAD)
        }
        ELSE IF %ISHAPE==10    " Parallelepiped - change angles to tangents. "
        {  P(4)=TAN(P(4)*DEGRAD);   TTH=TAN(P(5)*DEGRAD);  PH=P(6)*DEGRAD;
           P(5)=TTH*COS(PH);        P(6)=TTH*SIN(PH)
        }
        Do I=1,min(Npo,Npa)
        {  If (abs(P(i)-Q(Jvo+6+i))>eps*abs(P(i)+Q(Jvo+6+i))) Next :volume:; }
     }  Else
     {  Do I=1,min(Npo,Npa)        { If (%Par(i)#Q(Jvo+6+i))  Next :volume:; }
     }
    "Do I=1,6             { If(%Attribute(i)#nint(Q(Jat+i)))  Next :volume:; }"
    "This is an existing volume, use it! If Npo==0, we will need to GSPOSP it"
     if (%Serial=nint(Q(Jat+10)) & %Imed=nint(Q(Jvo+4)))      goto :done:
  }
* check parameters
   If (%Ishape==5 | %Ishape==6 | %Ishape==9) & (Npa>1 & %Par(2)<%Par(1))
   { <w> %Volume,(%Par(i),i=1,Npa); (' AGSVOLU: bad radius of ',A4,':',10F8.2)}

* make a new volume always at the end of the volume list
   %Ignum+=1;  Call AgSNAME(%Volume,%Ignum,%Cnick)
   Call GSVOLU(%Cnick, %Shape, %Imed, %Par, Npa, %Ivolume)
   prin1 %Volume,%Cnick,%Shape,%Imed,%Ivolume,Npa,(%Par(i),i=1,Npa)
  (' AGSVOLU: Name/shape ',3(A4,2x),' Imed,Iv,Np=',3I5/(10x,'Par=',10F8.2))
   If %Ivolume<NVOLUM {%error(' error defining GEANT volume ',%Volume)}
*
  "set also volume generic name and number in IDH & IDN , Idtype "
   Jvo=LQ(JVOLUM-%Ivolume); IQ(Jvo-4)=Name; IQ(Jvo-5)=%Ignum;
   Jat=JATTF(Jvo);  Q(Jat+9)=%IdType;  Q(Jat+10)=%Serial;
:done:
* save Active volume number in the generic bank status word;
  if (Ivo==0) Call GLOOK (%Volume,IQ(JVOLUM+1),Nvolum,Ivo); Jvo=LQ(JVOLUM-Ivo);
  IQ(Jvo-5)=%Ivolume;  Call UHTOC(IQ(JVOLUM+%Ivolume),4,%CNICK,4);
   END

