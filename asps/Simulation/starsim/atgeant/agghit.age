*
* $Id: agghit.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
*
* $Name:  $
*
* ----------------------------------------------------------
#include <atlsim/config.h>
**********************************************************************
*                                                                    *
                    Function     A g G H I T (ic)
*                                                                    *
*  Description:  general hit coding for any standard detector        *
*                                                                    *
**********************************************************************
#include "commons/typing.inc"
#include "geant321/gcunit.inc"
#include "geant321/gconst.inc"
#include "geant321/gcvolu.inc"
#include "geant321/gckine.inc"
#include "geant321/gcking.inc"
#include "geant321/gctmed.inc"
#include "geant321/gctrak.inc"
#include "atlsim/agcstep.inc"
 REAL             AgGHIT,VDOTN,VDOT,Hit,V(3),R,THE,VMOD,
                  a(2),c(2),dk,da,Vec(2)
 Integer          IC,JMP,i,IcMax/30/

 AgGHIT=-9999;    If (0>Ic | Ic>IcMax) Return;      hit=0;

 Case  IC of ( X  Y  Z   R    RR   PHI  THET ETA  TDR  CP    _
               U  V  W   ETOT ELOS BIRK STEP LGAM TOF  USER  _
               XX YY ZZ  PX   PY   PZ   SLEN PTOT LPTO rese )
 {
  :X:;:Y:;:Z: hit=Xloc(ic);                                              Break;
  :R:         hit=VMOD(Xloc,2);                                          Break;
  :RR:        hit=VMOD(Xloc,3);                                          Break;
  :PHI:       If (xloc(1)#0|xloc(2)#0) hit=ATAN2(xloc(2),xloc(1));       Break;
  :THET:      R=VMOD(xloc,3); if (R>0) hit=ACOS(xloc(3)/R);              Break;
  :ETA:       Do i=1,3 { V(i)=(Vect(i)+Vect0(i))/2 }
              R=VMOD(V,3); if (R>0) THE=ACOS(V(3)/R)
              hit=-ALOG(TAN(min(max(1.e-6,THE),pi)/2));                  Break;
  :TDR:       " vector a=vloc-vloc0"   Call vsub(vloc,vloc0,a,2);
              da=vdot(a,a,2);  dk=-1;  if (da>0) dk=-vdot(a,vloc0,2)/da;
              If 0<= dk&dk <=1 "point is insided, vec=vloc+a*dk "
                   { Call Vlinco(vloc0,1.,a,dk,Vec,2); hit=VMOD(Vec,2);}
              Else { hit=min(VMOD(vloc0,2),VMOD(vloc,2)) };              Break;
  :CP:        " vector a=vloc-vloc0"   Call vsub(vloc,vloc0,a,2);
              Call Vlinco(vloc0,-1.,a,-0.5,c,2); hit=vdotn(a,c,2);       Break;
  :u:;:v:;:w: i=ic-10+3;   hit=Xloc(i);                                  Break;
  :ETOT:      hit=GETOT;                                                 Break;
  :ELOS:      hit=aDeStep;                                               Break;
  :BIRK:      hit=aDeStep; Call GBIRK(hit);                              Break;
  :STEP:      hit=aStep;                                                 Break;
  :LGAM:      IF AMass>0&GEKin>0&Charge#0 { Hit=ALOG10(GEKin/AMass); }
              else If Amass<=0            { Hit=-999 }
              else If GEKin<=0            { Hit=-998 }
              else                        { Hit=-997 }                   Break;
  :TOF:       hit=TOFG;                                                  Break;
  :USER:      hit=aDeStep;                                               Break;
  :XX:;:YY:;:ZZ:  i=ic-20; Hit=(Vect(i)+Vect0(i))/2;                     Break;
  :PX:;:PY:;:PZ:  i=ic-20; Hit=(Vect(i)*Vect(7)+Vect0(i)*Vect0(7))/2;    Break;
  :SLEN:      hit= Sleng;                                                Break;
  :PTOT:      hit= (Vect(7)+Vect0(7))/2;                                 Break;
  :LPTO:      hit= ALOG10(max((Vect(7)+Vect0(7))/2,.1e-9));              Break;
  :rese:      hit= 0;                                                    Break;
 }
2 AgGHIT=hit;
   END

