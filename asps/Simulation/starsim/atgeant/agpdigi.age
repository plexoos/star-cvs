*
* $Id: agpdigi.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
*
* $Name:  $
*
* ---------------------------------------------------------
#include <atlsim/config.h>
**********************************************************************
*                                                                    *
                SUBROUTINE A G P D I G I (CSET,CDET)
*                                                                    *
*  Description: print GEANT hits or digits                           *
*  If USER bank is there this is the AGI dense format                *
*  FOR OTHER APPLICATION PLEASE TAKE CARE OF THE NAMING CONVENTION:  *
*  Nv,Nx(=h/d) for original geant counters, Nha,Nvb for AGI counters *
**********************************************************************
 Replace [;#?;]   With   [; IF #1 {" Take next word " K=1; Nk+=1; } ]
#include "commons/typing.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcunit.inc"
     INTEGER       JS,JD,JH,JX,JXD,JDU,Ip0,Ip1,Nw,NVb,Nha,Mv,Md,
                   Nset,Ndet,Last,Iset,Idet,Ltra,Idig,ii,jj,X,i,
                   JBYT,NBV(15)
     REAL          DIGI(20)
     CHARACTER     CBUF*400,T*6
     CHARACTER*4   ACFROMR,CSET,CDET,CS,CD,CDID
*
 NSET=IQ(JSET-1)    "           first make selection using SETS    "
 DO ISET=1,Nset     "             Loop on all selected sets        "
 { CALL UHTOC(IQ(JSET+ISET),4,CS,4);  Check CSET(1:1)='*' | CSET=CS;
   JS = LQ(JSET-ISET);   Check Js>0;  Ndet=IQ(JS-1);
   Do IDET=1,NDET  "         Loop on selected detectors for this set "
   { CALL UHTOC(IQ(JS+IDET),4,CD,4);  Check CDET(1:1)='*' | CDET=CD;
*
                                     " now check the DIGI structure "
     JD  = LQ(JS-IDET);           Check Jd>0;
     If LQ(JD-2)>0                { T='DIGITS'; JH=JDIGI; X=2;  }
     If LQ(JD-1)>0                { T=' HITS '; JH=JHITS; X=1;  }
                                  CHECK JH>0;
     JX   = LQ(JH-ISET);          Check JX>0;
     JXD  = LQ(JX-IDET);          Check JXD>0;
     LAST = IQ(JX+IDET);          Check LAST>0;
     JDU  = LQ(JD-3);
     IF JDU<=0
     {  CALL UHTOC(IQ(JXD-4),4,CDID,4);
        IF CDID=='DIGI' { CALL GPDIGI(CS,CD) } else { Call GPHITS(CS,CD) }
        Next;
     }
     " otherwise this are hits(SJHD) or new digits(SJDX) "
     NW = IQ(JD+1)+IQ(JD+2*X+1)+1;   Check Nw>0;
     " volumes "  Nvb = Q(JDU+6);  Mv = Min(Nvb,15);  Ip0 = 12+5*Mv;
     " all hits " Nha = Q(JDU+2);  Md = Min(Nha,20);  Ip1 = Ip0+10*Md+2;
*
     <W> T,Cd,Cs;
     (/' ====>',A6,' IN DETECTOR ** ',A4,' ** OF SET ** ',A4,' ** <===='/);
     Cbuf=' '                                   "  print header line ";
     WRITE(CBUF,'(1x,A5,6H TRACK,15(1x,A4))')  T,(IQ(JD+2*I+9),i=1,Mv);
     WRITE(CBUF(Ip0+1:),'(20(6x,A4))') (ACFROMR(Q(JDU+10*I+1)),i=1,Md);
     <W>  (CBUF(i:i),i=1,Ip1);     (122A1/(12x,110A1));
     IDIG=0;
     Do ii=1,LAST,NW
     {  jj=JXD+ii; IDIG+=1; LTRA=JBYT(IQ(jj),1,16);
        Call  AGGETDIG (Jd,jj,NBV,DIGI);
        WRITE(CBUF,        '(2i6,15i5)')     IDIG,LTRA,(NBV(i),i=1,Mv)
        WRITE(CBUF(IP0+1:),'(2x,1P,20G10.3)')         (DIGI(i),i=1,Md)
        <W>  (CBUF(i:i),i=1,Ip1);  (122A1/(12x,110A1));
     }
 } }
   END


