*
* $Id: agdlink.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
* $Name:  $
* $Log: agdlink.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:37  potekhin
*
* Revision 1.2  2001/03/01 19:55:33  nevski
* config file becomes atlsim specific
*
* Revision 1.1  2001/02/27 10:14:23  nevski
*  first working release
*
*
#include <atlsim/config.h>
**********************************************************************
            subroutine  A G D L I N K (Module,Bank,Link,LK)
*            Register a new link for dynamic bank access             *
*  keep them names now in a common, but can be an internal array too *
**********************************************************************
#include "commons/typing.inc"
#include "commons/agclink.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcflag.inc"
#include "geant321/gcunit.inc"
Character         Module*(*),Bank*(*),Cbank*8
Integer           NumLin,LinkName,Link,Lk,Key(2),LENOCC
Common /AGCDLINK/ NumLin,LinkName(2,NaLinkMax)

If Link<0  " allocate a new secured link "
{  Cbank=Bank(1:lenocc(Bank))//module;  Call UCTOH(CBank,Key,4,8)
   If (%Nlink==0) call MZLINK(IxCONS,'AGCLINK',%Link,%Link,%Link(NaLinkMax))
   Do Link=1,NumLin
   {  If (Key(1)==LinkName(1,link) & Key(2)==LinkName(2,link)) goto :fnd:; }

   If NumLin>=NaLinkMax
   {  <w> Bank; (' AGDLINK fatal error: NO more free links left for bank ',a)
      Link=NaLinkMax; Return
   }
   NumLin+=1; %NLink=NumLin; Link=NumLin; Call Ucopy(Key,LinkName(1,link),2)
   If (IDEBUG>0) <W> bank,link; (' AGDLINK: new link for bank ',a,' is ',i5)
}
:fnd: If (Link>=0)  %LINK(link)=Lk
End


