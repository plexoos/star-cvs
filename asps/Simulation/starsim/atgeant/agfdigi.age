*
* $Id: agfdigi.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
* $Name:  $
* $Log: agfdigi.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:37  potekhin
*
* Revision 1.2  2001/03/01 19:55:36  nevski
* config file becomes atlsim specific
*
* Revision 1.1  2001/02/27 10:14:27  nevski
*  first working release
*
*
#include <atlsim/config.h>
**********************************************************************
*                                                                    *
   subroutine   A G F D I G I (Cset,Cdet,NVS,LTRA,NBV,DIGI,Iw,Iad)
*                                                                    *
* Returns the next digitisation for the physical volume, specified   *
* by NVS list with generic volume/set name Cdet/Cset,packed form     *
* INPUT:                                                             *
* Cset,Cdet - user set/detector identifiers (CHAR*4)                 *
* NVS - list of volumes identifying the path, ignored if nvs(1)<0    *
* OUTPUT:                                                            *
* LTRA the number of the track which has produced this digitisation  *
* NBV  the list of volume numbers which identify the physical volume *
* KDIGI       array that get the digitalisation elements             *
* ====>  User should take care of NVB and KDIGI real dimesions !     *
* Iw - Hit sequential number. It is negative, if SET/DET does not    *
*      exist at all, and 0 when hits are absent or all hits are done *
**********************************************************************
#include "commons/typing.inc"
#include "commons/agcrdig.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcunit.inc"
  CHARACTER*4 Cset,Cdet,Cset0/'****'/,Cdet0/'****'/
  Integer     Nvs(*),NBV(*),LTRA,NTRA,Iw,Iad,JH,Iset,Idet,I,J,ii,X
  Real        DIGI(*)
* - - - - - - - - - - - - - - - - - - - - - - - - -
IF Iw<=0 | Cset!=Cset0 | Cdet!=Cdet0
{  Check Jset>0;   {Jdu,Last}=0;   Iw=-1;
   Call  MZLINT(IxSTOR,'AGCRDIG',IWA,JS,Jdu);
   "  Find if digi in selected set & detector exist  "
   Call GLOOK(Cset,IQ(Jset+1),IQ(Jset-1),Iset);             Check Iset> 0;
   JS  = LQ(Jset-Iset);                                     Check Js  > 0;
   Call GLOOK(Cdet,IQ(JS + 1),IQ(JS - 1),Idet);             Check Idet> 0;
   JD  = LQ(JS-Idet);                                       Check JD  > 0;
   JDU = LQ(JD-3);    Cset0=Cset;    Cdet0=Cdet;     Iw=0;
   if Cset(4:4)=='H' {X=1; JH=JHITS} else {X=2; JH=JDIGI};  Check JH  > 0;
   Jx  = LQ(JH-Iset);                                       Check Jx  > 0;
   JXD = LQ(JX-Idet);                                       Check JXD > 0;
   Last= IQ(JX+Idet);                                       Check Last> 0;
   NW  = IQ(JD+1)+IQ(JD+2*X+1)+1
   Nvb = Q(JDU+6)
   if (IW<0) IW  = 0
}
If jdu<=0  { call GFDIG1(Cset,Cdet,1,NVS,LTRA,NTRA,NBV,DIGI,Iw,Ia); Return; }
*
:D: DO ii=Iw*Nw+1,Last,Nw
 {  j=JXD+ii;   LTRA=IQ(j);   Call AgGETDIG(Jd,J,NBV,DIGI)
    do i=1,Nvb  { If (NVS(i)>0 & NVS(i)!=NBV(i)) Next :D:; }
    iw=ii/Nw+1; Iad=J;                           Return;
 }
   {iw,iad,IWA(1)}=0;
   END


