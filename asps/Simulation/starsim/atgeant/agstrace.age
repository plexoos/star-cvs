* $Id: agstrace.age,v 1.1.1.1 2004/01/12 23:49:38 potekhin Exp $
* $Name:  $
* $Log: agstrace.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:38  potekhin
*
* Revision 1.2  2003/09/14 21:27:26  nevski
* common code for both saving and trackin case
*
* Revision 1.1  2003/09/10 15:11:52  nevski
* add tracing in KINU
*
#include <atlsim/config.h>
************************************************************************
*                                                                      *
                SUBROUTINE   A g S T R A C E
*                                                                      *
* Description :                                                        *
*     Set users conditions for MC particle tracing in the KINU bank    *
*     It gets arguments from DETP  TRAC  datacard:                     *
*          Mechanism, Rmax, Zmax, Eparent, Iprim_Ipa1_Ipa2             *
*     Entry AGSECOND Set conditions for products saving into the KINE: *
*     It gets arguments from DETP  TRAC  datacard:                     *
*          Mechanism, Rmax, Zmax, Eparent, Esecondary                  *
************************************************************************
#include "commons/typing.inc"
#include "geant321/gcunit.inc"
#include "geant321/gcbank.inc"
#include "geant321/gckine.inc"
#include "geant321/gcking.inc"
#include "geant321/gctrak.inc"
#include "geant321/gcflag.inc"
*
      Integer      NP,NL
      Parameter   (NP=102,NL=3)
      INTEGER      AGPFLAG,LGVERT,IPAR(NP),IPRIN/0/,NUSE/0/,ISEL/0/,Nst/0/
      Integer      Nsave,Istor,Jver,Imeca,Ipa1,Ipa2,Ic,Npar,Nc,N,I,J
      Integer      IdEvt0/-1/,Iv0/0/,It0/0/,Ntbeam/0/,Iadr/0/
      Real         VMOD,Vsave(6),z0,r0,za/0/,ra/0/,PAR(NP)/NP*0/
      Character*4  Cproc,Cloc(NL)/'STOP','CROS','VOLU'/
      Equivalence  (PAR,IPAR)

* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
       IF(IdEvt0 != IdEvt)  THEN
          Idevt0  = Idevt
          Iv0     = -1
          It0     = -1
          IPRIN=AGPFLAG('TRAC','SIMU')
          CALL ASLGETBA('TRAC','DETP',NP,NPAR,PAR)
          Nc      = (NPAR-1)/5
          NUSE    = Nc*5
          Nst     = 0
          If (Iprin>=Idevt & Idebug>0)  <w> (PAR(i),i=2,NPAR)
             (' SECONDARY SAVING : process   Rmax   Zmax    Eparent    Eprod',
                                   /(20x,a4,f10.1,f7.1,2f10.3))
          If (NUSE!=NPAR-1) <w> Nc
             (' AGUSECOND ERROR: too many commands, only',i3,' are accepted')
          Do N=1,NUSE,5
             Call UHTOC(PAR(N+1),4,CPROC,4)
             CALL CLTOU(CPROC)    " make it case unsensetive "
             Call UCTOH(CPROC,PAR(N+1),4,4)
             Do j=1,NL
                if CPROC==CLOC(j) { IPAR(N+1)=J; Nst+=1; }
             enddo
             If (Cproc=='*' | Cproc=='ALL') Isel=1
          enddo
       ENDIF
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
       CHECK ISTAK==0  " works only on KINE particles, not on STAK "
       Check Nst>0     " only if special tracing was requested
       Nsave  = 0
       Istor  = 0
       z0     = za
       r0     = ra
       za     = ABS(VECT(3))
       ra     = VMOD(VECT,2)
       If (It0!=ITRA) then
         It0  = ITRA
         z0   = za
         r0   = ra
         Iadr = 0
       endif
       if (Iv0!=Ivert) then
         Iv0  = Ivert
         Ntbeam=Q(LgVERT(JVER,IVERT)+5)
       endif

* Check R,Z,E0 and particle Code
       DO N=1,NUSE,5
          Imeca=IPAR(N+1)
          check Imeca< 10
          Check r0   < PAR(N+2)
          Check z0   < PAR(N+3)
          Check GETOT>=PAR(N+4)
          Ic         = PAR(N+5)
          If (Ic>=10000 & NtBeam>0) Next
          Ipa1       = Mod(Ic/100,100)
          If (Ipa1>0 & Ipart<Ipa1)  Next 
          Ipa2       = Mod(Ic,100)
          If (Ipa2>0 & Ipart>Ipa2)  Next 

*        request to record disapearance of particles ? 
          if (Imeca==1 & Istop>0)     { Nsave=NGKINE; Istor=1; }
*        request to record crossing coordinates and particle is coming out ?
          if (Imeca==2 & (ra>=PAR(N+2)|za>=PAR(N+3))) Istor=1;
       ENDDO
*
       if (Istor>0) then
          Vsave={3,6,0,0,0,0}
          If (Iadr==0) Call GSKINU(ITRA,3,Vsave,Iadr)
          if (Iadr<=0) <w> ITRA
             (' AGUSECOND ERROR: can not save parameters of the track',i8)
          call UCOPY (VECT,Vsave,3)
          call VSCALE(VECT(4),Vect(7),Vsave(4),3)
          Call GSKINU(ITRA,6,Vsave,Iadr)
       endif
       GOTO :save:

* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

       Entry  AgSecond
       CHECK ISTAK==0       " works only on KINE particles, not on STAK "
       Nsave  = 0
       za     = ABS(VECT(3))
       ra     = VMOD(VECT,2)

* Check Mechanism, R,Z,E0 and Ei
:Mech: DO N=1,NUSE,5
          Imeca=IPAR(N+1)
          check Imeca> 10
          Check ra   < PAR(N+2)
          Check za   < PAR(N+3)
          Check GETOT>=PAR(N+4)
          DO I=1,NGKINE
             IF (GKIN(4,I)<PAR(N+5)) Next :mech:
          enddo
*         requested interaction mecanism has happend ?      
          DO I=max(1,NMEC-1),NMEC
             Check (Imeca==NAMEC(LMEC(I)) | Isel>0)
             Prin5  NGKINE,(VECT(J),J=1,3),GETOT,(NAMEC(LMEC(J)),J=1,NMEC)
             (' AgUSECOND: SAVED',I3,' products at',4F10.3,' of',20(1X,A4))
             Nsave = NGKINE
             break :Mech:
          enddo
       enddo

:save: DO J = 1,Nsave
          IFLGK(J) = 1
       ENDDO
       END


