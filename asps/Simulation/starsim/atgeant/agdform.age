*
* $Id: agdform.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
*
* $Name:  $
*
#include <atlsim/config.h>
*************************************************************************
        Subroutine   A g D F O R M (Names,map,LL1,LL,Cformo,Cforma)
*                    encode bank format for zebra                       *
*   Both new (with 2 system words) and old (only users words) formats   *
*   PN,29-06-96: Make Cform different from Cformo due to AIX problem    *
*   PN,13-03-98: Both fixed length and tail stile formats are produced  *
*************************************************************************
Implicit      NONE
Integer       LL1,LL,map(2,LL1),i,j,k,L,N,NN,Ls
Character     Names(LL1)*(*),Cformo*80,Cforma*80,Cform*80,cf*8,T*1,S*1
Logical       NoTail/.true./
*
*                   count the total mapped bank length
Cformo='-F'; n=0; do i=1,LL1
{  k=1;  if (map(1,i)>0 & map(2,i)>0) k=map(1,i)*map(2,i);  n+=k; }

*          for 'old' format n should be the same as LL, the rest is a header
if  n==LL { T=' '; nn=0; }   else if  n+2=LL   { T='F'; nn=2; }
else      { print *,' AgDFORM error detected: N,L=',n,LL,LL1;
            do i=1,LL1 { print *,' i,map =',i,map(1,i),map(2,i),' ',names(i) }
            Return
          }
*
Cform='/';  L=1;
do i=1,LL1+1
{  If i<=LL1
   {  k=1;  if (map(1,i)>0 & map(2,i)>0) k=map(1,i)*map(2,i);
      S=Names(i); If (S!='I' & S!='H') S='F';  If S==T { nn+=k; Next; }
   }
   if T!=' '                   " write previous format element "
   {  L+=1;  write(cf,'(i8)') nn;  Ls=L+1;
      If L>70 { print *,' AgDFORM error: format too long for ',names; break;}
      do j=1,8 { if Cf(j:j)!=' ' { L+=1; Cform(L:L)=Cf(j:j) } }
                                   L+=1; Cform(L:L)=T;
   }  nn=k; T=S;
}
*
   if NoTail & Ls>3 { cformo=cform; cform(Ls:)='-'//T; cforma=cform(3:Ls+1) }
   else             { cforma=cform; cform(Ls:)='-'//T; cformo=cform(3:Ls+1) }
   " print *,' cformo,Ls = ',cformo(1:20),Ls "
*
end


