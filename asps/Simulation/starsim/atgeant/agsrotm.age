*
* $Id: agsrotm.age,v 1.1.1.1 2004/01/12 23:49:38 potekhin Exp $
*
* $Name:  $
*
* ---------------------------------------------------------
#include <atlsim/config.h>
************************************************************************
*                                                                      *
                    Subroutine   A g S R O T M
*                                                                      *
* Description:  Given the rotation parameters returns matrix number    *
  Replace [;#,#=>#;] with [;rot(#3)=%#1; IF(abs(rot(#3)-#2)>eps) k+=1; ]
************************************************************************
#include "commons/typing.inc"
#include "commons/agecom.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcunit.inc"
  Real Rrot,Rot(6),Rota(6),eps/1.e-5/
  Integer k,Im,i,Nlink,JTM,ii
  rrot(ii)=rot(mod(2*%OrtI+ii-1,6)+1)
*
  k=0;  %Irot=0;
  Thetax+%Alfay,90 => 1;   Thetay+%Alfax,90 => 3;   Thetaz+%Alfax+%Alfay,0 => 5;
  Phix + %Alfaz, 0 => 2;   Phiy + %Alfaz,90 => 4;   Phiz                ,0 => 6;
        " correct for phi uncertainty "  If  %Alfax#0  { %Phiz=90; rot(6)=90; }
  check  k>0 | %Orti>0
  %Irot=1;   Do i=1,6 { Rota(i)=RRot(i) }
  IF JROTM>0    " find an old matrix or the first free slot (or the end) "
  {  Nlink=IQ(JROTM-2);  :matrix: DO  Im=1,Nlink+1
     {  %Irot=Im;  JTM=LQ(JROTM-Im);   IF (JTM<=0 | Im>Nlink)  Break
        Do i=1,6 { If (Rota(i)#Q(JTM+10+i)) Next :Matrix:; };  Return
  }  }
        " Free slot for a new rotation matrix"
  Call GSROTM(%IRot,Rota(1),Rota(2),Rota(3),Rota(4),Rota(5),Rota(6))
  prin1 (Rota(i),i=1,6); (' NEW ROTM theta,phi=',3(F8.1,F6.1))
  END



