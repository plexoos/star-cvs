*
* $Id: agsrotm.age,v 1.5 2015/12/16 19:59:28 jwebb Exp $
*
* $Name:  $
*
* ---------------------------------------------------------
#include <atlsim/config.h>
************************************************************************
*                                                                      *
                    Subroutine   A g S R O T M
*                                                                      *
* Description:  Given the rotation parameters returns matrix number    *
************************************************************************
#include "commons/typing.inc"
#include "commons/agecom.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcunit.inc"
  Real Rot(6),Rota(6),eps/1.e-5/,uni(6)/90,0,90,90,0,0/
  Integer k,Im,i,Nlink,JTM,ii
  Integer ilMod,ilTit
* Regularize phi angles.  Could/should do for theta as well...
  IF(%phix<  0) %phix = %phix + 360
  IF(%phix>360) %phix = %phix - 360
  IF(%phiy<  0) %phiy = %phiy + 360
  IF(%phiy>360) %phiy = %phiy - 360
  IF(%phiz<  0) %phiz = %phiz + 360
  IF(%phiz>360) %phiz = %phiz - 360
*
  %Irot=0; k=0; 
  call ucopy(%Thetax,rot ,6);
  call ucopy(%Thetax,rota,6);
  do i=1,6 { if(abs(rot(i)-uni(i))>1e-5) k=1;}
  if (%alphaN .ne.0) { k+=2; call AGROTS(%alphaK,%alphaL,%alphaN,rota);}
  call ucopy(rota,rot,6);
  if (k.eq.0) return;
  %Irot=1;  
  IF JROTM>0    " find an old matrix or the first free slot (or the end) "
  {  Nlink=IQ(JROTM-2);
:matrix: DO  Im=1,Nlink+1
     {  %Irot=Im;  JTM=LQ(JROTM-Im);   IF (JTM<=0 | Im>Nlink)  Break
        Do i=1,6 { If (Rota(i)#Q(JTM+10+i)) Next :Matrix:; };  Return
  }  }
        " Free slot for a new rotation matrix"
  Call GSROTM(%IRot,Rota(1),Rota(2),Rota(3),Rota(4),Rota(5),Rota(6))
  prin1 (Rota(i),i=1,6); (' NEW ROTM theta,phi=',3(F8.1,F6.1))
  END



