*
* $Id: aghitget.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
* $Log: aghitget.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:37  potekhin
*
* Revision 1.2  2002/04/22 01:27:56  nevski
* use centers as default coordinates
*
* Revision 1.1  2001/02/27 10:14:31  nevski
*  first working release
*
*
*************************************************************************
      Function   AGHITget (mtra,xxx)
*                                                                       *
* Description: converts next hit into generic hit type, returns Ok=0    *
*************************************************************************
#include "commons/typing.inc"
#include "geant321/gconst.inc"
#include "atlsim/genhit.inc"
#include "atlsim/gentit.inc"
*
   Integer   MTRA,AGHITget,AgFDIG0,AgFDIG1,jtra,iw,ih,ia,i,k,ish,npar,natt
   real      VMOD,xxx(4),ccc(3),par(50),att(10),cl(6),ch(6)

*  id>0 - positive hit id,  iw=ok - active status

   if mtra<=0 { * following detector elements:
                If (id==0)  iw=AgFDIG0 (Cset,Cdet)
                id+=1;      iw=AgFDIG1 (ih,jtra,numbv,hits)
                If (iw!=0)  id=0
              }
   else       { * following a track
                If (MTRA=1) id=0; ih=1
                call AgFDIGI (Cset,Cdet,NVL,jtra,numbv,hits,id,ia)
                iw=0;  If (id==0) iw=1
              }
*
   AGHITget=iw;     check iw==0;   trac=abs(jtra);
   do k=1,Nmh { if (iadr(k)>0) QQ(iadr(k))=hits(k) }

   if  (abs(ih)==1) then
       call Agfpath(numbv)
       if (xD2M==999 & iflg(22)>0) then
*   k=iflg(j>=18) returns position of radi,rrad,phi,theta,eta in hits:
          call AGFIPAR(ish,npar,natt,par,att,cl,ch)
          if (iflg(18)==0) radi =(cl(4)+ch(4))/2
          if (iflg(20)==0) phi  =(cl(5)+ch(5))/2
          if (iflg(21)==0) theta=(cl(6)+ch(6))/2
          xhloc(1)=radi*cos(phi*DegRad)
          xhloc(2)=radi*sin(phi*DegRad)
          xhglb(3)=radi*sinh(eta)
       endif
   endif

*        overwrite global coordinates with local if they are not measured
   if ( xD2M != 0)  call GDTOM(xhloc,xxx,1)
   if   pD2M != 0
   {   Call VSCALE(chloc,1./VMOD(chloc,3),chloc,3); call GDTOM(chloc,ccc,2) }

   if ( iE>0 )      Elos=QQ(iE)
   if ( iflg(iPT)<=0 & iflg(iLP)>0) pmomg(4)=10.**Lpto
   if ( iflg(iLP)<=0 & iflg(iPT)>0) Lpto=alog10(pmomg(4))
   do i=1,3
   {  if (iflg(jX+i-1)<=0 & xD2M>0) xhglb(i)=(xxx(i))
      if (iflg(jP+i-1)<=0 & pD2M>0) pmomg(i)=(ccc(i)*pmomg(4))
   }
   xxx(4)=trac
   end

