*
* $Id: agsbegm.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
* $Name:  $
* $Log: agsbegm.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:37  potekhin
*
* Revision 1.4  2003/06/11 08:05:46  nevski
* call within the same module return the first IPR flag
*
* Revision 1.3  2001/06/13 23:43:46  nevski
* add detm.rz presence warning
*
* Revision 1.2  2001/03/01 19:55:38  nevski
* config file becomes atlsim specific
*
* Revision 1.1  2001/02/27 10:14:33  nevski
*  first working release
*
*
#include <atlsim/config.h>
************************************************************************
*                                                                      *
            Subroutine   A g S B E G M (Module,IPR)
*                                                                      *
*  Description: open a module execution part and control execution     *
*  Print flag is set to the production of both module and stage print  *
*  In a standalone mode all geomtry structures are dropped             *
*  Modifications:                                                      *
*  13/05/97 PN: default FILL (att6) is 0 to cope with 97a black edges  *
*  10.01.98 PN: detm.rz has to be made 'old format' for built in dzdoc *
************************************************************************
#include "commons/typing.inc"
#include "commons/agecom.inc"
#include "commons/quest.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcunit.inc"
#include "geant321/gcflag.inc"
#include "atlsim/agcdocl.inc"
#include "slug/sclink.inc"
   Integer           AgPFLAG,LENOCC,MEMGETF,LOCF,n,m;  parameter (n=100)
   Character         Module*(*),Stage*4,Cmother*4,Cs*1,Chdir0*6/' '/,CWD*80
   Integer           IPR,i,Idet,Lrecl/0/,Istat/-1/,Itry,Lun/61/
   Character*8       CHTAG(2)/'Bank-ID','Bank-ID'/,CHDIR(n),omod
   Real              Xtime,XXtime
   Common /AgCMTIME/ Xtime,XXtime
   Integer           AgIPAW,IwTyp
   COMMON /AgCIPAW/  AgIPAW,IwTyp
   Logical           EXST,Opnd,First/.true./
   Integer           LRZDOC
   Common /AgCZDOC/  LRZDOC
#include "slug/stafunc.inc"
                               * * *
   IPR=%Iprin;    Check %Module != Module;
   omod=%Module;  %Module=Module;  Cs=Module(5:5);
   If Cs='G'      {Stage='GEOM'} else if Cs='D' {Stage='DIGI'}
   else if Cs='R' {Stage='RECO'} else if Cs='A' {Stage='ANAL'}
   else           {Stage='UNKN'}
   Cmother=' ';    If (JVOLUM>0) CALL UHTOC(IQ(JVOLUM+1),4,CMother,4);
   If Cs='G' { do i=1,5 { %attribute(i)=1; };  %attribute(6)=0 }
                               * * *
   Call AsbDETE (Module,Idet)
   %IdType=Idet;         %Iprin=AgPFLAG(Module,Stage);
   %IMFLd=LVMFLD(Idet);  %Ihist=LVHIST(Idet);  %IGrap=LVGRAP(idet);
   %Igeom=LVGEOM(Idet);  IF (Stage=='RECO')    %Igeom=LVRECO(Idet);
   IPR=%Iprin; Iprin=%Iprin;
*
   "Make a standalone clean up"
   If Cs='G' & Cmother=%Module(1:4) & %Standalone>0
   {  Call AGDROP('*'); If (Idebug>0) Iprin+=1; }
*
   "Make sure minimal GEANT structures are present for G stage "
   If (Cs=='G' ) Call Agstand
*
   prin1 %Module,%Igeom,%Iprin;
   (' Module ',a8,'  running for geometry',i5,'  print level=',i3);
  " try to reduce the amount of prints:" if (Iprin>0) Iprin=Iprin-1;
   if (%Iprin>1)  Call TIMEX(Xtime);
   If %IHIST>0
   {  CALL HCDIR('//PAWC',' ');   CALL HRDIR(n,CHDIR,m)
      Do I=1,m  { Check CHDIR(i)==Module(1:LENOCC(CHDIR(i)))
                  CALL HCDIR(CHDIR(i),' ');  Break;
   }            }

                              * * *
   ENTRY AGSBEGD

   If (LdArea(1)=0) call MZLINT(IxCONS,'AGCDOCL',LDarea,L1Doc,Lpar)
   CALL RZCDIR(CWD,'R')
   INQUIRE(FILE='detm.rz',OPENED=opnd)
   If LUN==61 & .not.opnd  " & LVGEOM(1)>=0 "
   {
     Istat=0; Lrecl=256;  %ChDir='RZDOC'
     INQUIRE(FILE='detm.rz',EXIST=EXST);
     If (EXST & IWTYP>=10)
     {
       If !EXST
       {  Call RZOPEN (Lun,%CHdir,'detm.rz','NX', Lrecl,Istat)
          Call RZMAKE (Lun,%CHdir,2,'HH',CHTAG,5000,'XO')
          call RZCLOS (%Chdir,' ')
       }
       Call RZOPEN (Lun,%ChDir, 'detm.rz','UX',Lrecl,Istat);
       Call RZLOGL (Lun,-3);
       Do Itry=1,2
       {  Call RZFILE(Lun,%ChDir,'UDX'); if (Iquest(1)==0) Break
          Call Rzfree('RZFILE');         Call RZEND(%Chdir)
       }
       If Istat!=0     {<w>; (' detm.rz absent - no documentation available');}
       If Iquest(1)!=0 {<w>Iquest(1); (' problem opening detm.rz IQUEST=',i6);}
     }
     ELSE
     { LUN = MEMGETF(Lrecl*5000+1000)-LOCF(IQ)+1; IQ(LUN)=LRecl
       Call RZMAKE (IQ(LUN),%CHdir,2,'HH',CHTAG,5000,'MO');
       LRZDOC=LOCF(IQ(LUN));
       IF (EXST & IWTYP>0) <w>; (' presence of detm.rz may be dangerous ')
     }
   }
*
   If (Istat==0)
   {
       CALL RZCDIR('//'//%ChDIR,' ')
       Call RZPURG(1)
       If Iquest(1)!=0
       {<w>Iquest(1); (' problem with documentation, IQUEST=',i6); Istat=99; }

   }
   call RZCDIR(CWD,' ')
   If (iquest(1)!=0 | CWD=='//RZDOC') Call ARZUPDA
   If (IDebug>2) Call ZVERIF(0,0,' module started ')
*
* from pawrop: bug in RZOPEN with C I/O, TOPDIR is not returned correctly
*     IF (IOPTC!=0 & LUN <10) WRITE(TOPDIR,'(3HLUN,i1)') LUN
*     IF (IOPTC!=0 & LUN>=10) WRITE(TOPDIR,'(3HLUN,i2)') LUN
*
   END


