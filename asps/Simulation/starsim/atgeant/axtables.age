* $Id: axtables.age,v 1.1.1.1 2004/01/12 23:49:38 potekhin Exp $
* $Log: axtables.age,v $
* Revision 1.1.1.1  2004/01/12 23:49:38  potekhin
*
* Revision 1.3  2001/10/28 14:57:56  nevski
* do not convert directories in lowcase
*
* Revision 1.2  2001/08/06 17:30:46  nevski
* bug fix in structures command
*
* Revision 1.1  2001/02/27 10:14:43  nevski
*  first working release
*
***************************************************************************
*                                                                         *
            Subroutine   A X T A B L E S (Source,Destin)
*                                                                         *
* Description:           TABLES command processor                         *
*     Given a path, dump the whole structure below into DUI directories   *
* Input:                                                                  *
* Source - request a la UNIX: sys/bank (a bit cumbersome for the moment): *
*         'standard' path form is [/DETM/]sys..., * at the end means 'all'*
*          RECB etc alternative form is /RECB/....bank@sys                *
*          where @sys means 'take documentation from sys'                 *
* Destin - DUI target directory
* Comments:
*     Only existing banks are dumped (alternative code is commented out)  *
* Attention: Current link is equivalenced to Lpar for protection          *
*            Documentations system should be initialised before           *
***************************************************************************
#include "commons/typing.inc"
#include "geant321/gcbank.inc"
#include "geant321/gcunit.inc"
#include "geant321/gcflag.inc"
#include "atlsim/agcdocl.inc"
  INTEGER       LENOCC,AGPFLAG,CsADDR,CsIJCL,address/0/,
                Iprin,I,J,L,K,M,N,Ia,Lc,Lp,Mj,
                Nun(15),LK(15),IL(15),Ist(15)
  Character     Table*10,Csys*4,Cbank*4,Cont*4,Cpath*80,Cdest*80,Cd*80,Cs*8,o*4
  Character*(*) Source,Destin
  Logical       opnd
  EQUIVALENCE   (L,Lpar)

   integer             ndtab,nctab
   character           cccc*1200,ccc*24,format*80
   common /agcstaftab/ ccc(500)
   common /agcstaffor/ ndtab,nctab,format
   equivalence         (cccc,ccc)
*
  entry  AGSTRUT (Source,Destin)   " obsolete "
  o=CHAR(0)
  INQUIRE(FILE='detm.rz',OPENED=opnd)
  if (.not.opnd) Call Agsbegm('DOCUM',Iprin)
  If (LdArea(1)=0) call MZLINT(IxCONS,'AGCDOCL',LDarea,L1Doc,Lpar)
  if (address==0)  address=CsADDR('TDM_MAP_TABLE')
  Iprin=AgPFLAG('DOCU','PRIN')

* reduce to the standard path and dest:
  Cpath=Source; if (Cpath(1:1)!='/')
  { If Lenocc(Source)==4 { Cpath='/DETM/'//Source(1:4)//'/*'; }
    else                 { Cpath='/DETM/'//Source;            }
  }
  Call CLTOU(Cpath);

  Cdest='/dui/Run'; if (Cpath(2:5)!='DETM') Cdest='/dui/Event';
  if (Lenocc(Destin)>0) Cdest=Destin;

* Csys - prefix for AgKeeps
  Lc=Lenocc(Cpath); n=Index(Cpath,'@');  Csys=' ';
  if (Cpath(1:6)=='/DETM/' & Lc>=10) Csys=Cpath(7:Lc)
  if (0<n&n<Lc)  { Csys=Cpath(n+1:Lc); Lc=n-1 }
  Mj=2; if (Lenocc(Csys)>0) Mj=0;
*
* Rebank path does not accept / or /_* at the end, truncate:
  m=Index(Cpath(1:Lc),'*'); Lp=Lc;
  if (m>0) Lp=min(Lp,m-1);  if (Cpath(Lp:Lp)='/') { Lp-=1; m=-1 }
  do i=1,Lp/5 { Nun(i)=1 }; Nun(Lp/5)=0;

:A: Call ReBANK(Cpath(:Lp),Nun,0,L,Ia)
    Call UHTOC(IQ(L-4),4,CBank,4)

  prin2  %L(Csys),Cpath(:lp),Cbank,lc,n,m,mj,lp
  (' AXTABLES decoded Csys,Cpath,Cbank=',3(1x,a),' lc,n,m,mj,lp=',6i8)
  if L<=0 { prin1 %L(Cpath);(' AXTABLES: Data source ',a,' not found'); Return}
*
J=1; Loop                                  " over existing banks only "
{  If L>0
   {  Call UHTOC(IQ(L-4),4,CBank,4);
      if     J==MJ  { Csys=Cbank; }
      elseif J> MJ & Csys!='DOCU'
      { Table=Csys(1:4)//'_'//Cbank; Call CUTOL(Table)
        cd=Cdest;  cs=Csys//'_sys'
        i=Lenocc(cd);  if cd=='.' { cd=cs; call CUTOL(cd); }
        if (cd(i-1:i)=='/.') cd=Cdest(:i-1)//cs
        Call AGKEEPs(%L(Csys)//'/'//Cbank,%L(Cd),1)

        if Lenocc(cccc)>0
        { K=1; if IQ(L-5)<0 { K=-IQ(L-5) } elseif Ndtab>0 { K=IQ(L-1)/Ndtab }
          if address!=0
          {  i=CsIJCL(address,8,%L(Cd)//o,%L(Table)//o,%L(cccc)//o,K,IQ(L+1))
             prin2 %L(Cd),%L(Table),%L(format),%L(cccc),i,k,(Q(L+i),i=1,3)
                 (' TDM_MAPing_TABLE:',4(1x,a),2i5,2x,3F8.1)
        } }
*PN: control
        Call UHTOC(IQ(L-4),4,Cont,4);  if Cont!=Cbank
        { prin0 Cbank;(' AXTABLES problem, bank ',a,' lost'); return }

        " specific bank requested " if (m==0 & Mj==0) Break;
      } Lk(j)=L;  Ist(j)=IQ(L);  IL(j)=0;
   }
*    now navigate in the structure - first through links, then to next bank
   if IQ(LK(j))!=Ist(j)  { prin2;(' AXTABLES problem, links are lost');Goto:A:}
   If IL(j)<IQ(LK(j)-2)  { IL(j)+=1; L=LQ(LK(j)-IL(j));  If (L >0) j+=1; }
   else   " brothers "   { If (j==1) Break; L=LQ(LK(j)); If (L<=0) j-=1; }
}
END

