*
* $Id: aggetdig.age,v 1.1.1.1 2004/01/12 23:49:37 potekhin Exp $
*
* $Name:  $
*
* --------------------------------------------------------
#include <atlsim/config.h>
**********************************************************************
*                                                                    *
                SUBROUTINE A g G E T D I G  (JD,JJ,NBV,DIGI)
*                                                                    *
*  Description: Common hit/digi unpacking for any AGI routine        *
*          JD is the link to SEJD bank, JJ is link to a hit/digi     *
**********************************************************************
 Replace [;#?;]   With   [; IF #1 {" Take next word " K=1; Nk+=1; } ]
#include "commons/typing.inc"
#include "geant321/gcbank.inc"
   integer            idigi
   Common   /AgCdigi/ idigi(15)
*
   INTEGER     JD,JJ,JDS,Nv,Nk,No,Nb,I,J,K,L,j1,j2,Idig,Ihitf,bin,mode,
               JBYT,NBV(15),NwuVol/3/,NwuHit/10/
   REAL        Org,Fct,Fmx,xx,D,DIGI(15)
   bin(xx)  =  IFIX((xx+org)*fct)
*
*                            get SJDU link and set common counters
     NK=jj+1;  K=1;  D=0.5;  Jds=LQ(JD-3);  Nv=IQ(JD+2);
*                            get unpacked branching volume numbers
     j1=Q(Jds+3);  j2=Q(Jds+5)-1;  i=0;
     Do j=j1,j2,NwuVol
     {  L=Jds+j;  Nb=Q(L+3);  Check Nb>0;
        I+=1;  K+Nb>33?;  NBV(i)=JBYT(IQ(Nk),K,Nb)+1; K+=Nb;
     }
     Ihitf=Nv-I;  mode=0;  I=0;    " Ihitf - start of geant HIT field        "
     j1=Q(Jds+1);  j2=Q(Jds+3)-1;
     Do j=j1,j2,NwuHit             "         unpacked digits                 "
     {" No - requested Nbit (if not MAGIC), Nb - allocated (always positive) "
        L=Jds+j;  No=Q(L+3); Org=Q(L+6); Fct=Q(L+7); Fmx=Q(L+5); Nb=Q(L+8);
        If I==Ihitf               {" geant HIT field "  K>1 ?;  D=0;    }
        If -32<=No&No<=0 & mode=0 {" comulative part "  K>1 ?;  Mode=1; }
        IF 0<Nb&Nb<32  { K+Nb>33 ?;  IDIG=JBYT(IQ(Nk),K,Nb);  K+=Nb; }
        else           { K>1     ?;  IDIG=IQ(Nk);             Nk+=1; }
        I+=1;      DIGI(i)=min((IDIG+D)/fct-Org,fmx);  idigi(i)=IDIG
        If I==1
        { while LQ(Jds)>0 & bin(Q(LQ(Jds)+8))<=IDIG { Jds=LQ(Jds) }}
     }
   END


