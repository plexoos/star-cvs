* $Id: mcmosc.F,v 1.1.1.1 2004/01/15 00:08:49 potekhin Exp $
* $Name:  $
#include <commons/config.h>
      SUBROUTINE MCMOSC(NKEY,ATAR,ITINC,EOPRS,EINCS,NOSLO,ITSLO,ESLO,
     + ALPSLO,BETSLO,GAMSLO,EFAS,WTFAS,ALPFAS,BETFAS,GAMFAS,RMFAS,NOFAS,
     + EXFAS,REFAS,WHY)
C
C     CALCULATION OF MOMENTUM SPECTRA
C     FOR SCALED-UP INCIDENT PARTICLE ENERGIES
C
      REAL*8 AMASNO, EINC, ARRAY, BRRAY, BARB, EINCT, NUMBEA, TARMAT
      REAL*8 EOPR,TARMAS,FUG,AMORNT,AMRNST,ESTART, ERNPRT,ERNT,AMASIN,
     +EMASS,PMAX,AMOINC,CHEINC,RESMAS,ETOT,ETOTPR, AMOIPR,BETA,BETAPR,
     +GAMMA,GAMPR,ECM,RECAL1,RECAL2,RECAL3,ECMPR, CUTL,CUTCM,ECMOKE,
     +PCMO,YIELD,AVERE,BTOT,BTOTPR,ZKZ,BPRLAB,ECMKE, PLICIT,EXCIT,PX,
     +PY,PZ,PXS,PYS,PZS,P,CHECK,WEIGHT,PCM,EPRCM, PTEMP,WCM,W,PPR,
     +PSTOR1,PSTOR2,B,ESUM,BLANK,BLANK1,AMORN, ERN,ERNPR,AESUM,ESTAR,
     +ESTARP,TOTAL,ANSWER,A1,A2,A3,A4,A5,A11,B11 ,C11,ANSPLU,ANSMIN,A6,
     +A7,D1,STO,STOO,A8,ESUMPR,BTOLAB,ARRMON
C
#include "geant321/camass.inc"
      DIMENSION PART(5),EMASS(5),CTOFM(5),ARRAY(500)
      DIMENSION BRRAY(500),WEIGHT(65),CUTL(5),CUTCM(5),RESMAS(5),
     +    AVERE(10),YIELD(10),ECMKE(5),PLICIT(5),EPRCM(65),FUG(5)
C
      DIMENSION ITSLO(*),ESLO(*),ALPSLO(*),BETSLO(*),GAMSLO(*),
     + EFAS(*),WTFAS(*),ALPFAS(*),BETFAS(*),GAMFAS(*)
C
      DIMENSION EINCT(10), NUMBEA(10)
      LOGICAL INIT
C
      EQUIVALENCE(CUTCM(1),RESMAS(1),CUTL(1),EMASS(1))
C
      DATA INIT/.TRUE./
      SAVE
C
   10 IF(INIT) THEN
   20    COUNT = 0.
         TARMAT=0.
         COUNT1 = 0.
         COUNT2=0.
         COUNT3=0.
         COUNT4 = 0.
         COUNT5 = 0.
         NTTME=0
         AMORNT = 0.0
         AMRNST = 0.0
         ESTART=0.
         ZKZ=0.
         NMLTEO = 0
         ERNPRT = 0.0
         ERNT = 0.0
         CHECK7=0.
         CHECK8=0.
         DO 30 III=1,500
            BRRAY(III)=0.
            ARRAY(III)=0.
   30    CONTINUE
         DO 40 IHK = 1,10
            EINCT(IHK)=0.
            NUMBEA(IHK)=0.
            YIELD(IHK) = 0.0
C     WILL CONTAIN AVERAGE MULTIPLICITIES WHEN DIVIDED BY # OF COLLISION
            AVERE(IHK) = 0.0
   40    CONTINUE
C     WILL CONTAIN AVERAGE ENERGY WHEN DIVIDED BY # OF COLLISIONS
         BTOT = 0.0
         BTOTPR=0.0
C       SETTING MASSES FOR THE 5 POSSIBLE EMERGENT PARTICLES
         RESMAS(1) = XMASS(0)*1000.
         RESMAS(2) = XMASS(1)*1000.
         RESMAS(3)= XMASS(2)*1000.
         RESMAS(4)= XMASS(2)*1000.
         RESMAS(5) = XMASS(3)*1000.
         FUG(3)=1.0D0
         FUG(4)=1.0D0
         FUG(5)=1.0D0
         INIT = .FALSE.
      ENDIF
      GO TO (50 ,70 ,50 ,440),NKEY
   50 RETURN
C     DEFINES INCIDENT PARTICLE
   60 EINCT(IPIN)=EINCT(IPIN)-EINC
      EINCT(IPIN+5)=EINCT(IPIN+5)-EOPR
      NUMBEA(IPIN)=NUMBEA(IPIN)-1.D0
      NUMBEA(IPIN+5)=NUMBEA(IPIN+5)-1.D0
      TARMAT = TARMAT-TARMAS
      RETURN
   70 PIN = ITINC +1
      ZKZ=ZKZ+1.D0
      IPIN= PIN
      NOFAS=0
      WHY=0.
      INTYPE=ITINC+1
      GOTO(80  ,90  ,100 ,100 ,100 ),INTYPE
   80 FUG(1)=1.00D0
      FUG(2)=1.00D0
      GOTO 110
   90 FUG(1)=1.00D0
      FUG(2)=1.00D0
      GOTO 110
  100 FUG(1)=1.0
      FUG(2)=1.0
  110 CONTINUE
      AMASNO= ATAR
      TARMAS= 931.49432D0*AMASNO
      TARMAT=TARMAT+TARMAS
      AMASIN=RESMAS(IPIN)
      EOPR=EOPRS
      EINC=EINCS
      CHEINC = 1.D0
      IF(IPIN.GT.2) CHEINC = 0.0
      EINCT(IPIN)=EINCT(IPIN)+EINC
      NUMBEA(IPIN)=NUMBEA(IPIN)+1.D0
      EINCT(IPIN+5)=EINCT(IPIN+5)+EOPR
      NUMBEA(IPIN+5)=NUMBEA(IPIN+5)+1.D0
      DO 120  I = 1,5
         ECMKE(I) = 0.0
C     TEMPORARY STORAGE FOR UNSCALED K.E. IN C.M. USED IN WEIGHT CALCULA
         PLICIT(I) = 0.0
  120 CONTINUE
C     TEMPORARY STORAGE FOR UNSCALED MULTIPLICITIES USED IN WEIGHT CALCU
      NWDS = NOSLO*8+1
      DO 130 III=2,NWDS,8
         M8=(III+6)/8
         ARRAY(III)=ITSLO(M8)+1
         ARRAY(III+1)=ESLO(M8)
         ARRAY(III+2)=ALPSLO(M8)
         ARRAY(III+3)=BETSLO(M8)
         ARRAY(III+4)=GAMSLO(M8)
  130 CONTINUE
C     TOTAL ENERGY OF INCIDENT PARTICLE  LAB
      ETOT=EINC+AMASIN
C     TOTAL ENERGY OF SCALED INCIDENT PARTICLE  LAB
      ETOTPR=EOPR+AMASIN
C     MOMENTUM OF INCIDENT PARTICLE  LAB
      AMOINC =DSQRT (EINC*(EINC + 2.0D0*AMASIN))
C     MOMENTUM OF SCALED INCIDENT PARTICLE  LAB
      AMOIPR=DSQRT(ETOTPR*ETOTPR-AMASIN*AMASIN)
C     BETA FOR INCIDENT PARTICLE AND TARGET
      BETA=AMOINC/(ETOT+TARMAS)
C     BETA FOR SCALED INCIDENT PARTICLE AND TARGET
      BETAPR=AMOIPR/(ETOTPR+TARMAS)
C     GAMMA FOR INCIDENT PARTICLE
      GAMMA=1.D0/DSQRT(1.D0-BETA*BETA)
C     GAMMA FOR SCALED INCIDENT PARTICLE
      GAMPR=1.D0/DSQRT(1.D0-BETAPR*BETAPR)
C     TOTAL ENERGY OF INCIDENT PARTICLE IN C.M.
      ECM=GAMMA*(ETOT-BETA*AMOINC)
      RECAL1=ECM
C     TOTAL ENERGY OF SCALED INCIDENT PARTICLE IN C.M.
      ECMPR=GAMPR*(ETOTPR-BETAPR*AMOIPR)
C     TOTAL CUTOFF ENERGY IN LAB SYSTEM FOR THE FIVE PARTICLES
C     KINETIC ENERGY OF INCIDENT PARTICLE IN C.M. SYSTEM
      ECMOKE=ECM-RESMAS(IPIN)
      RECAL2=ECMOKE
C     MOMENTUM OF INCIDENT PARTICLE IN C.M. SYSTEM
      PCMO=DSQRT(ECM*ECM-RESMAS(IPIN)*RESMAS(IPIN))
      RECAL3=PCMO
C     COUNTER FOR NUMBER OF COLLISIONS
  140 ECM=RECAL1
      ECMOKE=RECAL2
      PCMO=RECAL3
      DO 150  III = 2,NWDS
  150 BRRAY(III) = ARRAY(III)
  160 EXCIT = EINC + RESMAS(IPIN)*(1.D0-CHEINC)
      PX = 0.
      PY = 0.
      PZ = AMOINC
      PXS = 0.
      PYS = 0.
      PZS = AMOIPR
C     SETUP OF INITIAL LAB MOMENTUM
      DO 190   III = 2,NWDS,8
         KTYPE=ARRAY(III)
C     DEFINES TYPE OF ESCAPING PARTICLE
         M8 = (III+6)/8
         ARRAY(III+1) = ARRAY(III+1)+RESMAS(KTYPE)
C     TOTAL ENERGY OF ESCAPING PARTICLE
         AVERE(KTYPE) = ARRAY(III+1)+AVERE(KTYPE)-CUTL(KTYPE)
C     ENERGY CONSERVATION CHECK OF UNSCALED SYSTEM IN LAB
         YIELD(KTYPE)=YIELD(KTYPE)+1.D0
C     SUMMING UP PARTICLES  FOR MULTIPLICITY
         PLICIT(KTYPE) = PLICIT(KTYPE) + 1.0D0
C     MULTIPLICITY OF ESCAPING PARTICLES FOR THIS COLLISION
         P=(ARRAY(III+1)*ARRAY(III+1)-RESMAS(KTYPE)*RESMAS(KTYPE))**.5
C     MOMENTUM IN LAB OF ESCAPING UNSCALED PARTICLE
         PX=PX+P*ARRAY(III+2)
         PY=PY+P*ARRAY(III+3)
         PZ=PZ-P*ARRAY(III+4)
C     THREE MOMENTUM COMPONENTS IN LAB OF ESCAPING UNSCALED PARTICLE
         CHECK = 0.
         IF(KTYPE.LT.3) CHECK=1.D0
         EXCIT=EXCIT-ARRAY(III+1)+RESMAS(KTYPE)*CHECK
C      PRELIMINARY CALCULATION TO OBTAIN EXCITATION ENERGY
  170    WEIGHT(M8)=GAMMA*(ARRAY(III+1)-ARRAY(III+4)*P*BETA)
         IF(WEIGHT(M8).GT.ECM) COUNT = COUNT + 1.
C     WILL BE USED IN WEIGHT CALCULATION.
C     NOW CONTAINS T.E. IN CM OF UNSCALED ESCAPING PARTICLE
         IF(WEIGHT(M8).GT.ECM) ECMOKE=WEIGHT(M8)-RESMAS(IPIN)
         IF(WEIGHT(M8).GT.ECM) PCMO=DSQRT(WEIGHT(M8)**2-RESMAS(IPIN)**
     +   2)
         IF(WEIGHT(M8).GT.ECM) ECM=WEIGHT(M8)
         ECMKE(KTYPE)=ECMKE(KTYPE)+WEIGHT(M8)-RESMAS(KTYPE)
C     CM KE OF UNSCALED PARTICLES....USED IN CALCULATING B
         PCM=(WEIGHT(M8)*WEIGHT(M8)-RESMAS(KTYPE)*RESMAS(KTYPE))**.5
C     MOMENTUM IN CM OF UNSCALED ESCAPING PARTICLE
         EPRCM(M8)=((WEIGHT(M8)-CUTCM(KTYPE))/(ECM-CUTCM(IPIN )))**
     +   (1.D0/FUG(KTYPE))*(ECMPR-CUTCM(IPIN ))+CUTCM(KTYPE)
C     SCALED UP TOTAL ENERGY OF ESCAPING PARTICLE IN CM
         PTEMP=DSQRT(EPRCM(M8)*EPRCM(M8)-RESMAS(KTYPE)*RESMAS(KTYPE))
C     MOMENTUM OF SCALED UP PARTICLE IN CM
         W=1.D0-(P/PTEMP)**2+((P/PTEMP)**2)*ARRAY(III+4)*ARRAY(III+4)
         IF(W.LE.0.) CHECK8=CHECK8+1.
         IF(W.LE.0.) W=0.
         IF(W.LE.0.) GO TO 180
         W=DSQRT(W)
C     POLAR ANGLE IN CM...COMES FROM CONSERVATION OF TRANSVERSE MOMENTUM
         WCM=GAMMA*(P*ARRAY(III+4)-BETA*ARRAY(III+1))/PCM
C     THE SIGN OF W IS CHECKED NEXT
C      UNSCALED CM POLAR ANGLE
         IF(WCM.LT.0.) W=-W
  180    CONTINUE
         ARRAY(III+1)=GAMPR*(EPRCM(M8)+BETAPR*PTEMP*W)
C     CONTAINS TOTAL SCALED ENERGY IN LAB
         PPR=(ARRAY(III+1)*ARRAY(III+1)-RESMAS(KTYPE)*RESMAS(KTYPE))**
     +   .5
C     MOMENTUM OF SCALED PARTICLE IN LAB
         ARRAY(III+4)=GAMPR*(PTEMP*W+BETAPR*EPRCM(M8))/PPR
C     CORRECTED POLAR ANGLE IN LAB TO CONSERVE TRANSVERSE MOMENTUM
         ARRAY(III+1)=ARRAY(III+1)-RESMAS(KTYPE)
C     K.E. IN LAB OF SCALED PARTICLE
         PSTOR1=DSQRT(1.D0-ARRAY(III+4)*ARRAY(III+4))* DCOS(DATAN(ARRAY
     +   (III+3)/ARRAY(III+2)))
         PSTOR1=DABS(PSTOR1)
         PSTOR2=DSQRT(1.D0-ARRAY(III+4)*ARRAY(III+4))* DSIN(DATAN(ARRAY
     +   (III+3)/ARRAY(III+2)))
         PSTOR2=DABS(PSTOR2)
         IF(ARRAY(III+2).LT.0.) PSTOR1=-PSTOR1
         IF(ARRAY(III+3).LT.0.) PSTOR2=-PSTOR2
C     SETTING UP MODIFIED PX,PY TO PRESERVE THE AZIMUTHAL ANGLE
         ARRAY(III+2)=PSTOR1
         ARRAY(III+3)=PSTOR2
C     RESTORING CORRECTED X AND Y COSINES
  190 CONTINUE
      B = ECMOKE + AMASIN*(1.D0-CHEINC)
      DO 200  IIV = 1,5
  200 B=B-ECMKE(IIV)+PLICIT(IIV)*(CUTCM(IIV)-RESMAS(IIV))
      BTOT = BTOT + B
      BLANK = 1.D0
      BLANK1 = 1.D0/(ECM-CHEINC*AMASIN-B)
      DO 210  J = 2,NWDS,8
         KTYPE = ARRAY(J)
         M9 = (J+6)/8
         IF(KTYPE.LE.2)WEIGHT(M9)=(WEIGHT(M9)-CUTCM(KTYPE))/ (EPRCM(M9)
     +   -CUTCM(KTYPE))
         IF(KTYPE.GT.2)WEIGHT(M9)=WEIGHT(M9)/EPRCM(M9)
  210 CONTINUE
      AMORN=TARMAS+CHEINC*AMASIN - PLICIT(1)*RESMAS(1)-PLICIT(2)*
     +      RESMAS(2) +(PLICIT(1)+PLICIT(2))*7.0D0-CHEINC*7.D0
C     MASS OF RESIDUAL NUCLEUS
      IF(AMORN.LE.0.)WHY=1.
C     WHY=1  UNSCALED RESIDUAL MASS.LE.0
      IF(AMORN.LE.0.) GO TO 220
      AMORNT = AMORNT + AMORN
      ERN=DSQRT(PX*PX+PY*PY+PZ*PZ+AMORN*AMORN)-AMORN
C     ENERGY OF RECOILING NUCLEUS (UNSCALED)
      ERNT=ERNT+ERN
C     SUMMING TOTAL RECOIL ENERGIES FOR ALL COLLISIONS UNSCALED
      ESTAR=EXCIT-ERN-(PLICIT(1)+PLICIT(2)-1.D0*CHEINC)*7.D0
      ESTART=ESTART+ESTAR
      IF(ESTAR.LT.0.) CHECK7=CHECK7+1.
      IF(ESTAR.LT.0.) GO TO 270
      GO TO 290
  220 NMLTEO=NMLTEO+1
      ZKZ = ZKZ - 1.D0
  230 BTOT = BTOT - B
      DO 240   III = 2,NWDS,8
         KTYPE = ARRAY(III)
         YIELD(KTYPE)=YIELD(KTYPE)-1.D0
         AVERE(KTYPE)=AVERE(KTYPE)-BRRAY(III+1)+(CUTL(KTYPE)- RESMAS(KT
     +   YPE))
  240 CONTINUE
      GO TO 60
  250 DO 260   III = 2,NWDS,8
         KTYPE = ARRAY(III)
         M8 = (III+6)/8
         YIELD(KTYPE)=YIELD(KTYPE)-1.D0
         AVERE(KTYPE)=AVERE(KTYPE)-BRRAY(III+1)+(CUTL(KTYPE)- RESMAS(KT
     +   YPE))
         YIELD(KTYPE+5) = YIELD(KTYPE+5) - WEIGHT(M8)
         AVERE(KTYPE+5)=AVERE(KTYPE+5)-ARRAY(III+1)*WEIGHT(M8)+ (CUTL(K
     +   TYPE)-RESMAS(KTYPE))*WEIGHT(M8)
  260 CONTINUE
      BTOT = BTOT-B
      ZKZ = ZKZ - 1.D0
      ERNT=ERNT-ERN
      ESTART=ESTART-ESTAR
      AMORNT=AMORNT-AMORN
      GO TO 60
  270 ERNT = ERNT - ERN
      ERN = ERN+ESTAR
      ESTART = ESTART-ESTAR
      ERNT=ERNT+ERN
      ESTAR=0.
      IF(ERN.LT.0.) COUNT5 = COUNT5 + 1.
      IF(ERN.LT.0.)WHY=2
C     WHY=2  ENERGY OF UNSCALED RECOILING NUCLEUS.LT.0 WHEN ESTAR.LT.0.
C                 ERN=ERN+ESTAR.......ERN.LT.0
      IF(ERN.GE.0.) GO TO 290
      ZKZ=ZKZ-1.D0
      AMORNT=AMORNT-AMORN
      BTOT=BTOT-B
      ERNT=ERNT-ERN
      DO 280   III=2,NWDS,8
         KTYPE=ARRAY(III)
         YIELD(KTYPE)=YIELD(KTYPE)-1.D0
         AVERE(KTYPE)=AVERE(KTYPE)-BRRAY(III+1)+(CUTL(KTYPE)- RESMAS(KT
     +   YPE))
  280 CONTINUE
      GO TO 60
  290 CONTINUE
C*****CALCULATIONS DEALING WITH SCALED UP NUCLEAR RECOIL AND BPR********
      A1=0.
      A2=0.
      A3=0.
      A4=0.
      A5=0.
      DO 300  III=2,NWDS,8
         M8=(III+6)/8
         KTYPE=ARRAY(III)
         P=((ARRAY(III+1)+RESMAS(KTYPE))**2-RESMAS(KTYPE)**2)**.5
         A1=P*ARRAY(III+2)*WEIGHT(M8)+A1
         A2=P*ARRAY(III+3)*WEIGHT(M8)+A2
         A3=P*ARRAY(III+4)*WEIGHT(M8)+A3
         A4=(ARRAY(III+1)+RESMAS(KTYPE))*WEIGHT(M8)+A4
         IF(KTYPE.GT.2.) GO TO 300
         A5=(7.D0-RESMAS(KTYPE))*WEIGHT(M8)+A5
  300 CONTINUE
      A11=A1*A1+A2*A2+A3*A3+A5*A5-A4*A4
      B11=2.D0*((TARMAS+(AMASIN-7.D0)*CHEINC)*A5-AMOIPR*A3+A4*(ETOTPR
     + +TARMAS-ESTAR))
      C11=AMOIPR*AMOIPR+(TARMAS+(AMASIN-7.D0)*CHEINC)**2
     + -(ETOTPR+TARMAS-ESTAR)**2
      IF(A11.EQ.0.) COUNT1=COUNT1 + 1.
      IF(A11.EQ.0.) GO TO 310
      ANSPLU=(-B11+DSQRT(B11**2-4.D0*A11*C11))/(2.D0*A11)
      ANSMIN=(-B11-DSQRT(B11**2-4.D0*A11*C11))/(2.D0*A11)
      GO TO 320
  310 ANSWER=-C11/B11
      IF(ANSWER.LE.0.) COUNT2=COUNT2+1.
      IF(ANSWER.LE.0.) WHY=3
C     SOLUTION TO ENERGY BALANCE EQUATION IS .LE. 0.
      IF(ANSWER.LE.0.) GO TO 350
      ANSMIN=ANSWER
      ANSPLU=ANSWER
C$$$$$PUT IN CHECK
  320 SCORE=0.
      CHECK=0.
      DO 340  I=1,2
         A1=0.
         A2=0.
         A3=0.
         A4=0.
         A5=0.
         ANSWER=ANSPLU
         IF(I.EQ.2) ANSWER=ANSMIN
         DO 330 III=2,NWDS,8
            M8=(III+6)/8
            KTYPE=ARRAY(III)
            P=((ARRAY(III+1)+RESMAS(KTYPE))**2-RESMAS(KTYPE)**2)**.5
            A6=ANSWER*WEIGHT(M8)
            A1=A1+P*ARRAY(III+2)*A6
            A2=A2+P*ARRAY(III+3)*A6
            A3=A3+P*ARRAY(III+4)*A6
            IF(KTYPE.LT.3) A4=A4+(7.D0-RESMAS(KTYPE))*A6
            A5 = A5 + (ARRAY(III+1)+RESMAS(KTYPE))*WEIGHT(M8)
  330    CONTINUE
         A7=A1*A1+A2*A2+(AMOIPR-A3)**2+(TARMAS+(AMASIN-7.D0)*CHEINC
     +   +A4)**2
         A7=DSQRT(A7)
         D1 = (ETOTPR + TARMAS - ESTAR - A7)/A5
         STO =DABS((ANSWER-D1)/ANSWER)
         IF(I.EQ.1) A8=A7
         IF(I.EQ.1) STOO = STO
         IF(STO.LE..00001) COUNT3 = COUNT3 + 1.
         IF(STO.LE..00001) CHECK=I
         IF(STO.LE..00001) SCORE=SCORE+1.
  340 CONTINUE
      IF(SCORE.EQ.0.) WHY=5
C     WHY=5  ENERGY EQUATION NOT SATISFIED
      IF(SCORE.NE.0.) GO TO 360
  350 ZKZ = ZKZ-1.D0
      NTTME=NTTME+1
      ERNT=ERNT-ERN
      ESTART=ESTART-ESTAR
      AMORNT=AMORNT-AMORN
      GO TO 230
  360 CONTINUE
      IF(SCORE.EQ.2.) GO TO 370
      IF(CHECK.EQ.1.D0) ANSWER = ANSPLU
      IF(ANSWER.LE.0.) COUNT2=COUNT2+1.
      IF(ANSWER.LE.0.) WHY=3
      IF(ANSWER.LT.0.) GO TO 350
      GO TO 390
  370 IF(ANSPLU.GT.0.AND.ANSMIN.GT.0.) GO TO 380
      IF(ANSPLU.GT.0.) ANSWER=ANSPLU
      IF(ANSMIN.GT.0.) ANSWER=ANSMIN
      GO TO 390
  380 IF(A8.LT.A7) ANSWER=ANSPLU
      IF(ANSWER.LE.0.) COUNT2=COUNT2+1.
      IF(ANSWER.LE.0.) WHY=3
      IF(ANSWER.LE.0.) GO TO 350
  390 D1=0.
      DO 410  III=2,NWDS,8
         KTYPE=ARRAY(III)
         M8=(III+6)/8
         WEIGHT(M8)=ANSWER*WEIGHT(M8)
         IF(KTYPE.GT.2) GO TO 400
         D1=D1+WEIGHT(M8)*RESMAS(KTYPE)-7.D0*WEIGHT(M8)
         P=((ARRAY(III+1)+RESMAS(KTYPE))**2-RESMAS(KTYPE)**2)**.5
  400    CONTINUE
         AVERE(KTYPE+5)=AVERE(KTYPE+5)+ARRAY(III+1)*WEIGHT(M8)- (CUTL(K
     +   TYPE)-RESMAS(KTYPE))*WEIGHT(M8)
C       CALCULATION FOR SCALED-UP ENERGY
         YIELD(KTYPE+5)=YIELD(KTYPE+5)+WEIGHT(M8)
C     CALCULATION FOR MULTIPLICITY OF SCALED-UP PARTICLES
         PXS=PXS+WEIGHT(M8)*P*ARRAY(III+2)
         PYS=PYS+WEIGHT(M8)*P*ARRAY(III+3)
         PZS=PZS-WEIGHT(M8)*P*ARRAY(III+4)
  410 CONTINUE
      BARB=TARMAS+(AMASIN-7.D0)*CHEINC-D1
      IF(BARB.LE.0.) COUNT4=COUNT4+1.
      IF(BARB.LE.0.)WHY=4.
C     WHY=4  SCALED UP RESIDUAL MASS LE.0
      IF(BARB.LE.0.) GO TO 250
      ERNPR=(PXS*PXS+PYS*PYS+PZS*PZS+(TARMAS+(AMASIN-7.D0)*CHEINC-D1)**2
     +)**.5-TARMAS-(AMASIN-7.D0)*CHEINC+D1
      ERNPRT=ERNPR+ERNPRT
      BTOTPR=BTOTPR+ECMPR-ANSWER/BLANK1-RESMAS(IPIN)*CHEINC
      AMRNST = AMRNST + (TARMAS+(AMASIN-7.D0)*CHEINC-D1)
      RMFAS=BARB
      REFAS=ERNPR
      EXFAS=ESTAR
      NOFAS=NOSLO
C*****END CALCULATIONS DEALING WITH SCALED UP NUCLEAR RECOIL AND BPR****
  420 CONTINUE
      DO 430 III=2,NWDS,8
         M8=(III+6)/8
         EFAS(M8)=ARRAY(III+1)
         ALPFAS(M8)=ARRAY(III+2)
         BETFAS(M8)=ARRAY(III+3)
         GAMFAS(M8)=ARRAY(III+4)
         WTFAS(M8)=WEIGHT(M8)
  430 CONTINUE
      RETURN
  440 DO 450   IHK=1,10
         NUMBEA(IHK)=NUMBEA(IHK)/ZKZ
         EINCT(IHK)=EINCT(IHK)/ZKZ
         YIELD(IHK)=YIELD(IHK)/ZKZ
         AVERE(IHK)=AVERE(IHK)/ZKZ
  450 CONTINUE
      ESTART = ESTART/ZKZ
      TARMAT=TARMAT/ZKZ
      BTOTPR=BTOTPR/ZKZ
      AMORNT = AMORNT/ZKZ
      AMRNST = AMRNST/ZKZ
      ERNT=ERNT/ZKZ
      ERNPRT=ERNPRT/ZKZ
      BTOT = BTOT/ZKZ
      ETOT=0.
      ETOTPR=0.
      DO 460  I=1,5
         ETOT=ETOT+EINCT(I)+RESMAS(I)*NUMBEA(I)
         ETOTPR=ETOTPR+EINCT(I+5)+RESMAS(I)*NUMBEA(I+5)
  460 CONTINUE
      ESUM = 0.0
      ESUMPR = 0.0
      DO 470   I = 1,5
         ESUM = ESUM + AVERE(I)
         ESUMPR = ESUMPR + AVERE(I+5)
  470 CONTINUE
      RETURN
      END
