#!/usr/bin/perl

# this snippet ensures only one copy running
# it locks itself...
use Fcntl ':flock';
use Carp;
open my $self, '<', $0 or die "Couldn't open self: $!";
flock $self, LOCK_EX | LOCK_NB or croak "This script is already running...";
# end snippet!


$LOGCMD = "rtsLog -d \"WARN\" -p 8004 -h \"172.16.0.1\" -c jevpHistoMother";
$LAUNCHCMD = "OnlTools/Jevp/launch JevpServerMain -production";


$jevp_pid = 0;

sub catch_zap {
    my $signame = shift;

   # my $pid = -2;
   # if($siqname eq "CHLD") {
   #	my $pid = waitpid(-1, WNOHANG);
   #	system("$LOGCMD \"GOT SIG $signame $pid\"");
   #	die();
   # }

    
    system("$LOGCMD \"GOT signal:  $signame.  Kill $jevp_pid\"");
    system("kill $jevp_pid");
    die();
}

chdir "/home/evpops/cvs";
$jevp_pid = 0;


$SIG{HUP} = \&catch_zap;
$SIG{INT} = \&catch_zap;
$SIG{QUIT} = \&catch_zap;
$SIG{BUS} = \&catch_zap;
$SIG{KILL} = \&catch_zap;
$SIG{SEGV} = \&catch_zap;
$SIG{PIPE} = \&catch_zap;
$SIG{TERM} = \&catch_zap;

#$SIG{CHLD} = \&catch_zap;

for(;;) {   # // Keep running Jevp
	$ret = fork();

	if($ret == 0) {
		#system("$LOGCMD \"launching Server\"");
                exec($LAUNCHCMD);
		system("$LOGCMD \"exec returned?\"");	
		exit(0);
	}
	else {
	     $jevp_pid = $ret;
	     system("$LOGCMD \"launched Server: pid=$jevp_pid\"");

	     do {
	     	$ret = waitpid(-1,0);
             }
	     while($ret != $jevp_pid);

	     system("$LOGCMD \"Server died, wait 10 sec and relaunch\"");

	     sleep(10);	    
        }
}
	

