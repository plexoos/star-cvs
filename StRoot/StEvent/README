-*- mode:outline -*-
This file is best viewed with x(emacs).
Time-stamp: <99/10/11 17:03:10 ullrich>

* Disclaimer
============
This file is meant for developer only. This is
not a documentation of the new StEvent.
Who ever works on StEvent should look here first.
Please document any technical issues here for other
developers.
This file will be replaces as soon as there's
documentation available.


* Latest News
=============
** Victor: mark pure references (pointers) with //$LINK


* Remarks
=========
These remarks are added in chronological order. Old remarks might
not be valid any more.

** In StSPtrVec
   erase() means also delete the object. Make sure this is the case.
   clean() means take it out of the list but do NOT delete it.

** All classes have constructors and destructors, copy constructors and
   assignement operators.
   Exception:
   if the class has only static data member, ie no pointers, than the
   default copy constructor and assignement operators are used. This is
   marked clearly in the header file. In this case both are commented out.

** StDedxPidTraits
   Meaning of dst_dedx::dedx[2] not clear. Method as an enum? What are these
   methods, how many?

** StTrackFitTraits
   implemented not as an abstract class as depicted in the current UML
   diagrams. All concrete classes would be identical. Makes no sense.
   pidHypothesis is a GeantId -> still return a StParticleDefinition*.
   (needs lookup: test gives 13 us/lookup on HP)

** StTrackDetectorInfo
   The numberOfPoints is taken from the table. This is necessary
   in case we do NOT store the hits on the DST. That's the only
   info we have then (except the topo map).
   As soon as one hit is added numberOfPoints reflects the 
   size of the internal container.

** All 3 l3 tables merged into one StL3SoftwareMonitor
   This is what these tables are. dst_summary is something else!
   Added to StSoftwareMonitor.

** StSvtHit has different unpacking than stated in Lannys docu.  Sep 2, tu
   See Helens mail:
   hw = det_id + 2^4 * id_wafer
   where
   id_wafer = 1000*layer+100*wafer+ladder

** Change naming scheme of containers.  Sep 2, tu
   Follow RogueWaves nomenclature:
   StSPtrVecXXXX
   StPtrVecXXXX

** StHit::detector()
   coding of detector position somewhat odd. Check with
   dst_filler.

** StTpcPixel
   check the uncoding. Make sure the bit masks are correct.

** NEW: StBrowsableEvent
   derived from StEvent. Contains all stuff needed
   to be shown in Root browser.

** StHit
   Has now also hardware position as member (request by pwgs).
   To keep the costs low I simply store the compressed word.
   The specialized classes (StTpcHit, StSvtHit, ...) shall
   provide the access methods which then have to unpack
   the unsigned long word and pull out the info.
   Constructor changed for all hit classes!

** NEW: StEventTypes
   Since the header files now contain only the 'real' minimum of
   #include's the users might be shocked and puzzled by the amount
   of files the need for their stuff. StEventTypes solves this
   problem. It includes ALL StEvent headers.

** Some setXXX methods look redundant
   since the classes are setup using the tables passed via
   to the constructor but as soon as the tables are dropped
   we will need setXXX stuff (unless one wants to pass many
   many args to the constructor).
   
** StEnumerations includes StDetectorID and StVertexId
   StVertexId is new. Spiros added it. Vertex type enums
   where in StDetectorId before.

** StRun & StRunSummary: both setup through constructor of StRun

** StEventSummary: setup through constructor of StEvent

** StEventSummary: arrays which fake histos have no set-method
   reason: if we can fill them directly, i.e. we get rid of the table
   we don't need these cumbersome arrays any more. We use histos right
   away.

** All StXXXSoftwareMonitor classes are setup through StSoftwareMonitor

