//
// File generated by /Users/rdm/root_v5.20.00/bin/rootcint at Tue Sep  9 13:53:52 2008

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "BaseDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void StjTowerEnergy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergy(void *p = 0);
   static void *newArray_StjTowerEnergy(Long_t size, void *p);
   static void delete_StjTowerEnergy(void *p);
   static void deleteArray_StjTowerEnergy(void *p);
   static void destruct_StjTowerEnergy(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergy*)
   {
      ::StjTowerEnergy *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergy >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergy", ::StjTowerEnergy::Class_Version(), "StjTowerEnergyList.h", 13,
                  typeid(::StjTowerEnergy), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergy::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergy) );
      instance.SetNew(&new_StjTowerEnergy);
      instance.SetNewArray(&newArray_StjTowerEnergy);
      instance.SetDelete(&delete_StjTowerEnergy);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergy);
      instance.SetDestructor(&destruct_StjTowerEnergy);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergy*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergy*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjBEMC_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjBEMC(void *p);
   static void deleteArray_StjBEMC(void *p);
   static void destruct_StjBEMC(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjBEMC*)
   {
      ::StjBEMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjBEMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjBEMC", ::StjBEMC::Class_Version(), "StjBEMC.h", 11,
                  typeid(::StjBEMC), DefineBehavior(ptr, ptr),
                  &::StjBEMC::Dictionary, isa_proxy, 4,
                  sizeof(::StjBEMC) );
      instance.SetDelete(&delete_StjBEMC);
      instance.SetDeleteArray(&deleteArray_StjBEMC);
      instance.SetDestructor(&destruct_StjBEMC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjBEMC*)
   {
      return GenerateInitInstanceLocal((::StjBEMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjBEMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjBEMCNull_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjBEMCNull(void *p = 0);
   static void *newArray_StjBEMCNull(Long_t size, void *p);
   static void delete_StjBEMCNull(void *p);
   static void deleteArray_StjBEMCNull(void *p);
   static void destruct_StjBEMCNull(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjBEMCNull*)
   {
      ::StjBEMCNull *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjBEMCNull >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjBEMCNull", ::StjBEMCNull::Class_Version(), "StjBEMCNull.h", 9,
                  typeid(::StjBEMCNull), DefineBehavior(ptr, ptr),
                  &::StjBEMCNull::Dictionary, isa_proxy, 4,
                  sizeof(::StjBEMCNull) );
      instance.SetNew(&new_StjBEMCNull);
      instance.SetNewArray(&newArray_StjBEMCNull);
      instance.SetDelete(&delete_StjBEMCNull);
      instance.SetDeleteArray(&deleteArray_StjBEMCNull);
      instance.SetDestructor(&destruct_StjBEMCNull);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjBEMCNull*)
   {
      return GenerateInitInstanceLocal((::StjBEMCNull*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjBEMCNull*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjBEMCTree_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjBEMCTree(void *p);
   static void deleteArray_StjBEMCTree(void *p);
   static void destruct_StjBEMCTree(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjBEMCTree*)
   {
      ::StjBEMCTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjBEMCTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjBEMCTree", ::StjBEMCTree::Class_Version(), "StjBEMCTree.h", 10,
                  typeid(::StjBEMCTree), DefineBehavior(ptr, ptr),
                  &::StjBEMCTree::Dictionary, isa_proxy, 4,
                  sizeof(::StjBEMCTree) );
      instance.SetDelete(&delete_StjBEMCTree);
      instance.SetDeleteArray(&deleteArray_StjBEMCTree);
      instance.SetDestructor(&destruct_StjBEMCTree);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjBEMCTree*)
   {
      return GenerateInitInstanceLocal((::StjBEMCTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjBEMCTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjBEMCTxt_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjBEMCTxt(void *p);
   static void deleteArray_StjBEMCTxt(void *p);
   static void destruct_StjBEMCTxt(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjBEMCTxt*)
   {
      ::StjBEMCTxt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjBEMCTxt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjBEMCTxt", ::StjBEMCTxt::Class_Version(), "StjBEMCTxt.h", 12,
                  typeid(::StjBEMCTxt), DefineBehavior(ptr, ptr),
                  &::StjBEMCTxt::Dictionary, isa_proxy, 4,
                  sizeof(::StjBEMCTxt) );
      instance.SetDelete(&delete_StjBEMCTxt);
      instance.SetDeleteArray(&deleteArray_StjBEMCTxt);
      instance.SetDestructor(&destruct_StjBEMCTxt);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjBEMCTxt*)
   {
      return GenerateInitInstanceLocal((::StjBEMCTxt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjBEMCTxt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjFourVec_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjFourVec(void *p = 0);
   static void *newArray_StjFourVec(Long_t size, void *p);
   static void delete_StjFourVec(void *p);
   static void deleteArray_StjFourVec(void *p);
   static void destruct_StjFourVec(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjFourVec*)
   {
      ::StjFourVec *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjFourVec >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjFourVec", ::StjFourVec::Class_Version(), "StjFourVecList.h", 12,
                  typeid(::StjFourVec), DefineBehavior(ptr, ptr),
                  &::StjFourVec::Dictionary, isa_proxy, 4,
                  sizeof(::StjFourVec) );
      instance.SetNew(&new_StjFourVec);
      instance.SetNewArray(&newArray_StjFourVec);
      instance.SetDelete(&delete_StjFourVec);
      instance.SetDeleteArray(&deleteArray_StjFourVec);
      instance.SetDestructor(&destruct_StjFourVec);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjFourVec*)
   {
      return GenerateInitInstanceLocal((::StjFourVec*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjFourVec*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjJet_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjJet(void *p = 0);
   static void *newArray_StjJet(Long_t size, void *p);
   static void delete_StjJet(void *p);
   static void deleteArray_StjJet(void *p);
   static void destruct_StjJet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjJet*)
   {
      ::StjJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjJet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjJet", ::StjJet::Class_Version(), "StjJetList.h", 15,
                  typeid(::StjJet), DefineBehavior(ptr, ptr),
                  &::StjJet::Dictionary, isa_proxy, 4,
                  sizeof(::StjJet) );
      instance.SetNew(&new_StjJet);
      instance.SetNewArray(&newArray_StjJet);
      instance.SetDelete(&delete_StjJet);
      instance.SetDeleteArray(&deleteArray_StjJet);
      instance.SetDestructor(&destruct_StjJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjJet*)
   {
      return GenerateInitInstanceLocal((::StjJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjDijet_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjDijet(void *p = 0);
   static void *newArray_StjDijet(Long_t size, void *p);
   static void delete_StjDijet(void *p);
   static void deleteArray_StjDijet(void *p);
   static void destruct_StjDijet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjDijet*)
   {
      ::StjDijet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjDijet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjDijet", ::StjDijet::Class_Version(), "StjDijetList.h", 13,
                  typeid(::StjDijet), DefineBehavior(ptr, ptr),
                  &::StjDijet::Dictionary, isa_proxy, 4,
                  sizeof(::StjDijet) );
      instance.SetNew(&new_StjDijet);
      instance.SetNewArray(&newArray_StjDijet);
      instance.SetDelete(&delete_StjDijet);
      instance.SetDeleteArray(&deleteArray_StjDijet);
      instance.SetDestructor(&destruct_StjDijet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjDijet*)
   {
      return GenerateInitInstanceLocal((::StjDijet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjDijet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjDijetCut_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjDijetCut(void *p);
   static void deleteArray_StjDijetCut(void *p);
   static void destruct_StjDijetCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjDijetCut*)
   {
      ::StjDijetCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjDijetCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjDijetCut", ::StjDijetCut::Class_Version(), "StjDijetCut.h", 11,
                  typeid(::StjDijetCut), DefineBehavior(ptr, ptr),
                  &::StjDijetCut::Dictionary, isa_proxy, 4,
                  sizeof(::StjDijetCut) );
      instance.SetDelete(&delete_StjDijetCut);
      instance.SetDeleteArray(&deleteArray_StjDijetCut);
      instance.SetDestructor(&destruct_StjDijetCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjDijetCut*)
   {
      return GenerateInitInstanceLocal((::StjDijetCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjDijetCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjDijetCutAsymmetricPt_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjDijetCutAsymmetricPt(void *p);
   static void deleteArray_StjDijetCutAsymmetricPt(void *p);
   static void destruct_StjDijetCutAsymmetricPt(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjDijetCutAsymmetricPt*)
   {
      ::StjDijetCutAsymmetricPt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjDijetCutAsymmetricPt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjDijetCutAsymmetricPt", ::StjDijetCutAsymmetricPt::Class_Version(), "StjDijetCutAsymmetricPt.h", 9,
                  typeid(::StjDijetCutAsymmetricPt), DefineBehavior(ptr, ptr),
                  &::StjDijetCutAsymmetricPt::Dictionary, isa_proxy, 4,
                  sizeof(::StjDijetCutAsymmetricPt) );
      instance.SetDelete(&delete_StjDijetCutAsymmetricPt);
      instance.SetDeleteArray(&deleteArray_StjDijetCutAsymmetricPt);
      instance.SetDestructor(&destruct_StjDijetCutAsymmetricPt);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjDijetCutAsymmetricPt*)
   {
      return GenerateInitInstanceLocal((::StjDijetCutAsymmetricPt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjDijetCutAsymmetricPt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjDijetCutDPhi_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjDijetCutDPhi(void *p = 0);
   static void *newArray_StjDijetCutDPhi(Long_t size, void *p);
   static void delete_StjDijetCutDPhi(void *p);
   static void deleteArray_StjDijetCutDPhi(void *p);
   static void destruct_StjDijetCutDPhi(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjDijetCutDPhi*)
   {
      ::StjDijetCutDPhi *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjDijetCutDPhi >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjDijetCutDPhi", ::StjDijetCutDPhi::Class_Version(), "StjDijetCutDPhi.h", 9,
                  typeid(::StjDijetCutDPhi), DefineBehavior(ptr, ptr),
                  &::StjDijetCutDPhi::Dictionary, isa_proxy, 4,
                  sizeof(::StjDijetCutDPhi) );
      instance.SetNew(&new_StjDijetCutDPhi);
      instance.SetNewArray(&newArray_StjDijetCutDPhi);
      instance.SetDelete(&delete_StjDijetCutDPhi);
      instance.SetDeleteArray(&deleteArray_StjDijetCutDPhi);
      instance.SetDestructor(&destruct_StjDijetCutDPhi);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjDijetCutDPhi*)
   {
      return GenerateInitInstanceLocal((::StjDijetCutDPhi*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjDijetCutDPhi*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjJetCut_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjJetCut(void *p);
   static void deleteArray_StjJetCut(void *p);
   static void destruct_StjJetCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjJetCut*)
   {
      ::StjJetCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjJetCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjJetCut", ::StjJetCut::Class_Version(), "StjJetCut.h", 11,
                  typeid(::StjJetCut), DefineBehavior(ptr, ptr),
                  &::StjJetCut::Dictionary, isa_proxy, 4,
                  sizeof(::StjJetCut) );
      instance.SetDelete(&delete_StjJetCut);
      instance.SetDeleteArray(&deleteArray_StjJetCut);
      instance.SetDestructor(&destruct_StjJetCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjJetCut*)
   {
      return GenerateInitInstanceLocal((::StjJetCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjJetCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjJetCutEta_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjJetCutEta(void *p = 0);
   static void *newArray_StjJetCutEta(Long_t size, void *p);
   static void delete_StjJetCutEta(void *p);
   static void deleteArray_StjJetCutEta(void *p);
   static void destruct_StjJetCutEta(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjJetCutEta*)
   {
      ::StjJetCutEta *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjJetCutEta >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjJetCutEta", ::StjJetCutEta::Class_Version(), "StjJetCutEta.h", 9,
                  typeid(::StjJetCutEta), DefineBehavior(ptr, ptr),
                  &::StjJetCutEta::Dictionary, isa_proxy, 4,
                  sizeof(::StjJetCutEta) );
      instance.SetNew(&new_StjJetCutEta);
      instance.SetNewArray(&newArray_StjJetCutEta);
      instance.SetDelete(&delete_StjJetCutEta);
      instance.SetDeleteArray(&deleteArray_StjJetCutEta);
      instance.SetDestructor(&destruct_StjJetCutEta);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjJetCutEta*)
   {
      return GenerateInitInstanceLocal((::StjJetCutEta*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjJetCutEta*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjDijetCutEta_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjDijetCutEta(void *p = 0);
   static void *newArray_StjDijetCutEta(Long_t size, void *p);
   static void delete_StjDijetCutEta(void *p);
   static void deleteArray_StjDijetCutEta(void *p);
   static void destruct_StjDijetCutEta(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjDijetCutEta*)
   {
      ::StjDijetCutEta *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjDijetCutEta >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjDijetCutEta", ::StjDijetCutEta::Class_Version(), "StjDijetCutEta.h", 11,
                  typeid(::StjDijetCutEta), DefineBehavior(ptr, ptr),
                  &::StjDijetCutEta::Dictionary, isa_proxy, 4,
                  sizeof(::StjDijetCutEta) );
      instance.SetNew(&new_StjDijetCutEta);
      instance.SetNewArray(&newArray_StjDijetCutEta);
      instance.SetDelete(&delete_StjDijetCutEta);
      instance.SetDeleteArray(&deleteArray_StjDijetCutEta);
      instance.SetDestructor(&destruct_StjDijetCutEta);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjDijetCutEta*)
   {
      return GenerateInitInstanceLocal((::StjDijetCutEta*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjDijetCutEta*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjDijetCutEta3MinusEta4_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjDijetCutEta3MinusEta4(void *p = 0);
   static void *newArray_StjDijetCutEta3MinusEta4(Long_t size, void *p);
   static void delete_StjDijetCutEta3MinusEta4(void *p);
   static void deleteArray_StjDijetCutEta3MinusEta4(void *p);
   static void destruct_StjDijetCutEta3MinusEta4(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjDijetCutEta3MinusEta4*)
   {
      ::StjDijetCutEta3MinusEta4 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjDijetCutEta3MinusEta4 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjDijetCutEta3MinusEta4", ::StjDijetCutEta3MinusEta4::Class_Version(), "StjDijetCutEta3MinusEta4.h", 9,
                  typeid(::StjDijetCutEta3MinusEta4), DefineBehavior(ptr, ptr),
                  &::StjDijetCutEta3MinusEta4::Dictionary, isa_proxy, 4,
                  sizeof(::StjDijetCutEta3MinusEta4) );
      instance.SetNew(&new_StjDijetCutEta3MinusEta4);
      instance.SetNewArray(&newArray_StjDijetCutEta3MinusEta4);
      instance.SetDelete(&delete_StjDijetCutEta3MinusEta4);
      instance.SetDeleteArray(&deleteArray_StjDijetCutEta3MinusEta4);
      instance.SetDestructor(&destruct_StjDijetCutEta3MinusEta4);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjDijetCutEta3MinusEta4*)
   {
      return GenerateInitInstanceLocal((::StjDijetCutEta3MinusEta4*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjDijetCutEta3MinusEta4*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjFourVecCut_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjFourVecCut(void *p);
   static void deleteArray_StjFourVecCut(void *p);
   static void destruct_StjFourVecCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjFourVecCut*)
   {
      ::StjFourVecCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjFourVecCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjFourVecCut", ::StjFourVecCut::Class_Version(), "StjFourVecCut.h", 11,
                  typeid(::StjFourVecCut), DefineBehavior(ptr, ptr),
                  &::StjFourVecCut::Dictionary, isa_proxy, 4,
                  sizeof(::StjFourVecCut) );
      instance.SetDelete(&delete_StjFourVecCut);
      instance.SetDeleteArray(&deleteArray_StjFourVecCut);
      instance.SetDestructor(&destruct_StjFourVecCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjFourVecCut*)
   {
      return GenerateInitInstanceLocal((::StjFourVecCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjFourVecCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjFourVecListCut_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjFourVecListCut(void *p = 0);
   static void *newArray_StjFourVecListCut(Long_t size, void *p);
   static void delete_StjFourVecListCut(void *p);
   static void deleteArray_StjFourVecListCut(void *p);
   static void destruct_StjFourVecListCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjFourVecListCut*)
   {
      ::StjFourVecListCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjFourVecListCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjFourVecListCut", ::StjFourVecListCut::Class_Version(), "StjFourVecListCut.h", 13,
                  typeid(::StjFourVecListCut), DefineBehavior(ptr, ptr),
                  &::StjFourVecListCut::Dictionary, isa_proxy, 4,
                  sizeof(::StjFourVecListCut) );
      instance.SetNew(&new_StjFourVecListCut);
      instance.SetNewArray(&newArray_StjFourVecListCut);
      instance.SetDelete(&delete_StjFourVecListCut);
      instance.SetDeleteArray(&deleteArray_StjFourVecListCut);
      instance.SetDestructor(&destruct_StjFourVecListCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjFourVecListCut*)
   {
      return GenerateInitInstanceLocal((::StjFourVecListCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjFourVecListCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjJetCutTrgBHT_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjJetCutTrgBHT(void *p);
   static void deleteArray_StjJetCutTrgBHT(void *p);
   static void destruct_StjJetCutTrgBHT(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjJetCutTrgBHT*)
   {
      ::StjJetCutTrgBHT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjJetCutTrgBHT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjJetCutTrgBHT", ::StjJetCutTrgBHT::Class_Version(), "StjJetCutTrgBHT.h", 13,
                  typeid(::StjJetCutTrgBHT), DefineBehavior(ptr, ptr),
                  &::StjJetCutTrgBHT::Dictionary, isa_proxy, 4,
                  sizeof(::StjJetCutTrgBHT) );
      instance.SetDelete(&delete_StjJetCutTrgBHT);
      instance.SetDeleteArray(&deleteArray_StjJetCutTrgBHT);
      instance.SetDestructor(&destruct_StjJetCutTrgBHT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjJetCutTrgBHT*)
   {
      return GenerateInitInstanceLocal((::StjJetCutTrgBHT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjJetCutTrgBHT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjDijetCutTrgBHT_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjDijetCutTrgBHT(void *p);
   static void deleteArray_StjDijetCutTrgBHT(void *p);
   static void destruct_StjDijetCutTrgBHT(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjDijetCutTrgBHT*)
   {
      ::StjDijetCutTrgBHT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjDijetCutTrgBHT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjDijetCutTrgBHT", ::StjDijetCutTrgBHT::Class_Version(), "StjDijetCutTrgBHT.h", 13,
                  typeid(::StjDijetCutTrgBHT), DefineBehavior(ptr, ptr),
                  &::StjDijetCutTrgBHT::Dictionary, isa_proxy, 4,
                  sizeof(::StjDijetCutTrgBHT) );
      instance.SetDelete(&delete_StjDijetCutTrgBHT);
      instance.SetDeleteArray(&deleteArray_StjDijetCutTrgBHT);
      instance.SetDestructor(&destruct_StjDijetCutTrgBHT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjDijetCutTrgBHT*)
   {
      return GenerateInitInstanceLocal((::StjDijetCutTrgBHT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjDijetCutTrgBHT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjJetCutTrgBJP_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjJetCutTrgBJP(void *p);
   static void deleteArray_StjJetCutTrgBJP(void *p);
   static void destruct_StjJetCutTrgBJP(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjJetCutTrgBJP*)
   {
      ::StjJetCutTrgBJP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjJetCutTrgBJP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjJetCutTrgBJP", ::StjJetCutTrgBJP::Class_Version(), "StjJetCutTrgBJP.h", 14,
                  typeid(::StjJetCutTrgBJP), DefineBehavior(ptr, ptr),
                  &::StjJetCutTrgBJP::Dictionary, isa_proxy, 4,
                  sizeof(::StjJetCutTrgBJP) );
      instance.SetDelete(&delete_StjJetCutTrgBJP);
      instance.SetDeleteArray(&deleteArray_StjJetCutTrgBJP);
      instance.SetDestructor(&destruct_StjJetCutTrgBJP);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjJetCutTrgBJP*)
   {
      return GenerateInitInstanceLocal((::StjJetCutTrgBJP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjJetCutTrgBJP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjDijetCutTrgBJP_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjDijetCutTrgBJP(void *p);
   static void deleteArray_StjDijetCutTrgBJP(void *p);
   static void destruct_StjDijetCutTrgBJP(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjDijetCutTrgBJP*)
   {
      ::StjDijetCutTrgBJP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjDijetCutTrgBJP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjDijetCutTrgBJP", ::StjDijetCutTrgBJP::Class_Version(), "StjDijetCutTrgBJP.h", 14,
                  typeid(::StjDijetCutTrgBJP), DefineBehavior(ptr, ptr),
                  &::StjDijetCutTrgBJP::Dictionary, isa_proxy, 4,
                  sizeof(::StjDijetCutTrgBJP) );
      instance.SetDelete(&delete_StjDijetCutTrgBJP);
      instance.SetDeleteArray(&deleteArray_StjDijetCutTrgBJP);
      instance.SetDestructor(&destruct_StjDijetCutTrgBJP);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjDijetCutTrgBJP*)
   {
      return GenerateInitInstanceLocal((::StjDijetCutTrgBJP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjDijetCutTrgBJP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjDijetListCut_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjDijetListCut(void *p = 0);
   static void *newArray_StjDijetListCut(Long_t size, void *p);
   static void delete_StjDijetListCut(void *p);
   static void deleteArray_StjDijetListCut(void *p);
   static void destruct_StjDijetListCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjDijetListCut*)
   {
      ::StjDijetListCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjDijetListCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjDijetListCut", ::StjDijetListCut::Class_Version(), "StjDijetListCut.h", 13,
                  typeid(::StjDijetListCut), DefineBehavior(ptr, ptr),
                  &::StjDijetListCut::Dictionary, isa_proxy, 4,
                  sizeof(::StjDijetListCut) );
      instance.SetNew(&new_StjDijetListCut);
      instance.SetNewArray(&newArray_StjDijetListCut);
      instance.SetDelete(&delete_StjDijetListCut);
      instance.SetDeleteArray(&deleteArray_StjDijetListCut);
      instance.SetDestructor(&destruct_StjDijetListCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjDijetListCut*)
   {
      return GenerateInitInstanceLocal((::StjDijetListCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjDijetListCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjDijetPrint_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjDijetPrint(void *p = 0);
   static void *newArray_StjDijetPrint(Long_t size, void *p);
   static void delete_StjDijetPrint(void *p);
   static void deleteArray_StjDijetPrint(void *p);
   static void destruct_StjDijetPrint(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjDijetPrint*)
   {
      ::StjDijetPrint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjDijetPrint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjDijetPrint", ::StjDijetPrint::Class_Version(), "StjDijetPrint.h", 14,
                  typeid(::StjDijetPrint), DefineBehavior(ptr, ptr),
                  &::StjDijetPrint::Dictionary, isa_proxy, 4,
                  sizeof(::StjDijetPrint) );
      instance.SetNew(&new_StjDijetPrint);
      instance.SetNewArray(&newArray_StjDijetPrint);
      instance.SetDelete(&delete_StjDijetPrint);
      instance.SetDeleteArray(&deleteArray_StjDijetPrint);
      instance.SetDestructor(&destruct_StjDijetPrint);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjDijetPrint*)
   {
      return GenerateInitInstanceLocal((::StjDijetPrint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjDijetPrint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjEEMC_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjEEMC(void *p);
   static void deleteArray_StjEEMC(void *p);
   static void destruct_StjEEMC(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjEEMC*)
   {
      ::StjEEMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjEEMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjEEMC", ::StjEEMC::Class_Version(), "StjEEMC.h", 11,
                  typeid(::StjEEMC), DefineBehavior(ptr, ptr),
                  &::StjEEMC::Dictionary, isa_proxy, 4,
                  sizeof(::StjEEMC) );
      instance.SetDelete(&delete_StjEEMC);
      instance.SetDeleteArray(&deleteArray_StjEEMC);
      instance.SetDestructor(&destruct_StjEEMC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjEEMC*)
   {
      return GenerateInitInstanceLocal((::StjEEMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjEEMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjEEMCNull_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjEEMCNull(void *p = 0);
   static void *newArray_StjEEMCNull(Long_t size, void *p);
   static void delete_StjEEMCNull(void *p);
   static void deleteArray_StjEEMCNull(void *p);
   static void destruct_StjEEMCNull(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjEEMCNull*)
   {
      ::StjEEMCNull *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjEEMCNull >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjEEMCNull", ::StjEEMCNull::Class_Version(), "StjEEMCNull.h", 9,
                  typeid(::StjEEMCNull), DefineBehavior(ptr, ptr),
                  &::StjEEMCNull::Dictionary, isa_proxy, 4,
                  sizeof(::StjEEMCNull) );
      instance.SetNew(&new_StjEEMCNull);
      instance.SetNewArray(&newArray_StjEEMCNull);
      instance.SetDelete(&delete_StjEEMCNull);
      instance.SetDeleteArray(&deleteArray_StjEEMCNull);
      instance.SetDestructor(&destruct_StjEEMCNull);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjEEMCNull*)
   {
      return GenerateInitInstanceLocal((::StjEEMCNull*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjEEMCNull*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjEEMCTxt_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjEEMCTxt(void *p);
   static void deleteArray_StjEEMCTxt(void *p);
   static void destruct_StjEEMCTxt(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjEEMCTxt*)
   {
      ::StjEEMCTxt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjEEMCTxt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjEEMCTxt", ::StjEEMCTxt::Class_Version(), "StjEEMCTxt.h", 12,
                  typeid(::StjEEMCTxt), DefineBehavior(ptr, ptr),
                  &::StjEEMCTxt::Dictionary, isa_proxy, 4,
                  sizeof(::StjEEMCTxt) );
      instance.SetDelete(&delete_StjEEMCTxt);
      instance.SetDeleteArray(&deleteArray_StjEEMCTxt);
      instance.SetDestructor(&destruct_StjEEMCTxt);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjEEMCTxt*)
   {
      return GenerateInitInstanceLocal((::StjEEMCTxt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjEEMCTxt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjFormDijet_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjFormDijet(void *p = 0);
   static void *newArray_StjFormDijet(Long_t size, void *p);
   static void delete_StjFormDijet(void *p);
   static void deleteArray_StjFormDijet(void *p);
   static void destruct_StjFormDijet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjFormDijet*)
   {
      ::StjFormDijet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjFormDijet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjFormDijet", ::StjFormDijet::Class_Version(), "StjFormDijet.h", 12,
                  typeid(::StjFormDijet), DefineBehavior(ptr, ptr),
                  &::StjFormDijet::Dictionary, isa_proxy, 4,
                  sizeof(::StjFormDijet) );
      instance.SetNew(&new_StjFormDijet);
      instance.SetNewArray(&newArray_StjFormDijet);
      instance.SetDelete(&delete_StjFormDijet);
      instance.SetDeleteArray(&deleteArray_StjFormDijet);
      instance.SetDestructor(&destruct_StjFormDijet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjFormDijet*)
   {
      return GenerateInitInstanceLocal((::StjFormDijet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjFormDijet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjFourVecCutPt_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjFourVecCutPt(void *p = 0);
   static void *newArray_StjFourVecCutPt(Long_t size, void *p);
   static void delete_StjFourVecCutPt(void *p);
   static void deleteArray_StjFourVecCutPt(void *p);
   static void destruct_StjFourVecCutPt(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjFourVecCutPt*)
   {
      ::StjFourVecCutPt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjFourVecCutPt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjFourVecCutPt", ::StjFourVecCutPt::Class_Version(), "StjFourVecCutPt.h", 9,
                  typeid(::StjFourVecCutPt), DefineBehavior(ptr, ptr),
                  &::StjFourVecCutPt::Dictionary, isa_proxy, 4,
                  sizeof(::StjFourVecCutPt) );
      instance.SetNew(&new_StjFourVecCutPt);
      instance.SetNewArray(&newArray_StjFourVecCutPt);
      instance.SetDelete(&delete_StjFourVecCutPt);
      instance.SetDeleteArray(&deleteArray_StjFourVecCutPt);
      instance.SetDestructor(&destruct_StjFourVecCutPt);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjFourVecCutPt*)
   {
      return GenerateInitInstanceLocal((::StjFourVecCutPt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjFourVecCutPt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjFourVecCutTrgBHT_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjFourVecCutTrgBHT(void *p);
   static void deleteArray_StjFourVecCutTrgBHT(void *p);
   static void destruct_StjFourVecCutTrgBHT(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjFourVecCutTrgBHT*)
   {
      ::StjFourVecCutTrgBHT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjFourVecCutTrgBHT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjFourVecCutTrgBHT", ::StjFourVecCutTrgBHT::Class_Version(), "StjFourVecCutTrgBHT.h", 11,
                  typeid(::StjFourVecCutTrgBHT), DefineBehavior(ptr, ptr),
                  &::StjFourVecCutTrgBHT::Dictionary, isa_proxy, 4,
                  sizeof(::StjFourVecCutTrgBHT) );
      instance.SetDelete(&delete_StjFourVecCutTrgBHT);
      instance.SetDeleteArray(&deleteArray_StjFourVecCutTrgBHT);
      instance.SetDestructor(&destruct_StjFourVecCutTrgBHT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjFourVecCutTrgBHT*)
   {
      return GenerateInitInstanceLocal((::StjFourVecCutTrgBHT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjFourVecCutTrgBHT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjFourVecCutTrgBJP_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjFourVecCutTrgBJP(void *p);
   static void deleteArray_StjFourVecCutTrgBJP(void *p);
   static void destruct_StjFourVecCutTrgBJP(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjFourVecCutTrgBJP*)
   {
      ::StjFourVecCutTrgBJP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjFourVecCutTrgBJP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjFourVecCutTrgBJP", ::StjFourVecCutTrgBJP::Class_Version(), "StjFourVecCutTrgBJP.h", 14,
                  typeid(::StjFourVecCutTrgBJP), DefineBehavior(ptr, ptr),
                  &::StjFourVecCutTrgBJP::Dictionary, isa_proxy, 4,
                  sizeof(::StjFourVecCutTrgBJP) );
      instance.SetDelete(&delete_StjFourVecCutTrgBJP);
      instance.SetDeleteArray(&deleteArray_StjFourVecCutTrgBJP);
      instance.SetDestructor(&destruct_StjFourVecCutTrgBJP);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjFourVecCutTrgBJP*)
   {
      return GenerateInitInstanceLocal((::StjFourVecCutTrgBJP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjFourVecCutTrgBJP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjFourVecPrint_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjFourVecPrint(void *p = 0);
   static void *newArray_StjFourVecPrint(Long_t size, void *p);
   static void delete_StjFourVecPrint(void *p);
   static void deleteArray_StjFourVecPrint(void *p);
   static void destruct_StjFourVecPrint(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjFourVecPrint*)
   {
      ::StjFourVecPrint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjFourVecPrint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjFourVecPrint", ::StjFourVecPrint::Class_Version(), "StjFourVecPrint.h", 14,
                  typeid(::StjFourVecPrint), DefineBehavior(ptr, ptr),
                  &::StjFourVecPrint::Dictionary, isa_proxy, 4,
                  sizeof(::StjFourVecPrint) );
      instance.SetNew(&new_StjFourVecPrint);
      instance.SetNewArray(&newArray_StjFourVecPrint);
      instance.SetDelete(&delete_StjFourVecPrint);
      instance.SetDeleteArray(&deleteArray_StjFourVecPrint);
      instance.SetDestructor(&destruct_StjFourVecPrint);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjFourVecPrint*)
   {
      return GenerateInitInstanceLocal((::StjFourVecPrint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjFourVecPrint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjJetCutDetectorEta_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjJetCutDetectorEta(void *p = 0);
   static void *newArray_StjJetCutDetectorEta(Long_t size, void *p);
   static void delete_StjJetCutDetectorEta(void *p);
   static void deleteArray_StjJetCutDetectorEta(void *p);
   static void destruct_StjJetCutDetectorEta(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjJetCutDetectorEta*)
   {
      ::StjJetCutDetectorEta *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjJetCutDetectorEta >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjJetCutDetectorEta", ::StjJetCutDetectorEta::Class_Version(), "StjJetCutDetectorEta.h", 9,
                  typeid(::StjJetCutDetectorEta), DefineBehavior(ptr, ptr),
                  &::StjJetCutDetectorEta::Dictionary, isa_proxy, 4,
                  sizeof(::StjJetCutDetectorEta) );
      instance.SetNew(&new_StjJetCutDetectorEta);
      instance.SetNewArray(&newArray_StjJetCutDetectorEta);
      instance.SetDelete(&delete_StjJetCutDetectorEta);
      instance.SetDeleteArray(&deleteArray_StjJetCutDetectorEta);
      instance.SetDestructor(&destruct_StjJetCutDetectorEta);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjJetCutDetectorEta*)
   {
      return GenerateInitInstanceLocal((::StjJetCutDetectorEta*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjJetCutDetectorEta*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjJetCutNFourVecs_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjJetCutNFourVecs(void *p = 0);
   static void *newArray_StjJetCutNFourVecs(Long_t size, void *p);
   static void delete_StjJetCutNFourVecs(void *p);
   static void deleteArray_StjJetCutNFourVecs(void *p);
   static void destruct_StjJetCutNFourVecs(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjJetCutNFourVecs*)
   {
      ::StjJetCutNFourVecs *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjJetCutNFourVecs >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjJetCutNFourVecs", ::StjJetCutNFourVecs::Class_Version(), "StjJetCutNFourVecs.h", 9,
                  typeid(::StjJetCutNFourVecs), DefineBehavior(ptr, ptr),
                  &::StjJetCutNFourVecs::Dictionary, isa_proxy, 4,
                  sizeof(::StjJetCutNFourVecs) );
      instance.SetNew(&new_StjJetCutNFourVecs);
      instance.SetNewArray(&newArray_StjJetCutNFourVecs);
      instance.SetDelete(&delete_StjJetCutNFourVecs);
      instance.SetDeleteArray(&deleteArray_StjJetCutNFourVecs);
      instance.SetDestructor(&destruct_StjJetCutNFourVecs);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjJetCutNFourVecs*)
   {
      return GenerateInitInstanceLocal((::StjJetCutNFourVecs*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjJetCutNFourVecs*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjJetCutPt_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjJetCutPt(void *p = 0);
   static void *newArray_StjJetCutPt(Long_t size, void *p);
   static void delete_StjJetCutPt(void *p);
   static void deleteArray_StjJetCutPt(void *p);
   static void destruct_StjJetCutPt(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjJetCutPt*)
   {
      ::StjJetCutPt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjJetCutPt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjJetCutPt", ::StjJetCutPt::Class_Version(), "StjJetCutPt.h", 9,
                  typeid(::StjJetCutPt), DefineBehavior(ptr, ptr),
                  &::StjJetCutPt::Dictionary, isa_proxy, 4,
                  sizeof(::StjJetCutPt) );
      instance.SetNew(&new_StjJetCutPt);
      instance.SetNewArray(&newArray_StjJetCutPt);
      instance.SetDelete(&delete_StjJetCutPt);
      instance.SetDeleteArray(&deleteArray_StjJetCutPt);
      instance.SetDestructor(&destruct_StjJetCutPt);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjJetCutPt*)
   {
      return GenerateInitInstanceLocal((::StjJetCutPt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjJetCutPt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjJetListCut_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjJetListCut(void *p = 0);
   static void *newArray_StjJetListCut(Long_t size, void *p);
   static void delete_StjJetListCut(void *p);
   static void deleteArray_StjJetListCut(void *p);
   static void destruct_StjJetListCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjJetListCut*)
   {
      ::StjJetListCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjJetListCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjJetListCut", ::StjJetListCut::Class_Version(), "StjJetListCut.h", 13,
                  typeid(::StjJetListCut), DefineBehavior(ptr, ptr),
                  &::StjJetListCut::Dictionary, isa_proxy, 4,
                  sizeof(::StjJetListCut) );
      instance.SetNew(&new_StjJetListCut);
      instance.SetNewArray(&newArray_StjJetListCut);
      instance.SetDelete(&delete_StjJetListCut);
      instance.SetDeleteArray(&deleteArray_StjJetListCut);
      instance.SetDestructor(&destruct_StjJetListCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjJetListCut*)
   {
      return GenerateInitInstanceLocal((::StjJetListCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjJetListCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjJetPrint_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjJetPrint(void *p = 0);
   static void *newArray_StjJetPrint(Long_t size, void *p);
   static void delete_StjJetPrint(void *p);
   static void deleteArray_StjJetPrint(void *p);
   static void destruct_StjJetPrint(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjJetPrint*)
   {
      ::StjJetPrint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjJetPrint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjJetPrint", ::StjJetPrint::Class_Version(), "StjJetPrint.h", 14,
                  typeid(::StjJetPrint), DefineBehavior(ptr, ptr),
                  &::StjJetPrint::Dictionary, isa_proxy, 4,
                  sizeof(::StjJetPrint) );
      instance.SetNew(&new_StjJetPrint);
      instance.SetNewArray(&newArray_StjJetPrint);
      instance.SetDelete(&delete_StjJetPrint);
      instance.SetDeleteArray(&deleteArray_StjJetPrint);
      instance.SetDestructor(&destruct_StjJetPrint);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjJetPrint*)
   {
      return GenerateInitInstanceLocal((::StjJetPrint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjJetPrint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjMCParticle_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjMCParticle(void *p = 0);
   static void *newArray_StjMCParticle(Long_t size, void *p);
   static void delete_StjMCParticle(void *p);
   static void deleteArray_StjMCParticle(void *p);
   static void destruct_StjMCParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjMCParticle*)
   {
      ::StjMCParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjMCParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjMCParticle", ::StjMCParticle::Class_Version(), "StjMCParticleList.h", 12,
                  typeid(::StjMCParticle), DefineBehavior(ptr, ptr),
                  &::StjMCParticle::Dictionary, isa_proxy, 4,
                  sizeof(::StjMCParticle) );
      instance.SetNew(&new_StjMCParticle);
      instance.SetNewArray(&newArray_StjMCParticle);
      instance.SetDelete(&delete_StjMCParticle);
      instance.SetDeleteArray(&deleteArray_StjMCParticle);
      instance.SetDestructor(&destruct_StjMCParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjMCParticle*)
   {
      return GenerateInitInstanceLocal((::StjMCParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjMCParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjMC_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjMC(void *p);
   static void deleteArray_StjMC(void *p);
   static void destruct_StjMC(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjMC*)
   {
      ::StjMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjMC", ::StjMC::Class_Version(), "StjMC.h", 11,
                  typeid(::StjMC), DefineBehavior(ptr, ptr),
                  &::StjMC::Dictionary, isa_proxy, 4,
                  sizeof(::StjMC) );
      instance.SetDelete(&delete_StjMC);
      instance.SetDeleteArray(&deleteArray_StjMC);
      instance.SetDestructor(&destruct_StjMC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjMC*)
   {
      return GenerateInitInstanceLocal((::StjMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjMCNull_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjMCNull(void *p);
   static void deleteArray_StjMCNull(void *p);
   static void destruct_StjMCNull(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjMCNull*)
   {
      ::StjMCNull *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjMCNull >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjMCNull", ::StjMCNull::Class_Version(), "StjMCNull.h", 9,
                  typeid(::StjMCNull), DefineBehavior(ptr, ptr),
                  &::StjMCNull::Dictionary, isa_proxy, 4,
                  sizeof(::StjMCNull) );
      instance.SetDelete(&delete_StjMCNull);
      instance.SetDeleteArray(&deleteArray_StjMCNull);
      instance.SetDestructor(&destruct_StjMCNull);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjMCNull*)
   {
      return GenerateInitInstanceLocal((::StjMCNull*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjMCNull*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjMCParticleCut_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjMCParticleCut(void *p);
   static void deleteArray_StjMCParticleCut(void *p);
   static void destruct_StjMCParticleCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjMCParticleCut*)
   {
      ::StjMCParticleCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjMCParticleCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjMCParticleCut", ::StjMCParticleCut::Class_Version(), "StjMCParticleCut.h", 11,
                  typeid(::StjMCParticleCut), DefineBehavior(ptr, ptr),
                  &::StjMCParticleCut::Dictionary, isa_proxy, 4,
                  sizeof(::StjMCParticleCut) );
      instance.SetDelete(&delete_StjMCParticleCut);
      instance.SetDeleteArray(&deleteArray_StjMCParticleCut);
      instance.SetDestructor(&destruct_StjMCParticleCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjMCParticleCut*)
   {
      return GenerateInitInstanceLocal((::StjMCParticleCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjMCParticleCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjMCParticleCutEta_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjMCParticleCutEta(void *p = 0);
   static void *newArray_StjMCParticleCutEta(Long_t size, void *p);
   static void delete_StjMCParticleCutEta(void *p);
   static void deleteArray_StjMCParticleCutEta(void *p);
   static void destruct_StjMCParticleCutEta(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjMCParticleCutEta*)
   {
      ::StjMCParticleCutEta *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjMCParticleCutEta >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjMCParticleCutEta", ::StjMCParticleCutEta::Class_Version(), "StjMCParticleCutEta.h", 9,
                  typeid(::StjMCParticleCutEta), DefineBehavior(ptr, ptr),
                  &::StjMCParticleCutEta::Dictionary, isa_proxy, 4,
                  sizeof(::StjMCParticleCutEta) );
      instance.SetNew(&new_StjMCParticleCutEta);
      instance.SetNewArray(&newArray_StjMCParticleCutEta);
      instance.SetDelete(&delete_StjMCParticleCutEta);
      instance.SetDeleteArray(&deleteArray_StjMCParticleCutEta);
      instance.SetDestructor(&destruct_StjMCParticleCutEta);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjMCParticleCutEta*)
   {
      return GenerateInitInstanceLocal((::StjMCParticleCutEta*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjMCParticleCutEta*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjMCParticleCutEtaForStatus_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjMCParticleCutEtaForStatus(void *p = 0);
   static void *newArray_StjMCParticleCutEtaForStatus(Long_t size, void *p);
   static void delete_StjMCParticleCutEtaForStatus(void *p);
   static void deleteArray_StjMCParticleCutEtaForStatus(void *p);
   static void destruct_StjMCParticleCutEtaForStatus(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjMCParticleCutEtaForStatus*)
   {
      ::StjMCParticleCutEtaForStatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjMCParticleCutEtaForStatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjMCParticleCutEtaForStatus", ::StjMCParticleCutEtaForStatus::Class_Version(), "StjMCParticleCutEtaForStatus.h", 9,
                  typeid(::StjMCParticleCutEtaForStatus), DefineBehavior(ptr, ptr),
                  &::StjMCParticleCutEtaForStatus::Dictionary, isa_proxy, 4,
                  sizeof(::StjMCParticleCutEtaForStatus) );
      instance.SetNew(&new_StjMCParticleCutEtaForStatus);
      instance.SetNewArray(&newArray_StjMCParticleCutEtaForStatus);
      instance.SetDelete(&delete_StjMCParticleCutEtaForStatus);
      instance.SetDeleteArray(&deleteArray_StjMCParticleCutEtaForStatus);
      instance.SetDestructor(&destruct_StjMCParticleCutEtaForStatus);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjMCParticleCutEtaForStatus*)
   {
      return GenerateInitInstanceLocal((::StjMCParticleCutEtaForStatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjMCParticleCutEtaForStatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjMCParticleCutStatus_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjMCParticleCutStatus(void *p = 0);
   static void *newArray_StjMCParticleCutStatus(Long_t size, void *p);
   static void delete_StjMCParticleCutStatus(void *p);
   static void deleteArray_StjMCParticleCutStatus(void *p);
   static void destruct_StjMCParticleCutStatus(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjMCParticleCutStatus*)
   {
      ::StjMCParticleCutStatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjMCParticleCutStatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjMCParticleCutStatus", ::StjMCParticleCutStatus::Class_Version(), "StjMCParticleCutStatus.h", 11,
                  typeid(::StjMCParticleCutStatus), DefineBehavior(ptr, ptr),
                  &::StjMCParticleCutStatus::Dictionary, isa_proxy, 4,
                  sizeof(::StjMCParticleCutStatus) );
      instance.SetNew(&new_StjMCParticleCutStatus);
      instance.SetNewArray(&newArray_StjMCParticleCutStatus);
      instance.SetDelete(&delete_StjMCParticleCutStatus);
      instance.SetDeleteArray(&deleteArray_StjMCParticleCutStatus);
      instance.SetDestructor(&destruct_StjMCParticleCutStatus);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjMCParticleCutStatus*)
   {
      return GenerateInitInstanceLocal((::StjMCParticleCutStatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjMCParticleCutStatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjMCParticleListCut_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjMCParticleListCut(void *p = 0);
   static void *newArray_StjMCParticleListCut(Long_t size, void *p);
   static void delete_StjMCParticleListCut(void *p);
   static void deleteArray_StjMCParticleListCut(void *p);
   static void destruct_StjMCParticleListCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjMCParticleListCut*)
   {
      ::StjMCParticleListCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjMCParticleListCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjMCParticleListCut", ::StjMCParticleListCut::Class_Version(), "StjMCParticleListCut.h", 13,
                  typeid(::StjMCParticleListCut), DefineBehavior(ptr, ptr),
                  &::StjMCParticleListCut::Dictionary, isa_proxy, 4,
                  sizeof(::StjMCParticleListCut) );
      instance.SetNew(&new_StjMCParticleListCut);
      instance.SetNewArray(&newArray_StjMCParticleListCut);
      instance.SetDelete(&delete_StjMCParticleListCut);
      instance.SetDeleteArray(&deleteArray_StjMCParticleListCut);
      instance.SetDestructor(&destruct_StjMCParticleListCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjMCParticleListCut*)
   {
      return GenerateInitInstanceLocal((::StjMCParticleListCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjMCParticleListCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjMCParticleListToFourVecList_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjMCParticleListToFourVecList(void *p = 0);
   static void *newArray_StjMCParticleListToFourVecList(Long_t size, void *p);
   static void delete_StjMCParticleListToFourVecList(void *p);
   static void deleteArray_StjMCParticleListToFourVecList(void *p);
   static void destruct_StjMCParticleListToFourVecList(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjMCParticleListToFourVecList*)
   {
      ::StjMCParticleListToFourVecList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjMCParticleListToFourVecList >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjMCParticleListToFourVecList", ::StjMCParticleListToFourVecList::Class_Version(), "StjMCParticleListToFourVecList.h", 14,
                  typeid(::StjMCParticleListToFourVecList), DefineBehavior(ptr, ptr),
                  &::StjMCParticleListToFourVecList::Dictionary, isa_proxy, 4,
                  sizeof(::StjMCParticleListToFourVecList) );
      instance.SetNew(&new_StjMCParticleListToFourVecList);
      instance.SetNewArray(&newArray_StjMCParticleListToFourVecList);
      instance.SetDelete(&delete_StjMCParticleListToFourVecList);
      instance.SetDeleteArray(&deleteArray_StjMCParticleListToFourVecList);
      instance.SetDestructor(&destruct_StjMCParticleListToFourVecList);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjMCParticleListToFourVecList*)
   {
      return GenerateInitInstanceLocal((::StjMCParticleListToFourVecList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjMCParticleListToFourVecList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjMCParticlePrint_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjMCParticlePrint(void *p = 0);
   static void *newArray_StjMCParticlePrint(Long_t size, void *p);
   static void delete_StjMCParticlePrint(void *p);
   static void deleteArray_StjMCParticlePrint(void *p);
   static void destruct_StjMCParticlePrint(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjMCParticlePrint*)
   {
      ::StjMCParticlePrint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjMCParticlePrint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjMCParticlePrint", ::StjMCParticlePrint::Class_Version(), "StjMCParticlePrint.h", 14,
                  typeid(::StjMCParticlePrint), DefineBehavior(ptr, ptr),
                  &::StjMCParticlePrint::Dictionary, isa_proxy, 4,
                  sizeof(::StjMCParticlePrint) );
      instance.SetNew(&new_StjMCParticlePrint);
      instance.SetNewArray(&newArray_StjMCParticlePrint);
      instance.SetDelete(&delete_StjMCParticlePrint);
      instance.SetDeleteArray(&deleteArray_StjMCParticlePrint);
      instance.SetDestructor(&destruct_StjMCParticlePrint);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjMCParticlePrint*)
   {
      return GenerateInitInstanceLocal((::StjMCParticlePrint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjMCParticlePrint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjMCParticleToFourVec_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjMCParticleToFourVec(void *p = 0);
   static void *newArray_StjMCParticleToFourVec(Long_t size, void *p);
   static void delete_StjMCParticleToFourVec(void *p);
   static void deleteArray_StjMCParticleToFourVec(void *p);
   static void destruct_StjMCParticleToFourVec(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjMCParticleToFourVec*)
   {
      ::StjMCParticleToFourVec *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjMCParticleToFourVec >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjMCParticleToFourVec", ::StjMCParticleToFourVec::Class_Version(), "StjMCParticleToFourVec.h", 13,
                  typeid(::StjMCParticleToFourVec), DefineBehavior(ptr, ptr),
                  &::StjMCParticleToFourVec::Dictionary, isa_proxy, 4,
                  sizeof(::StjMCParticleToFourVec) );
      instance.SetNew(&new_StjMCParticleToFourVec);
      instance.SetNewArray(&newArray_StjMCParticleToFourVec);
      instance.SetDelete(&delete_StjMCParticleToFourVec);
      instance.SetDeleteArray(&deleteArray_StjMCParticleToFourVec);
      instance.SetDestructor(&destruct_StjMCParticleToFourVec);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjMCParticleToFourVec*)
   {
      return GenerateInitInstanceLocal((::StjMCParticleToFourVec*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjMCParticleToFourVec*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjMCTree_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjMCTree(void *p);
   static void deleteArray_StjMCTree(void *p);
   static void destruct_StjMCTree(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjMCTree*)
   {
      ::StjMCTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjMCTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjMCTree", ::StjMCTree::Class_Version(), "StjMCTree.h", 11,
                  typeid(::StjMCTree), DefineBehavior(ptr, ptr),
                  &::StjMCTree::Dictionary, isa_proxy, 4,
                  sizeof(::StjMCTree) );
      instance.SetDelete(&delete_StjMCTree);
      instance.SetDeleteArray(&deleteArray_StjMCTree);
      instance.SetDestructor(&destruct_StjMCTree);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjMCTree*)
   {
      return GenerateInitInstanceLocal((::StjMCTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjMCTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTrack_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTrack(void *p = 0);
   static void *newArray_StjTrack(Long_t size, void *p);
   static void delete_StjTrack(void *p);
   static void deleteArray_StjTrack(void *p);
   static void destruct_StjTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTrack*)
   {
      ::StjTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTrack", ::StjTrack::Class_Version(), "StjTrackList.h", 12,
                  typeid(::StjTrack), DefineBehavior(ptr, ptr),
                  &::StjTrack::Dictionary, isa_proxy, 4,
                  sizeof(::StjTrack) );
      instance.SetNew(&new_StjTrack);
      instance.SetNewArray(&newArray_StjTrack);
      instance.SetDelete(&delete_StjTrack);
      instance.SetDeleteArray(&deleteArray_StjTrack);
      instance.SetDestructor(&destruct_StjTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTrack*)
   {
      return GenerateInitInstanceLocal((::StjTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTPC_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjTPC(void *p);
   static void deleteArray_StjTPC(void *p);
   static void destruct_StjTPC(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTPC*)
   {
      ::StjTPC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTPC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTPC", ::StjTPC::Class_Version(), "StjTPC.h", 11,
                  typeid(::StjTPC), DefineBehavior(ptr, ptr),
                  &::StjTPC::Dictionary, isa_proxy, 4,
                  sizeof(::StjTPC) );
      instance.SetDelete(&delete_StjTPC);
      instance.SetDeleteArray(&deleteArray_StjTPC);
      instance.SetDestructor(&destruct_StjTPC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTPC*)
   {
      return GenerateInitInstanceLocal((::StjTPC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTPC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTPCNull_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTPCNull(void *p = 0);
   static void *newArray_StjTPCNull(Long_t size, void *p);
   static void delete_StjTPCNull(void *p);
   static void deleteArray_StjTPCNull(void *p);
   static void destruct_StjTPCNull(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTPCNull*)
   {
      ::StjTPCNull *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTPCNull >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTPCNull", ::StjTPCNull::Class_Version(), "StjTPCNull.h", 9,
                  typeid(::StjTPCNull), DefineBehavior(ptr, ptr),
                  &::StjTPCNull::Dictionary, isa_proxy, 4,
                  sizeof(::StjTPCNull) );
      instance.SetNew(&new_StjTPCNull);
      instance.SetNewArray(&newArray_StjTPCNull);
      instance.SetDelete(&delete_StjTPCNull);
      instance.SetDeleteArray(&deleteArray_StjTPCNull);
      instance.SetDestructor(&destruct_StjTPCNull);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTPCNull*)
   {
      return GenerateInitInstanceLocal((::StjTPCNull*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTPCNull*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTPCTree_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjTPCTree(void *p);
   static void deleteArray_StjTPCTree(void *p);
   static void destruct_StjTPCTree(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTPCTree*)
   {
      ::StjTPCTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTPCTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTPCTree", ::StjTPCTree::Class_Version(), "StjTPCTree.h", 11,
                  typeid(::StjTPCTree), DefineBehavior(ptr, ptr),
                  &::StjTPCTree::Dictionary, isa_proxy, 4,
                  sizeof(::StjTPCTree) );
      instance.SetDelete(&delete_StjTPCTree);
      instance.SetDeleteArray(&deleteArray_StjTPCTree);
      instance.SetDestructor(&destruct_StjTPCTree);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTPCTree*)
   {
      return GenerateInitInstanceLocal((::StjTPCTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTPCTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTPCTxt_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjTPCTxt(void *p);
   static void deleteArray_StjTPCTxt(void *p);
   static void destruct_StjTPCTxt(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTPCTxt*)
   {
      ::StjTPCTxt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTPCTxt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTPCTxt", ::StjTPCTxt::Class_Version(), "StjTPCTxt.h", 12,
                  typeid(::StjTPCTxt), DefineBehavior(ptr, ptr),
                  &::StjTPCTxt::Dictionary, isa_proxy, 4,
                  sizeof(::StjTPCTxt) );
      instance.SetDelete(&delete_StjTPCTxt);
      instance.SetDeleteArray(&deleteArray_StjTPCTxt);
      instance.SetDestructor(&destruct_StjTPCTxt);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTPCTxt*)
   {
      return GenerateInitInstanceLocal((::StjTPCTxt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTPCTxt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyCorrectionForTracks_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergyCorrectionForTracks(void *p = 0);
   static void *newArray_StjTowerEnergyCorrectionForTracks(Long_t size, void *p);
   static void delete_StjTowerEnergyCorrectionForTracks(void *p);
   static void deleteArray_StjTowerEnergyCorrectionForTracks(void *p);
   static void destruct_StjTowerEnergyCorrectionForTracks(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyCorrectionForTracks*)
   {
      ::StjTowerEnergyCorrectionForTracks *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyCorrectionForTracks >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyCorrectionForTracks", ::StjTowerEnergyCorrectionForTracks::Class_Version(), "StjTowerEnergyCorrectionForTracks.h", 11,
                  typeid(::StjTowerEnergyCorrectionForTracks), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyCorrectionForTracks::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyCorrectionForTracks) );
      instance.SetNew(&new_StjTowerEnergyCorrectionForTracks);
      instance.SetNewArray(&newArray_StjTowerEnergyCorrectionForTracks);
      instance.SetDelete(&delete_StjTowerEnergyCorrectionForTracks);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyCorrectionForTracks);
      instance.SetDestructor(&destruct_StjTowerEnergyCorrectionForTracks);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyCorrectionForTracks*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyCorrectionForTracks*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyCorrectionForTracks*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyCut_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjTowerEnergyCut(void *p);
   static void deleteArray_StjTowerEnergyCut(void *p);
   static void destruct_StjTowerEnergyCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyCut*)
   {
      ::StjTowerEnergyCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyCut", ::StjTowerEnergyCut::Class_Version(), "StjTowerEnergyCut.h", 11,
                  typeid(::StjTowerEnergyCut), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyCut::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyCut) );
      instance.SetDelete(&delete_StjTowerEnergyCut);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyCut);
      instance.SetDestructor(&destruct_StjTowerEnergyCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyCut*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyCut2003BemcTower_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergyCut2003BemcTower(void *p = 0);
   static void *newArray_StjTowerEnergyCut2003BemcTower(Long_t size, void *p);
   static void delete_StjTowerEnergyCut2003BemcTower(void *p);
   static void deleteArray_StjTowerEnergyCut2003BemcTower(void *p);
   static void destruct_StjTowerEnergyCut2003BemcTower(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyCut2003BemcTower*)
   {
      ::StjTowerEnergyCut2003BemcTower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyCut2003BemcTower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyCut2003BemcTower", ::StjTowerEnergyCut2003BemcTower::Class_Version(), "StjTowerEnergyCut2003BemcTower.h", 11,
                  typeid(::StjTowerEnergyCut2003BemcTower), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyCut2003BemcTower::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyCut2003BemcTower) );
      instance.SetNew(&new_StjTowerEnergyCut2003BemcTower);
      instance.SetNewArray(&newArray_StjTowerEnergyCut2003BemcTower);
      instance.SetDelete(&delete_StjTowerEnergyCut2003BemcTower);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyCut2003BemcTower);
      instance.SetDestructor(&destruct_StjTowerEnergyCut2003BemcTower);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyCut2003BemcTower*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyCut2003BemcTower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyCut2003BemcTower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyCutAdc_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergyCutAdc(void *p = 0);
   static void *newArray_StjTowerEnergyCutAdc(Long_t size, void *p);
   static void delete_StjTowerEnergyCutAdc(void *p);
   static void deleteArray_StjTowerEnergyCutAdc(void *p);
   static void destruct_StjTowerEnergyCutAdc(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyCutAdc*)
   {
      ::StjTowerEnergyCutAdc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyCutAdc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyCutAdc", ::StjTowerEnergyCutAdc::Class_Version(), "StjTowerEnergyCutAdc.h", 9,
                  typeid(::StjTowerEnergyCutAdc), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyCutAdc::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyCutAdc) );
      instance.SetNew(&new_StjTowerEnergyCutAdc);
      instance.SetNewArray(&newArray_StjTowerEnergyCutAdc);
      instance.SetDelete(&delete_StjTowerEnergyCutAdc);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyCutAdc);
      instance.SetDestructor(&destruct_StjTowerEnergyCutAdc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyCutAdc*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyCutAdc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyCutAdc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyCutBemcStatus_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergyCutBemcStatus(void *p = 0);
   static void *newArray_StjTowerEnergyCutBemcStatus(Long_t size, void *p);
   static void delete_StjTowerEnergyCutBemcStatus(void *p);
   static void deleteArray_StjTowerEnergyCutBemcStatus(void *p);
   static void destruct_StjTowerEnergyCutBemcStatus(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyCutBemcStatus*)
   {
      ::StjTowerEnergyCutBemcStatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyCutBemcStatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyCutBemcStatus", ::StjTowerEnergyCutBemcStatus::Class_Version(), "StjTowerEnergyCutBemcStatus.h", 9,
                  typeid(::StjTowerEnergyCutBemcStatus), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyCutBemcStatus::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyCutBemcStatus) );
      instance.SetNew(&new_StjTowerEnergyCutBemcStatus);
      instance.SetNewArray(&newArray_StjTowerEnergyCutBemcStatus);
      instance.SetDelete(&delete_StjTowerEnergyCutBemcStatus);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyCutBemcStatus);
      instance.SetDestructor(&destruct_StjTowerEnergyCutBemcStatus);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyCutBemcStatus*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyCutBemcStatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyCutBemcStatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyCutBemcWestOnly_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergyCutBemcWestOnly(void *p = 0);
   static void *newArray_StjTowerEnergyCutBemcWestOnly(Long_t size, void *p);
   static void delete_StjTowerEnergyCutBemcWestOnly(void *p);
   static void deleteArray_StjTowerEnergyCutBemcWestOnly(void *p);
   static void destruct_StjTowerEnergyCutBemcWestOnly(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyCutBemcWestOnly*)
   {
      ::StjTowerEnergyCutBemcWestOnly *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyCutBemcWestOnly >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyCutBemcWestOnly", ::StjTowerEnergyCutBemcWestOnly::Class_Version(), "StjTowerEnergyCutBemcWestOnly.h", 9,
                  typeid(::StjTowerEnergyCutBemcWestOnly), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyCutBemcWestOnly::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyCutBemcWestOnly) );
      instance.SetNew(&new_StjTowerEnergyCutBemcWestOnly);
      instance.SetNewArray(&newArray_StjTowerEnergyCutBemcWestOnly);
      instance.SetDelete(&delete_StjTowerEnergyCutBemcWestOnly);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyCutBemcWestOnly);
      instance.SetDestructor(&destruct_StjTowerEnergyCutBemcWestOnly);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyCutBemcWestOnly*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyCutBemcWestOnly*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyCutBemcWestOnly*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyCutEnergy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergyCutEnergy(void *p = 0);
   static void *newArray_StjTowerEnergyCutEnergy(Long_t size, void *p);
   static void delete_StjTowerEnergyCutEnergy(void *p);
   static void deleteArray_StjTowerEnergyCutEnergy(void *p);
   static void destruct_StjTowerEnergyCutEnergy(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyCutEnergy*)
   {
      ::StjTowerEnergyCutEnergy *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyCutEnergy >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyCutEnergy", ::StjTowerEnergyCutEnergy::Class_Version(), "StjTowerEnergyCutEnergy.h", 9,
                  typeid(::StjTowerEnergyCutEnergy), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyCutEnergy::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyCutEnergy) );
      instance.SetNew(&new_StjTowerEnergyCutEnergy);
      instance.SetNewArray(&newArray_StjTowerEnergyCutEnergy);
      instance.SetDelete(&delete_StjTowerEnergyCutEnergy);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyCutEnergy);
      instance.SetDestructor(&destruct_StjTowerEnergyCutEnergy);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyCutEnergy*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyCutEnergy*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyCutEnergy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyCutEt_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergyCutEt(void *p = 0);
   static void *newArray_StjTowerEnergyCutEt(Long_t size, void *p);
   static void delete_StjTowerEnergyCutEt(void *p);
   static void deleteArray_StjTowerEnergyCutEt(void *p);
   static void destruct_StjTowerEnergyCutEt(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyCutEt*)
   {
      ::StjTowerEnergyCutEt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyCutEt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyCutEt", ::StjTowerEnergyCutEt::Class_Version(), "StjTowerEnergyCutEt.h", 12,
                  typeid(::StjTowerEnergyCutEt), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyCutEt::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyCutEt) );
      instance.SetNew(&new_StjTowerEnergyCutEt);
      instance.SetNewArray(&newArray_StjTowerEnergyCutEt);
      instance.SetDelete(&delete_StjTowerEnergyCutEt);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyCutEt);
      instance.SetDestructor(&destruct_StjTowerEnergyCutEt);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyCutEt*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyCutEt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyCutEt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyListCut_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergyListCut(void *p = 0);
   static void *newArray_StjTowerEnergyListCut(Long_t size, void *p);
   static void delete_StjTowerEnergyListCut(void *p);
   static void deleteArray_StjTowerEnergyListCut(void *p);
   static void destruct_StjTowerEnergyListCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyListCut*)
   {
      ::StjTowerEnergyListCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyListCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyListCut", ::StjTowerEnergyListCut::Class_Version(), "StjTowerEnergyListCut.h", 14,
                  typeid(::StjTowerEnergyListCut), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyListCut::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyListCut) );
      instance.SetNew(&new_StjTowerEnergyListCut);
      instance.SetNewArray(&newArray_StjTowerEnergyListCut);
      instance.SetDelete(&delete_StjTowerEnergyListCut);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyListCut);
      instance.SetDestructor(&destruct_StjTowerEnergyListCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyListCut*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyListCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyListCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyVariation_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjTowerEnergyVariation(void *p);
   static void deleteArray_StjTowerEnergyVariation(void *p);
   static void destruct_StjTowerEnergyVariation(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyVariation*)
   {
      ::StjTowerEnergyVariation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyVariation >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyVariation", ::StjTowerEnergyVariation::Class_Version(), "StjTowerEnergyVariation.h", 11,
                  typeid(::StjTowerEnergyVariation), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyVariation::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyVariation) );
      instance.SetDelete(&delete_StjTowerEnergyVariation);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyVariation);
      instance.SetDestructor(&destruct_StjTowerEnergyVariation);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyVariation*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyVariation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyVariation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyListVariation_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergyListVariation(void *p = 0);
   static void *newArray_StjTowerEnergyListVariation(Long_t size, void *p);
   static void delete_StjTowerEnergyListVariation(void *p);
   static void deleteArray_StjTowerEnergyListVariation(void *p);
   static void destruct_StjTowerEnergyListVariation(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyListVariation*)
   {
      ::StjTowerEnergyListVariation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyListVariation >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyListVariation", ::StjTowerEnergyListVariation::Class_Version(), "StjTowerEnergyListVariation.h", 14,
                  typeid(::StjTowerEnergyListVariation), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyListVariation::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyListVariation) );
      instance.SetNew(&new_StjTowerEnergyListVariation);
      instance.SetNewArray(&newArray_StjTowerEnergyListVariation);
      instance.SetDelete(&delete_StjTowerEnergyListVariation);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyListVariation);
      instance.SetDestructor(&destruct_StjTowerEnergyListVariation);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyListVariation*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyListVariation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyListVariation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyPrint_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergyPrint(void *p = 0);
   static void *newArray_StjTowerEnergyPrint(Long_t size, void *p);
   static void delete_StjTowerEnergyPrint(void *p);
   static void deleteArray_StjTowerEnergyPrint(void *p);
   static void destruct_StjTowerEnergyPrint(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyPrint*)
   {
      ::StjTowerEnergyPrint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyPrint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyPrint", ::StjTowerEnergyPrint::Class_Version(), "StjTowerEnergyPrint.h", 14,
                  typeid(::StjTowerEnergyPrint), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyPrint::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyPrint) );
      instance.SetNew(&new_StjTowerEnergyPrint);
      instance.SetNewArray(&newArray_StjTowerEnergyPrint);
      instance.SetDelete(&delete_StjTowerEnergyPrint);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyPrint);
      instance.SetDestructor(&destruct_StjTowerEnergyPrint);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyPrint*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyPrint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyPrint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyToTLorentzVector_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergyToTLorentzVector(void *p = 0);
   static void *newArray_StjTowerEnergyToTLorentzVector(Long_t size, void *p);
   static void delete_StjTowerEnergyToTLorentzVector(void *p);
   static void deleteArray_StjTowerEnergyToTLorentzVector(void *p);
   static void destruct_StjTowerEnergyToTLorentzVector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyToTLorentzVector*)
   {
      ::StjTowerEnergyToTLorentzVector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyToTLorentzVector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyToTLorentzVector", ::StjTowerEnergyToTLorentzVector::Class_Version(), "StjTowerEnergyToTLorentzVector.h", 13,
                  typeid(::StjTowerEnergyToTLorentzVector), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyToTLorentzVector::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyToTLorentzVector) );
      instance.SetNew(&new_StjTowerEnergyToTLorentzVector);
      instance.SetNewArray(&newArray_StjTowerEnergyToTLorentzVector);
      instance.SetDelete(&delete_StjTowerEnergyToTLorentzVector);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyToTLorentzVector);
      instance.SetDestructor(&destruct_StjTowerEnergyToTLorentzVector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyToTLorentzVector*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyToTLorentzVector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyToTLorentzVector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyToFourVec_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergyToFourVec(void *p = 0);
   static void *newArray_StjTowerEnergyToFourVec(Long_t size, void *p);
   static void delete_StjTowerEnergyToFourVec(void *p);
   static void deleteArray_StjTowerEnergyToFourVec(void *p);
   static void destruct_StjTowerEnergyToFourVec(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyToFourVec*)
   {
      ::StjTowerEnergyToFourVec *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyToFourVec >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyToFourVec", ::StjTowerEnergyToFourVec::Class_Version(), "StjTowerEnergyToFourVec.h", 15,
                  typeid(::StjTowerEnergyToFourVec), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyToFourVec::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyToFourVec) );
      instance.SetNew(&new_StjTowerEnergyToFourVec);
      instance.SetNewArray(&newArray_StjTowerEnergyToFourVec);
      instance.SetDelete(&delete_StjTowerEnergyToFourVec);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyToFourVec);
      instance.SetDestructor(&destruct_StjTowerEnergyToFourVec);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyToFourVec*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyToFourVec*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyToFourVec*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTowerEnergyVariationEnergy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTowerEnergyVariationEnergy(void *p = 0);
   static void *newArray_StjTowerEnergyVariationEnergy(Long_t size, void *p);
   static void delete_StjTowerEnergyVariationEnergy(void *p);
   static void deleteArray_StjTowerEnergyVariationEnergy(void *p);
   static void destruct_StjTowerEnergyVariationEnergy(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTowerEnergyVariationEnergy*)
   {
      ::StjTowerEnergyVariationEnergy *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTowerEnergyVariationEnergy >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTowerEnergyVariationEnergy", ::StjTowerEnergyVariationEnergy::Class_Version(), "StjTowerEnergyVariationEnergy.h", 9,
                  typeid(::StjTowerEnergyVariationEnergy), DefineBehavior(ptr, ptr),
                  &::StjTowerEnergyVariationEnergy::Dictionary, isa_proxy, 4,
                  sizeof(::StjTowerEnergyVariationEnergy) );
      instance.SetNew(&new_StjTowerEnergyVariationEnergy);
      instance.SetNewArray(&newArray_StjTowerEnergyVariationEnergy);
      instance.SetDelete(&delete_StjTowerEnergyVariationEnergy);
      instance.SetDeleteArray(&deleteArray_StjTowerEnergyVariationEnergy);
      instance.SetDestructor(&destruct_StjTowerEnergyVariationEnergy);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTowerEnergyVariationEnergy*)
   {
      return GenerateInitInstanceLocal((::StjTowerEnergyVariationEnergy*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTowerEnergyVariationEnergy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTrackCut_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjTrackCut(void *p);
   static void deleteArray_StjTrackCut(void *p);
   static void destruct_StjTrackCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTrackCut*)
   {
      ::StjTrackCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTrackCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTrackCut", ::StjTrackCut::Class_Version(), "StjTrackCut.h", 11,
                  typeid(::StjTrackCut), DefineBehavior(ptr, ptr),
                  &::StjTrackCut::Dictionary, isa_proxy, 4,
                  sizeof(::StjTrackCut) );
      instance.SetDelete(&delete_StjTrackCut);
      instance.SetDeleteArray(&deleteArray_StjTrackCut);
      instance.SetDestructor(&destruct_StjTrackCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTrackCut*)
   {
      return GenerateInitInstanceLocal((::StjTrackCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTrackCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTrackCutDca_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTrackCutDca(void *p = 0);
   static void *newArray_StjTrackCutDca(Long_t size, void *p);
   static void delete_StjTrackCutDca(void *p);
   static void deleteArray_StjTrackCutDca(void *p);
   static void destruct_StjTrackCutDca(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTrackCutDca*)
   {
      ::StjTrackCutDca *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTrackCutDca >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTrackCutDca", ::StjTrackCutDca::Class_Version(), "StjTrackCutDca.h", 9,
                  typeid(::StjTrackCutDca), DefineBehavior(ptr, ptr),
                  &::StjTrackCutDca::Dictionary, isa_proxy, 4,
                  sizeof(::StjTrackCutDca) );
      instance.SetNew(&new_StjTrackCutDca);
      instance.SetNewArray(&newArray_StjTrackCutDca);
      instance.SetDelete(&delete_StjTrackCutDca);
      instance.SetDeleteArray(&deleteArray_StjTrackCutDca);
      instance.SetDestructor(&destruct_StjTrackCutDca);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTrackCutDca*)
   {
      return GenerateInitInstanceLocal((::StjTrackCutDca*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTrackCutDca*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTrackCutDcaPtDependent_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTrackCutDcaPtDependent(void *p = 0);
   static void *newArray_StjTrackCutDcaPtDependent(Long_t size, void *p);
   static void delete_StjTrackCutDcaPtDependent(void *p);
   static void deleteArray_StjTrackCutDcaPtDependent(void *p);
   static void destruct_StjTrackCutDcaPtDependent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTrackCutDcaPtDependent*)
   {
      ::StjTrackCutDcaPtDependent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTrackCutDcaPtDependent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTrackCutDcaPtDependent", ::StjTrackCutDcaPtDependent::Class_Version(), "StjTrackCutDcaPtDependent.h", 9,
                  typeid(::StjTrackCutDcaPtDependent), DefineBehavior(ptr, ptr),
                  &::StjTrackCutDcaPtDependent::Dictionary, isa_proxy, 4,
                  sizeof(::StjTrackCutDcaPtDependent) );
      instance.SetNew(&new_StjTrackCutDcaPtDependent);
      instance.SetNewArray(&newArray_StjTrackCutDcaPtDependent);
      instance.SetDelete(&delete_StjTrackCutDcaPtDependent);
      instance.SetDeleteArray(&deleteArray_StjTrackCutDcaPtDependent);
      instance.SetDestructor(&destruct_StjTrackCutDcaPtDependent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTrackCutDcaPtDependent*)
   {
      return GenerateInitInstanceLocal((::StjTrackCutDcaPtDependent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTrackCutDcaPtDependent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTrackCutEta_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTrackCutEta(void *p = 0);
   static void *newArray_StjTrackCutEta(Long_t size, void *p);
   static void delete_StjTrackCutEta(void *p);
   static void deleteArray_StjTrackCutEta(void *p);
   static void destruct_StjTrackCutEta(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTrackCutEta*)
   {
      ::StjTrackCutEta *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTrackCutEta >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTrackCutEta", ::StjTrackCutEta::Class_Version(), "StjTrackCutEta.h", 9,
                  typeid(::StjTrackCutEta), DefineBehavior(ptr, ptr),
                  &::StjTrackCutEta::Dictionary, isa_proxy, 4,
                  sizeof(::StjTrackCutEta) );
      instance.SetNew(&new_StjTrackCutEta);
      instance.SetNewArray(&newArray_StjTrackCutEta);
      instance.SetDelete(&delete_StjTrackCutEta);
      instance.SetDeleteArray(&deleteArray_StjTrackCutEta);
      instance.SetDestructor(&destruct_StjTrackCutEta);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTrackCutEta*)
   {
      return GenerateInitInstanceLocal((::StjTrackCutEta*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTrackCutEta*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTrackCutFlag_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTrackCutFlag(void *p = 0);
   static void *newArray_StjTrackCutFlag(Long_t size, void *p);
   static void delete_StjTrackCutFlag(void *p);
   static void deleteArray_StjTrackCutFlag(void *p);
   static void destruct_StjTrackCutFlag(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTrackCutFlag*)
   {
      ::StjTrackCutFlag *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTrackCutFlag >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTrackCutFlag", ::StjTrackCutFlag::Class_Version(), "StjTrackCutFlag.h", 9,
                  typeid(::StjTrackCutFlag), DefineBehavior(ptr, ptr),
                  &::StjTrackCutFlag::Dictionary, isa_proxy, 4,
                  sizeof(::StjTrackCutFlag) );
      instance.SetNew(&new_StjTrackCutFlag);
      instance.SetNewArray(&newArray_StjTrackCutFlag);
      instance.SetDelete(&delete_StjTrackCutFlag);
      instance.SetDeleteArray(&deleteArray_StjTrackCutFlag);
      instance.SetDestructor(&destruct_StjTrackCutFlag);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTrackCutFlag*)
   {
      return GenerateInitInstanceLocal((::StjTrackCutFlag*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTrackCutFlag*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTrackCutNHits_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTrackCutNHits(void *p = 0);
   static void *newArray_StjTrackCutNHits(Long_t size, void *p);
   static void delete_StjTrackCutNHits(void *p);
   static void deleteArray_StjTrackCutNHits(void *p);
   static void destruct_StjTrackCutNHits(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTrackCutNHits*)
   {
      ::StjTrackCutNHits *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTrackCutNHits >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTrackCutNHits", ::StjTrackCutNHits::Class_Version(), "StjTrackCutNHits.h", 9,
                  typeid(::StjTrackCutNHits), DefineBehavior(ptr, ptr),
                  &::StjTrackCutNHits::Dictionary, isa_proxy, 4,
                  sizeof(::StjTrackCutNHits) );
      instance.SetNew(&new_StjTrackCutNHits);
      instance.SetNewArray(&newArray_StjTrackCutNHits);
      instance.SetDelete(&delete_StjTrackCutNHits);
      instance.SetDeleteArray(&deleteArray_StjTrackCutNHits);
      instance.SetDestructor(&destruct_StjTrackCutNHits);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTrackCutNHits*)
   {
      return GenerateInitInstanceLocal((::StjTrackCutNHits*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTrackCutNHits*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTrackCutPossibleHitRatio_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTrackCutPossibleHitRatio(void *p = 0);
   static void *newArray_StjTrackCutPossibleHitRatio(Long_t size, void *p);
   static void delete_StjTrackCutPossibleHitRatio(void *p);
   static void deleteArray_StjTrackCutPossibleHitRatio(void *p);
   static void destruct_StjTrackCutPossibleHitRatio(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTrackCutPossibleHitRatio*)
   {
      ::StjTrackCutPossibleHitRatio *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTrackCutPossibleHitRatio >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTrackCutPossibleHitRatio", ::StjTrackCutPossibleHitRatio::Class_Version(), "StjTrackCutPossibleHitRatio.h", 9,
                  typeid(::StjTrackCutPossibleHitRatio), DefineBehavior(ptr, ptr),
                  &::StjTrackCutPossibleHitRatio::Dictionary, isa_proxy, 4,
                  sizeof(::StjTrackCutPossibleHitRatio) );
      instance.SetNew(&new_StjTrackCutPossibleHitRatio);
      instance.SetNewArray(&newArray_StjTrackCutPossibleHitRatio);
      instance.SetDelete(&delete_StjTrackCutPossibleHitRatio);
      instance.SetDeleteArray(&deleteArray_StjTrackCutPossibleHitRatio);
      instance.SetDestructor(&destruct_StjTrackCutPossibleHitRatio);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTrackCutPossibleHitRatio*)
   {
      return GenerateInitInstanceLocal((::StjTrackCutPossibleHitRatio*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTrackCutPossibleHitRatio*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTrackListCut_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTrackListCut(void *p = 0);
   static void *newArray_StjTrackListCut(Long_t size, void *p);
   static void delete_StjTrackListCut(void *p);
   static void deleteArray_StjTrackListCut(void *p);
   static void destruct_StjTrackListCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTrackListCut*)
   {
      ::StjTrackListCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTrackListCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTrackListCut", ::StjTrackListCut::Class_Version(), "StjTrackListCut.h", 14,
                  typeid(::StjTrackListCut), DefineBehavior(ptr, ptr),
                  &::StjTrackListCut::Dictionary, isa_proxy, 4,
                  sizeof(::StjTrackListCut) );
      instance.SetNew(&new_StjTrackListCut);
      instance.SetNewArray(&newArray_StjTrackListCut);
      instance.SetDelete(&delete_StjTrackListCut);
      instance.SetDeleteArray(&deleteArray_StjTrackListCut);
      instance.SetDestructor(&destruct_StjTrackListCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTrackListCut*)
   {
      return GenerateInitInstanceLocal((::StjTrackListCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTrackListCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTrackPrint_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTrackPrint(void *p = 0);
   static void *newArray_StjTrackPrint(Long_t size, void *p);
   static void delete_StjTrackPrint(void *p);
   static void deleteArray_StjTrackPrint(void *p);
   static void destruct_StjTrackPrint(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTrackPrint*)
   {
      ::StjTrackPrint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTrackPrint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTrackPrint", ::StjTrackPrint::Class_Version(), "StjTrackPrint.h", 14,
                  typeid(::StjTrackPrint), DefineBehavior(ptr, ptr),
                  &::StjTrackPrint::Dictionary, isa_proxy, 4,
                  sizeof(::StjTrackPrint) );
      instance.SetNew(&new_StjTrackPrint);
      instance.SetNewArray(&newArray_StjTrackPrint);
      instance.SetDelete(&delete_StjTrackPrint);
      instance.SetDeleteArray(&deleteArray_StjTrackPrint);
      instance.SetDestructor(&destruct_StjTrackPrint);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTrackPrint*)
   {
      return GenerateInitInstanceLocal((::StjTrackPrint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTrackPrint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTrackToTLorentzVector_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTrackToTLorentzVector(void *p = 0);
   static void *newArray_StjTrackToTLorentzVector(Long_t size, void *p);
   static void delete_StjTrackToTLorentzVector(void *p);
   static void deleteArray_StjTrackToTLorentzVector(void *p);
   static void destruct_StjTrackToTLorentzVector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTrackToTLorentzVector*)
   {
      ::StjTrackToTLorentzVector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTrackToTLorentzVector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTrackToTLorentzVector", ::StjTrackToTLorentzVector::Class_Version(), "StjTrackToTLorentzVector.h", 13,
                  typeid(::StjTrackToTLorentzVector), DefineBehavior(ptr, ptr),
                  &::StjTrackToTLorentzVector::Dictionary, isa_proxy, 4,
                  sizeof(::StjTrackToTLorentzVector) );
      instance.SetNew(&new_StjTrackToTLorentzVector);
      instance.SetNewArray(&newArray_StjTrackToTLorentzVector);
      instance.SetDelete(&delete_StjTrackToTLorentzVector);
      instance.SetDeleteArray(&deleteArray_StjTrackToTLorentzVector);
      instance.SetDestructor(&destruct_StjTrackToTLorentzVector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTrackToTLorentzVector*)
   {
      return GenerateInitInstanceLocal((::StjTrackToTLorentzVector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTrackToTLorentzVector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTrackToFourVec_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTrackToFourVec(void *p = 0);
   static void *newArray_StjTrackToFourVec(Long_t size, void *p);
   static void delete_StjTrackToFourVec(void *p);
   static void deleteArray_StjTrackToFourVec(void *p);
   static void destruct_StjTrackToFourVec(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTrackToFourVec*)
   {
      ::StjTrackToFourVec *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTrackToFourVec >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTrackToFourVec", ::StjTrackToFourVec::Class_Version(), "StjTrackToFourVec.h", 15,
                  typeid(::StjTrackToFourVec), DefineBehavior(ptr, ptr),
                  &::StjTrackToFourVec::Dictionary, isa_proxy, 4,
                  sizeof(::StjTrackToFourVec) );
      instance.SetNew(&new_StjTrackToFourVec);
      instance.SetNewArray(&newArray_StjTrackToFourVec);
      instance.SetDelete(&delete_StjTrackToFourVec);
      instance.SetDeleteArray(&deleteArray_StjTrackToFourVec);
      instance.SetDestructor(&destruct_StjTrackToFourVec);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTrackToFourVec*)
   {
      return GenerateInitInstanceLocal((::StjTrackToFourVec*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTrackToFourVec*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjTrackTowerEnergyListToFourVecList_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StjTrackTowerEnergyListToFourVecList(void *p = 0);
   static void *newArray_StjTrackTowerEnergyListToFourVecList(Long_t size, void *p);
   static void delete_StjTrackTowerEnergyListToFourVecList(void *p);
   static void deleteArray_StjTrackTowerEnergyListToFourVecList(void *p);
   static void destruct_StjTrackTowerEnergyListToFourVecList(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjTrackTowerEnergyListToFourVecList*)
   {
      ::StjTrackTowerEnergyListToFourVecList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjTrackTowerEnergyListToFourVecList >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjTrackTowerEnergyListToFourVecList", ::StjTrackTowerEnergyListToFourVecList::Class_Version(), "StjTrackTowerEnergyListToFourVecList.h", 15,
                  typeid(::StjTrackTowerEnergyListToFourVecList), DefineBehavior(ptr, ptr),
                  &::StjTrackTowerEnergyListToFourVecList::Dictionary, isa_proxy, 4,
                  sizeof(::StjTrackTowerEnergyListToFourVecList) );
      instance.SetNew(&new_StjTrackTowerEnergyListToFourVecList);
      instance.SetNewArray(&newArray_StjTrackTowerEnergyListToFourVecList);
      instance.SetDelete(&delete_StjTrackTowerEnergyListToFourVecList);
      instance.SetDeleteArray(&deleteArray_StjTrackTowerEnergyListToFourVecList);
      instance.SetDestructor(&destruct_StjTrackTowerEnergyListToFourVecList);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjTrackTowerEnergyListToFourVecList*)
   {
      return GenerateInitInstanceLocal((::StjTrackTowerEnergyListToFourVecList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjTrackTowerEnergyListToFourVecList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjDijetListTrigger_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjDijetListTrigger(void *p);
   static void deleteArray_StjDijetListTrigger(void *p);
   static void destruct_StjDijetListTrigger(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjDijetListTrigger*)
   {
      ::StjDijetListTrigger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjDijetListTrigger >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjDijetListTrigger", ::StjDijetListTrigger::Class_Version(), "StjDijetListTrigger.h", 11,
                  typeid(::StjDijetListTrigger), DefineBehavior(ptr, ptr),
                  &::StjDijetListTrigger::Dictionary, isa_proxy, 4,
                  sizeof(::StjDijetListTrigger) );
      instance.SetDelete(&delete_StjDijetListTrigger);
      instance.SetDeleteArray(&deleteArray_StjDijetListTrigger);
      instance.SetDestructor(&destruct_StjDijetListTrigger);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjDijetListTrigger*)
   {
      return GenerateInitInstanceLocal((::StjDijetListTrigger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjDijetListTrigger*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjDijetListTriggerBJP_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjDijetListTriggerBJP(void *p);
   static void deleteArray_StjDijetListTriggerBJP(void *p);
   static void destruct_StjDijetListTriggerBJP(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjDijetListTriggerBJP*)
   {
      ::StjDijetListTriggerBJP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjDijetListTriggerBJP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjDijetListTriggerBJP", ::StjDijetListTriggerBJP::Class_Version(), "StjDijetListTriggerBJP.h", 12,
                  typeid(::StjDijetListTriggerBJP), DefineBehavior(ptr, ptr),
                  &::StjDijetListTriggerBJP::Dictionary, isa_proxy, 4,
                  sizeof(::StjDijetListTriggerBJP) );
      instance.SetDelete(&delete_StjDijetListTriggerBJP);
      instance.SetDeleteArray(&deleteArray_StjDijetListTriggerBJP);
      instance.SetDestructor(&destruct_StjDijetListTriggerBJP);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjDijetListTriggerBJP*)
   {
      return GenerateInitInstanceLocal((::StjDijetListTriggerBJP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjDijetListTriggerBJP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StjDijetListTriggerBHT_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StjDijetListTriggerBHT(void *p);
   static void deleteArray_StjDijetListTriggerBHT(void *p);
   static void destruct_StjDijetListTriggerBHT(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StjDijetListTriggerBHT*)
   {
      ::StjDijetListTriggerBHT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StjDijetListTriggerBHT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StjDijetListTriggerBHT", ::StjDijetListTriggerBHT::Class_Version(), "StjDijetListTriggerBHT.h", 11,
                  typeid(::StjDijetListTriggerBHT), DefineBehavior(ptr, ptr),
                  &::StjDijetListTriggerBHT::Dictionary, isa_proxy, 4,
                  sizeof(::StjDijetListTriggerBHT) );
      instance.SetDelete(&delete_StjDijetListTriggerBHT);
      instance.SetDeleteArray(&deleteArray_StjDijetListTriggerBHT);
      instance.SetDestructor(&destruct_StjDijetListTriggerBHT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StjDijetListTriggerBHT*)
   {
      return GenerateInitInstanceLocal((::StjDijetListTriggerBHT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StjDijetListTriggerBHT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *StjTowerEnergy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergy::Class_Name()
{
   return "StjTowerEnergy";
}

//______________________________________________________________________________
const char *StjTowerEnergy::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergy::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergy::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergy::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjBEMC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjBEMC::Class_Name()
{
   return "StjBEMC";
}

//______________________________________________________________________________
const char *StjBEMC::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjBEMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjBEMC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjBEMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjBEMC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjBEMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjBEMC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjBEMC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjBEMCNull::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjBEMCNull::Class_Name()
{
   return "StjBEMCNull";
}

//______________________________________________________________________________
const char *StjBEMCNull::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjBEMCNull*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjBEMCNull::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjBEMCNull*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjBEMCNull::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjBEMCNull*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjBEMCNull::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjBEMCNull*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjBEMCTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjBEMCTree::Class_Name()
{
   return "StjBEMCTree";
}

//______________________________________________________________________________
const char *StjBEMCTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjBEMCTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjBEMCTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjBEMCTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjBEMCTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjBEMCTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjBEMCTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjBEMCTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjBEMCTxt::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjBEMCTxt::Class_Name()
{
   return "StjBEMCTxt";
}

//______________________________________________________________________________
const char *StjBEMCTxt::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjBEMCTxt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjBEMCTxt::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjBEMCTxt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjBEMCTxt::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjBEMCTxt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjBEMCTxt::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjBEMCTxt*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjFourVec::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjFourVec::Class_Name()
{
   return "StjFourVec";
}

//______________________________________________________________________________
const char *StjFourVec::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVec*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjFourVec::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVec*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjFourVec::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVec*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjFourVec::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVec*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjJet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjJet::Class_Name()
{
   return "StjJet";
}

//______________________________________________________________________________
const char *StjJet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjJet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjJet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjJet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjDijet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjDijet::Class_Name()
{
   return "StjDijet";
}

//______________________________________________________________________________
const char *StjDijet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjDijet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjDijet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjDijet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjDijetCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjDijetCut::Class_Name()
{
   return "StjDijetCut";
}

//______________________________________________________________________________
const char *StjDijetCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjDijetCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjDijetCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjDijetCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjDijetCutAsymmetricPt::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjDijetCutAsymmetricPt::Class_Name()
{
   return "StjDijetCutAsymmetricPt";
}

//______________________________________________________________________________
const char *StjDijetCutAsymmetricPt::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutAsymmetricPt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjDijetCutAsymmetricPt::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutAsymmetricPt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjDijetCutAsymmetricPt::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutAsymmetricPt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjDijetCutAsymmetricPt::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutAsymmetricPt*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjDijetCutDPhi::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjDijetCutDPhi::Class_Name()
{
   return "StjDijetCutDPhi";
}

//______________________________________________________________________________
const char *StjDijetCutDPhi::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutDPhi*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjDijetCutDPhi::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutDPhi*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjDijetCutDPhi::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutDPhi*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjDijetCutDPhi::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutDPhi*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjJetCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjJetCut::Class_Name()
{
   return "StjJetCut";
}

//______________________________________________________________________________
const char *StjJetCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjJetCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjJetCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjJetCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjJetCutEta::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjJetCutEta::Class_Name()
{
   return "StjJetCutEta";
}

//______________________________________________________________________________
const char *StjJetCutEta::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutEta*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjJetCutEta::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutEta*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjJetCutEta::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutEta*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjJetCutEta::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutEta*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjDijetCutEta::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjDijetCutEta::Class_Name()
{
   return "StjDijetCutEta";
}

//______________________________________________________________________________
const char *StjDijetCutEta::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutEta*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjDijetCutEta::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutEta*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjDijetCutEta::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutEta*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjDijetCutEta::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutEta*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjDijetCutEta3MinusEta4::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjDijetCutEta3MinusEta4::Class_Name()
{
   return "StjDijetCutEta3MinusEta4";
}

//______________________________________________________________________________
const char *StjDijetCutEta3MinusEta4::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutEta3MinusEta4*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjDijetCutEta3MinusEta4::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutEta3MinusEta4*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjDijetCutEta3MinusEta4::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutEta3MinusEta4*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjDijetCutEta3MinusEta4::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutEta3MinusEta4*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjFourVecCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjFourVecCut::Class_Name()
{
   return "StjFourVecCut";
}

//______________________________________________________________________________
const char *StjFourVecCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjFourVecCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjFourVecCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjFourVecCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjFourVecListCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjFourVecListCut::Class_Name()
{
   return "StjFourVecListCut";
}

//______________________________________________________________________________
const char *StjFourVecListCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecListCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjFourVecListCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecListCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjFourVecListCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecListCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjFourVecListCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecListCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjJetCutTrgBHT::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjJetCutTrgBHT::Class_Name()
{
   return "StjJetCutTrgBHT";
}

//______________________________________________________________________________
const char *StjJetCutTrgBHT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutTrgBHT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjJetCutTrgBHT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutTrgBHT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjJetCutTrgBHT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutTrgBHT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjJetCutTrgBHT::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutTrgBHT*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjDijetCutTrgBHT::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjDijetCutTrgBHT::Class_Name()
{
   return "StjDijetCutTrgBHT";
}

//______________________________________________________________________________
const char *StjDijetCutTrgBHT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutTrgBHT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjDijetCutTrgBHT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutTrgBHT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjDijetCutTrgBHT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutTrgBHT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjDijetCutTrgBHT::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutTrgBHT*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjJetCutTrgBJP::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjJetCutTrgBJP::Class_Name()
{
   return "StjJetCutTrgBJP";
}

//______________________________________________________________________________
const char *StjJetCutTrgBJP::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutTrgBJP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjJetCutTrgBJP::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutTrgBJP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjJetCutTrgBJP::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutTrgBJP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjJetCutTrgBJP::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutTrgBJP*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjDijetCutTrgBJP::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjDijetCutTrgBJP::Class_Name()
{
   return "StjDijetCutTrgBJP";
}

//______________________________________________________________________________
const char *StjDijetCutTrgBJP::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutTrgBJP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjDijetCutTrgBJP::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutTrgBJP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjDijetCutTrgBJP::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutTrgBJP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjDijetCutTrgBJP::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetCutTrgBJP*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjDijetListCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjDijetListCut::Class_Name()
{
   return "StjDijetListCut";
}

//______________________________________________________________________________
const char *StjDijetListCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjDijetListCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjDijetListCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjDijetListCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjDijetPrint::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjDijetPrint::Class_Name()
{
   return "StjDijetPrint";
}

//______________________________________________________________________________
const char *StjDijetPrint::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetPrint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjDijetPrint::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetPrint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjDijetPrint::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetPrint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjDijetPrint::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetPrint*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjEEMC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjEEMC::Class_Name()
{
   return "StjEEMC";
}

//______________________________________________________________________________
const char *StjEEMC::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjEEMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjEEMC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjEEMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjEEMC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjEEMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjEEMC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjEEMC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjEEMCNull::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjEEMCNull::Class_Name()
{
   return "StjEEMCNull";
}

//______________________________________________________________________________
const char *StjEEMCNull::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjEEMCNull*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjEEMCNull::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjEEMCNull*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjEEMCNull::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjEEMCNull*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjEEMCNull::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjEEMCNull*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjEEMCTxt::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjEEMCTxt::Class_Name()
{
   return "StjEEMCTxt";
}

//______________________________________________________________________________
const char *StjEEMCTxt::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjEEMCTxt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjEEMCTxt::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjEEMCTxt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjEEMCTxt::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjEEMCTxt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjEEMCTxt::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjEEMCTxt*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjFormDijet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjFormDijet::Class_Name()
{
   return "StjFormDijet";
}

//______________________________________________________________________________
const char *StjFormDijet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFormDijet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjFormDijet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFormDijet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjFormDijet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFormDijet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjFormDijet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFormDijet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjFourVecCutPt::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjFourVecCutPt::Class_Name()
{
   return "StjFourVecCutPt";
}

//______________________________________________________________________________
const char *StjFourVecCutPt::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCutPt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjFourVecCutPt::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCutPt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjFourVecCutPt::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCutPt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjFourVecCutPt::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCutPt*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjFourVecCutTrgBHT::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjFourVecCutTrgBHT::Class_Name()
{
   return "StjFourVecCutTrgBHT";
}

//______________________________________________________________________________
const char *StjFourVecCutTrgBHT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCutTrgBHT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjFourVecCutTrgBHT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCutTrgBHT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjFourVecCutTrgBHT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCutTrgBHT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjFourVecCutTrgBHT::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCutTrgBHT*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjFourVecCutTrgBJP::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjFourVecCutTrgBJP::Class_Name()
{
   return "StjFourVecCutTrgBJP";
}

//______________________________________________________________________________
const char *StjFourVecCutTrgBJP::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCutTrgBJP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjFourVecCutTrgBJP::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCutTrgBJP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjFourVecCutTrgBJP::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCutTrgBJP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjFourVecCutTrgBJP::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecCutTrgBJP*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjFourVecPrint::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjFourVecPrint::Class_Name()
{
   return "StjFourVecPrint";
}

//______________________________________________________________________________
const char *StjFourVecPrint::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecPrint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjFourVecPrint::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecPrint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjFourVecPrint::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecPrint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjFourVecPrint::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjFourVecPrint*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjJetCutDetectorEta::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjJetCutDetectorEta::Class_Name()
{
   return "StjJetCutDetectorEta";
}

//______________________________________________________________________________
const char *StjJetCutDetectorEta::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutDetectorEta*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjJetCutDetectorEta::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutDetectorEta*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjJetCutDetectorEta::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutDetectorEta*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjJetCutDetectorEta::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutDetectorEta*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjJetCutNFourVecs::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjJetCutNFourVecs::Class_Name()
{
   return "StjJetCutNFourVecs";
}

//______________________________________________________________________________
const char *StjJetCutNFourVecs::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutNFourVecs*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjJetCutNFourVecs::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutNFourVecs*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjJetCutNFourVecs::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutNFourVecs*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjJetCutNFourVecs::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutNFourVecs*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjJetCutPt::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjJetCutPt::Class_Name()
{
   return "StjJetCutPt";
}

//______________________________________________________________________________
const char *StjJetCutPt::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutPt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjJetCutPt::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutPt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjJetCutPt::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutPt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjJetCutPt::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetCutPt*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjJetListCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjJetListCut::Class_Name()
{
   return "StjJetListCut";
}

//______________________________________________________________________________
const char *StjJetListCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetListCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjJetListCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetListCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjJetListCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetListCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjJetListCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetListCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjJetPrint::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjJetPrint::Class_Name()
{
   return "StjJetPrint";
}

//______________________________________________________________________________
const char *StjJetPrint::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetPrint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjJetPrint::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjJetPrint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjJetPrint::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetPrint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjJetPrint::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjJetPrint*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjMCParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjMCParticle::Class_Name()
{
   return "StjMCParticle";
}

//______________________________________________________________________________
const char *StjMCParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjMCParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjMCParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjMCParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjMC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjMC::Class_Name()
{
   return "StjMC";
}

//______________________________________________________________________________
const char *StjMC::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjMC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjMC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjMC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjMCNull::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjMCNull::Class_Name()
{
   return "StjMCNull";
}

//______________________________________________________________________________
const char *StjMCNull::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCNull*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjMCNull::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCNull*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjMCNull::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCNull*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjMCNull::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCNull*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjMCParticleCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjMCParticleCut::Class_Name()
{
   return "StjMCParticleCut";
}

//______________________________________________________________________________
const char *StjMCParticleCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjMCParticleCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjMCParticleCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjMCParticleCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjMCParticleCutEta::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjMCParticleCutEta::Class_Name()
{
   return "StjMCParticleCutEta";
}

//______________________________________________________________________________
const char *StjMCParticleCutEta::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCutEta*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjMCParticleCutEta::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCutEta*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjMCParticleCutEta::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCutEta*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjMCParticleCutEta::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCutEta*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjMCParticleCutEtaForStatus::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjMCParticleCutEtaForStatus::Class_Name()
{
   return "StjMCParticleCutEtaForStatus";
}

//______________________________________________________________________________
const char *StjMCParticleCutEtaForStatus::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCutEtaForStatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjMCParticleCutEtaForStatus::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCutEtaForStatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjMCParticleCutEtaForStatus::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCutEtaForStatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjMCParticleCutEtaForStatus::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCutEtaForStatus*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjMCParticleCutStatus::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjMCParticleCutStatus::Class_Name()
{
   return "StjMCParticleCutStatus";
}

//______________________________________________________________________________
const char *StjMCParticleCutStatus::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCutStatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjMCParticleCutStatus::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCutStatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjMCParticleCutStatus::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCutStatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjMCParticleCutStatus::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleCutStatus*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjMCParticleListCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjMCParticleListCut::Class_Name()
{
   return "StjMCParticleListCut";
}

//______________________________________________________________________________
const char *StjMCParticleListCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleListCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjMCParticleListCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleListCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjMCParticleListCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleListCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjMCParticleListCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleListCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjMCParticleListToFourVecList::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjMCParticleListToFourVecList::Class_Name()
{
   return "StjMCParticleListToFourVecList";
}

//______________________________________________________________________________
const char *StjMCParticleListToFourVecList::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleListToFourVecList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjMCParticleListToFourVecList::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleListToFourVecList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjMCParticleListToFourVecList::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleListToFourVecList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjMCParticleListToFourVecList::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleListToFourVecList*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjMCParticlePrint::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjMCParticlePrint::Class_Name()
{
   return "StjMCParticlePrint";
}

//______________________________________________________________________________
const char *StjMCParticlePrint::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticlePrint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjMCParticlePrint::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticlePrint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjMCParticlePrint::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticlePrint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjMCParticlePrint::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticlePrint*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjMCParticleToFourVec::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjMCParticleToFourVec::Class_Name()
{
   return "StjMCParticleToFourVec";
}

//______________________________________________________________________________
const char *StjMCParticleToFourVec::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleToFourVec*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjMCParticleToFourVec::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleToFourVec*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjMCParticleToFourVec::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleToFourVec*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjMCParticleToFourVec::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCParticleToFourVec*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjMCTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjMCTree::Class_Name()
{
   return "StjMCTree";
}

//______________________________________________________________________________
const char *StjMCTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjMCTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjMCTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjMCTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjMCTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjMCTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTrack::Class_Name()
{
   return "StjTrack";
}

//______________________________________________________________________________
const char *StjTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTPC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTPC::Class_Name()
{
   return "StjTPC";
}

//______________________________________________________________________________
const char *StjTPC::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTPC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTPC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTPC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTPC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTPC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTPC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTPC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTPCNull::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTPCNull::Class_Name()
{
   return "StjTPCNull";
}

//______________________________________________________________________________
const char *StjTPCNull::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTPCNull*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTPCNull::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTPCNull*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTPCNull::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTPCNull*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTPCNull::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTPCNull*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTPCTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTPCTree::Class_Name()
{
   return "StjTPCTree";
}

//______________________________________________________________________________
const char *StjTPCTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTPCTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTPCTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTPCTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTPCTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTPCTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTPCTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTPCTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTPCTxt::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTPCTxt::Class_Name()
{
   return "StjTPCTxt";
}

//______________________________________________________________________________
const char *StjTPCTxt::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTPCTxt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTPCTxt::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTPCTxt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTPCTxt::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTPCTxt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTPCTxt::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTPCTxt*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyCorrectionForTracks::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyCorrectionForTracks::Class_Name()
{
   return "StjTowerEnergyCorrectionForTracks";
}

//______________________________________________________________________________
const char *StjTowerEnergyCorrectionForTracks::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCorrectionForTracks*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyCorrectionForTracks::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCorrectionForTracks*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyCorrectionForTracks::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCorrectionForTracks*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyCorrectionForTracks::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCorrectionForTracks*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyCut::Class_Name()
{
   return "StjTowerEnergyCut";
}

//______________________________________________________________________________
const char *StjTowerEnergyCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyCut2003BemcTower::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyCut2003BemcTower::Class_Name()
{
   return "StjTowerEnergyCut2003BemcTower";
}

//______________________________________________________________________________
const char *StjTowerEnergyCut2003BemcTower::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCut2003BemcTower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyCut2003BemcTower::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCut2003BemcTower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyCut2003BemcTower::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCut2003BemcTower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyCut2003BemcTower::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCut2003BemcTower*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyCutAdc::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyCutAdc::Class_Name()
{
   return "StjTowerEnergyCutAdc";
}

//______________________________________________________________________________
const char *StjTowerEnergyCutAdc::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutAdc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyCutAdc::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutAdc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyCutAdc::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutAdc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyCutAdc::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutAdc*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyCutBemcStatus::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyCutBemcStatus::Class_Name()
{
   return "StjTowerEnergyCutBemcStatus";
}

//______________________________________________________________________________
const char *StjTowerEnergyCutBemcStatus::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutBemcStatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyCutBemcStatus::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutBemcStatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyCutBemcStatus::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutBemcStatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyCutBemcStatus::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutBemcStatus*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyCutBemcWestOnly::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyCutBemcWestOnly::Class_Name()
{
   return "StjTowerEnergyCutBemcWestOnly";
}

//______________________________________________________________________________
const char *StjTowerEnergyCutBemcWestOnly::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutBemcWestOnly*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyCutBemcWestOnly::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutBemcWestOnly*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyCutBemcWestOnly::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutBemcWestOnly*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyCutBemcWestOnly::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutBemcWestOnly*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyCutEnergy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyCutEnergy::Class_Name()
{
   return "StjTowerEnergyCutEnergy";
}

//______________________________________________________________________________
const char *StjTowerEnergyCutEnergy::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutEnergy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyCutEnergy::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutEnergy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyCutEnergy::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutEnergy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyCutEnergy::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutEnergy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyCutEt::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyCutEt::Class_Name()
{
   return "StjTowerEnergyCutEt";
}

//______________________________________________________________________________
const char *StjTowerEnergyCutEt::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutEt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyCutEt::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutEt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyCutEt::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutEt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyCutEt::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyCutEt*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyListCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyListCut::Class_Name()
{
   return "StjTowerEnergyListCut";
}

//______________________________________________________________________________
const char *StjTowerEnergyListCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyListCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyListCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyListCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyListCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyListCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyListCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyListCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyVariation::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyVariation::Class_Name()
{
   return "StjTowerEnergyVariation";
}

//______________________________________________________________________________
const char *StjTowerEnergyVariation::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyVariation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyVariation::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyVariation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyVariation::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyVariation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyVariation::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyVariation*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyListVariation::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyListVariation::Class_Name()
{
   return "StjTowerEnergyListVariation";
}

//______________________________________________________________________________
const char *StjTowerEnergyListVariation::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyListVariation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyListVariation::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyListVariation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyListVariation::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyListVariation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyListVariation::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyListVariation*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyPrint::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyPrint::Class_Name()
{
   return "StjTowerEnergyPrint";
}

//______________________________________________________________________________
const char *StjTowerEnergyPrint::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyPrint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyPrint::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyPrint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyPrint::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyPrint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyPrint::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyPrint*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyToTLorentzVector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyToTLorentzVector::Class_Name()
{
   return "StjTowerEnergyToTLorentzVector";
}

//______________________________________________________________________________
const char *StjTowerEnergyToTLorentzVector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyToTLorentzVector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyToTLorentzVector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyToTLorentzVector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyToTLorentzVector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyToTLorentzVector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyToTLorentzVector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyToTLorentzVector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyToFourVec::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyToFourVec::Class_Name()
{
   return "StjTowerEnergyToFourVec";
}

//______________________________________________________________________________
const char *StjTowerEnergyToFourVec::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyToFourVec*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyToFourVec::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyToFourVec*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyToFourVec::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyToFourVec*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyToFourVec::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyToFourVec*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTowerEnergyVariationEnergy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTowerEnergyVariationEnergy::Class_Name()
{
   return "StjTowerEnergyVariationEnergy";
}

//______________________________________________________________________________
const char *StjTowerEnergyVariationEnergy::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyVariationEnergy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTowerEnergyVariationEnergy::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyVariationEnergy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTowerEnergyVariationEnergy::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyVariationEnergy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTowerEnergyVariationEnergy::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTowerEnergyVariationEnergy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTrackCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTrackCut::Class_Name()
{
   return "StjTrackCut";
}

//______________________________________________________________________________
const char *StjTrackCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTrackCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTrackCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTrackCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTrackCutDca::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTrackCutDca::Class_Name()
{
   return "StjTrackCutDca";
}

//______________________________________________________________________________
const char *StjTrackCutDca::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutDca*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTrackCutDca::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutDca*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTrackCutDca::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutDca*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTrackCutDca::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutDca*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTrackCutDcaPtDependent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTrackCutDcaPtDependent::Class_Name()
{
   return "StjTrackCutDcaPtDependent";
}

//______________________________________________________________________________
const char *StjTrackCutDcaPtDependent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutDcaPtDependent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTrackCutDcaPtDependent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutDcaPtDependent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTrackCutDcaPtDependent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutDcaPtDependent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTrackCutDcaPtDependent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutDcaPtDependent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTrackCutEta::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTrackCutEta::Class_Name()
{
   return "StjTrackCutEta";
}

//______________________________________________________________________________
const char *StjTrackCutEta::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutEta*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTrackCutEta::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutEta*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTrackCutEta::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutEta*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTrackCutEta::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutEta*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTrackCutFlag::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTrackCutFlag::Class_Name()
{
   return "StjTrackCutFlag";
}

//______________________________________________________________________________
const char *StjTrackCutFlag::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutFlag*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTrackCutFlag::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutFlag*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTrackCutFlag::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutFlag*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTrackCutFlag::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutFlag*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTrackCutNHits::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTrackCutNHits::Class_Name()
{
   return "StjTrackCutNHits";
}

//______________________________________________________________________________
const char *StjTrackCutNHits::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutNHits*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTrackCutNHits::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutNHits*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTrackCutNHits::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutNHits*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTrackCutNHits::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutNHits*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTrackCutPossibleHitRatio::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTrackCutPossibleHitRatio::Class_Name()
{
   return "StjTrackCutPossibleHitRatio";
}

//______________________________________________________________________________
const char *StjTrackCutPossibleHitRatio::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutPossibleHitRatio*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTrackCutPossibleHitRatio::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutPossibleHitRatio*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTrackCutPossibleHitRatio::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutPossibleHitRatio*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTrackCutPossibleHitRatio::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackCutPossibleHitRatio*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTrackListCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTrackListCut::Class_Name()
{
   return "StjTrackListCut";
}

//______________________________________________________________________________
const char *StjTrackListCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackListCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTrackListCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackListCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTrackListCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackListCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTrackListCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackListCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTrackPrint::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTrackPrint::Class_Name()
{
   return "StjTrackPrint";
}

//______________________________________________________________________________
const char *StjTrackPrint::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackPrint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTrackPrint::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackPrint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTrackPrint::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackPrint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTrackPrint::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackPrint*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTrackToTLorentzVector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTrackToTLorentzVector::Class_Name()
{
   return "StjTrackToTLorentzVector";
}

//______________________________________________________________________________
const char *StjTrackToTLorentzVector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackToTLorentzVector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTrackToTLorentzVector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackToTLorentzVector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTrackToTLorentzVector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackToTLorentzVector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTrackToTLorentzVector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackToTLorentzVector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTrackToFourVec::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTrackToFourVec::Class_Name()
{
   return "StjTrackToFourVec";
}

//______________________________________________________________________________
const char *StjTrackToFourVec::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackToFourVec*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTrackToFourVec::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackToFourVec*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTrackToFourVec::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackToFourVec*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTrackToFourVec::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackToFourVec*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjTrackTowerEnergyListToFourVecList::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjTrackTowerEnergyListToFourVecList::Class_Name()
{
   return "StjTrackTowerEnergyListToFourVecList";
}

//______________________________________________________________________________
const char *StjTrackTowerEnergyListToFourVecList::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackTowerEnergyListToFourVecList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjTrackTowerEnergyListToFourVecList::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjTrackTowerEnergyListToFourVecList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjTrackTowerEnergyListToFourVecList::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackTowerEnergyListToFourVecList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjTrackTowerEnergyListToFourVecList::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjTrackTowerEnergyListToFourVecList*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjDijetListTrigger::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjDijetListTrigger::Class_Name()
{
   return "StjDijetListTrigger";
}

//______________________________________________________________________________
const char *StjDijetListTrigger::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListTrigger*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjDijetListTrigger::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListTrigger*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjDijetListTrigger::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListTrigger*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjDijetListTrigger::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListTrigger*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjDijetListTriggerBJP::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjDijetListTriggerBJP::Class_Name()
{
   return "StjDijetListTriggerBJP";
}

//______________________________________________________________________________
const char *StjDijetListTriggerBJP::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListTriggerBJP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjDijetListTriggerBJP::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListTriggerBJP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjDijetListTriggerBJP::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListTriggerBJP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjDijetListTriggerBJP::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListTriggerBJP*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StjDijetListTriggerBHT::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StjDijetListTriggerBHT::Class_Name()
{
   return "StjDijetListTriggerBHT";
}

//______________________________________________________________________________
const char *StjDijetListTriggerBHT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListTriggerBHT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StjDijetListTriggerBHT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListTriggerBHT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StjDijetListTriggerBHT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListTriggerBHT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StjDijetListTriggerBHT::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StjDijetListTriggerBHT*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void StjBEMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjBEMC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjBEMC::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjBEMC::Class(),this);
   }
}

//______________________________________________________________________________
void StjBEMC::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjBEMC.
      TClass *R__cl = ::StjBEMC::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjBEMC(void *p) {
      delete ((::StjBEMC*)p);
   }
   static void deleteArray_StjBEMC(void *p) {
      delete [] ((::StjBEMC*)p);
   }
   static void destruct_StjBEMC(void *p) {
      typedef ::StjBEMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjBEMC

//______________________________________________________________________________
void StjBEMCNull::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjBEMCNull.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjBEMCNull::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjBEMCNull::Class(),this);
   }
}

//______________________________________________________________________________
void StjBEMCNull::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjBEMCNull.
      TClass *R__cl = ::StjBEMCNull::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      StjBEMC::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjBEMCNull(void *p) {
      return  p ? new(p) ::StjBEMCNull : new ::StjBEMCNull;
   }
   static void *newArray_StjBEMCNull(Long_t nElements, void *p) {
      return p ? new(p) ::StjBEMCNull[nElements] : new ::StjBEMCNull[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjBEMCNull(void *p) {
      delete ((::StjBEMCNull*)p);
   }
   static void deleteArray_StjBEMCNull(void *p) {
      delete [] ((::StjBEMCNull*)p);
   }
   static void destruct_StjBEMCNull(void *p) {
      typedef ::StjBEMCNull current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjBEMCNull

//______________________________________________________________________________
void StjBEMCTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjBEMCTree.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjBEMCTree::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjBEMCTree::Class(),this);
   }
}

//______________________________________________________________________________
void StjBEMCTree::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjBEMCTree.
      TClass *R__cl = ::StjBEMCTree::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*_reader", &_reader);
      StjBEMC::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjBEMCTree(void *p) {
      delete ((::StjBEMCTree*)p);
   }
   static void deleteArray_StjBEMCTree(void *p) {
      delete [] ((::StjBEMCTree*)p);
   }
   static void destruct_StjBEMCTree(void *p) {
      typedef ::StjBEMCTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjBEMCTree

//______________________________________________________________________________
void StjBEMCTxt::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjBEMCTxt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjBEMCTxt::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjBEMCTxt::Class(),this);
   }
}

//______________________________________________________________________________
void StjBEMCTxt::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjBEMCTxt.
      TClass *R__cl = ::StjBEMCTxt::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_dataFile", (void*)&_dataFile);
      ::ROOT::GenericShowMembers("ifstream", (void*)&_dataFile, R__insp, strcat(R__parent,"_dataFile."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_currentEvent", &_currentEvent);
      R__insp.Inspect(R__cl, R__parent, "_oldLine", (void*)&_oldLine);
      ::ROOT::GenericShowMembers("string", (void*)&_oldLine, R__insp, strcat(R__parent,"_oldLine."),false);
      R__parent[R__ncp] = 0;
      StjBEMC::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjBEMCTxt(void *p) {
      delete ((::StjBEMCTxt*)p);
   }
   static void deleteArray_StjBEMCTxt(void *p) {
      delete [] ((::StjBEMCTxt*)p);
   }
   static void destruct_StjBEMCTxt(void *p) {
      typedef ::StjBEMCTxt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjBEMCTxt

//______________________________________________________________________________
void StjDijetCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjDijetCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjDijetCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjDijetCut::Class(),this);
   }
}

//______________________________________________________________________________
void StjDijetCut::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjDijetCut.
      TClass *R__cl = ::StjDijetCut::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjDijetCut(void *p) {
      delete ((::StjDijetCut*)p);
   }
   static void deleteArray_StjDijetCut(void *p) {
      delete [] ((::StjDijetCut*)p);
   }
   static void destruct_StjDijetCut(void *p) {
      typedef ::StjDijetCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjDijetCut

//______________________________________________________________________________
void StjDijetCutAsymmetricPt::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjDijetCutAsymmetricPt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjDijetCutAsymmetricPt::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjDijetCutAsymmetricPt::Class(),this);
   }
}

//______________________________________________________________________________
void StjDijetCutAsymmetricPt::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjDijetCutAsymmetricPt.
      TClass *R__cl = ::StjDijetCutAsymmetricPt::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_minMin", &_minMin);
      R__insp.Inspect(R__cl, R__parent, "_maxMin", &_maxMin);
      StjDijetCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjDijetCutAsymmetricPt(void *p) {
      delete ((::StjDijetCutAsymmetricPt*)p);
   }
   static void deleteArray_StjDijetCutAsymmetricPt(void *p) {
      delete [] ((::StjDijetCutAsymmetricPt*)p);
   }
   static void destruct_StjDijetCutAsymmetricPt(void *p) {
      typedef ::StjDijetCutAsymmetricPt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjDijetCutAsymmetricPt

//______________________________________________________________________________
void StjDijetCutDPhi::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjDijetCutDPhi.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjDijetCutDPhi::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjDijetCutDPhi::Class(),this);
   }
}

//______________________________________________________________________________
void StjDijetCutDPhi::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjDijetCutDPhi.
      TClass *R__cl = ::StjDijetCutDPhi::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      StjDijetCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjDijetCutDPhi(void *p) {
      return  p ? new(p) ::StjDijetCutDPhi : new ::StjDijetCutDPhi;
   }
   static void *newArray_StjDijetCutDPhi(Long_t nElements, void *p) {
      return p ? new(p) ::StjDijetCutDPhi[nElements] : new ::StjDijetCutDPhi[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjDijetCutDPhi(void *p) {
      delete ((::StjDijetCutDPhi*)p);
   }
   static void deleteArray_StjDijetCutDPhi(void *p) {
      delete [] ((::StjDijetCutDPhi*)p);
   }
   static void destruct_StjDijetCutDPhi(void *p) {
      typedef ::StjDijetCutDPhi current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjDijetCutDPhi

//______________________________________________________________________________
void StjDijetCutEta::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjDijetCutEta.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjDijetCutEta::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjDijetCutEta::Class(),this);
   }
}

//______________________________________________________________________________
void StjDijetCutEta::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjDijetCutEta.
      TClass *R__cl = ::StjDijetCutEta::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_jetcut", &_jetcut);
      _jetcut.ShowMembers(R__insp, strcat(R__parent,"_jetcut.")); R__parent[R__ncp] = 0;
      StjDijetCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjDijetCutEta(void *p) {
      return  p ? new(p) ::StjDijetCutEta : new ::StjDijetCutEta;
   }
   static void *newArray_StjDijetCutEta(Long_t nElements, void *p) {
      return p ? new(p) ::StjDijetCutEta[nElements] : new ::StjDijetCutEta[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjDijetCutEta(void *p) {
      delete ((::StjDijetCutEta*)p);
   }
   static void deleteArray_StjDijetCutEta(void *p) {
      delete [] ((::StjDijetCutEta*)p);
   }
   static void destruct_StjDijetCutEta(void *p) {
      typedef ::StjDijetCutEta current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjDijetCutEta

//______________________________________________________________________________
void StjDijetCutEta3MinusEta4::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjDijetCutEta3MinusEta4.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjDijetCutEta3MinusEta4::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjDijetCutEta3MinusEta4::Class(),this);
   }
}

//______________________________________________________________________________
void StjDijetCutEta3MinusEta4::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjDijetCutEta3MinusEta4.
      TClass *R__cl = ::StjDijetCutEta3MinusEta4::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      StjDijetCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjDijetCutEta3MinusEta4(void *p) {
      return  p ? new(p) ::StjDijetCutEta3MinusEta4 : new ::StjDijetCutEta3MinusEta4;
   }
   static void *newArray_StjDijetCutEta3MinusEta4(Long_t nElements, void *p) {
      return p ? new(p) ::StjDijetCutEta3MinusEta4[nElements] : new ::StjDijetCutEta3MinusEta4[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjDijetCutEta3MinusEta4(void *p) {
      delete ((::StjDijetCutEta3MinusEta4*)p);
   }
   static void deleteArray_StjDijetCutEta3MinusEta4(void *p) {
      delete [] ((::StjDijetCutEta3MinusEta4*)p);
   }
   static void destruct_StjDijetCutEta3MinusEta4(void *p) {
      typedef ::StjDijetCutEta3MinusEta4 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjDijetCutEta3MinusEta4

//______________________________________________________________________________
void StjDijetCutTrgBHT::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjDijetCutTrgBHT.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjDijetCutTrgBHT::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjDijetCutTrgBHT::Class(),this);
   }
}

//______________________________________________________________________________
void StjDijetCutTrgBHT::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjDijetCutTrgBHT.
      TClass *R__cl = ::StjDijetCutTrgBHT::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_jetCut", &_jetCut);
      _jetCut.ShowMembers(R__insp, strcat(R__parent,"_jetCut.")); R__parent[R__ncp] = 0;
      StjDijetCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjDijetCutTrgBHT(void *p) {
      delete ((::StjDijetCutTrgBHT*)p);
   }
   static void deleteArray_StjDijetCutTrgBHT(void *p) {
      delete [] ((::StjDijetCutTrgBHT*)p);
   }
   static void destruct_StjDijetCutTrgBHT(void *p) {
      typedef ::StjDijetCutTrgBHT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjDijetCutTrgBHT

//______________________________________________________________________________
void StjDijetCutTrgBJP::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjDijetCutTrgBJP.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjDijetCutTrgBJP::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjDijetCutTrgBJP::Class(),this);
   }
}

//______________________________________________________________________________
void StjDijetCutTrgBJP::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjDijetCutTrgBJP.
      TClass *R__cl = ::StjDijetCutTrgBJP::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_jetCut", &_jetCut);
      _jetCut.ShowMembers(R__insp, strcat(R__parent,"_jetCut.")); R__parent[R__ncp] = 0;
      StjDijetCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjDijetCutTrgBJP(void *p) {
      delete ((::StjDijetCutTrgBJP*)p);
   }
   static void deleteArray_StjDijetCutTrgBJP(void *p) {
      delete [] ((::StjDijetCutTrgBJP*)p);
   }
   static void destruct_StjDijetCutTrgBJP(void *p) {
      typedef ::StjDijetCutTrgBJP current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjDijetCutTrgBJP

//______________________________________________________________________________
void StjDijet::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjDijet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjDijet::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjDijet::Class(),this);
   }
}

//______________________________________________________________________________
void StjDijet::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjDijet.
      TClass *R__cl = ::StjDijet::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "runNumber", &runNumber);
      R__insp.Inspect(R__cl, R__parent, "eventId", &eventId);
      R__insp.Inspect(R__cl, R__parent, "dijetId", &dijetId);
      R__insp.Inspect(R__cl, R__parent, "m", &m);
      R__insp.Inspect(R__cl, R__parent, "eta", &eta);
      R__insp.Inspect(R__cl, R__parent, "costh", &costh);
      R__insp.Inspect(R__cl, R__parent, "dphi", &dphi);
      R__insp.Inspect(R__cl, R__parent, "vertexZ", &vertexZ);
      R__insp.Inspect(R__cl, R__parent, "jet3", &jet3);
      jet3.ShowMembers(R__insp, strcat(R__parent,"jet3.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "jet4", &jet4);
      jet4.ShowMembers(R__insp, strcat(R__parent,"jet4.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "jetSame", &jetSame);
      jetSame.ShowMembers(R__insp, strcat(R__parent,"jetSame.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "jetAway", &jetAway);
      jetAway.ShowMembers(R__insp, strcat(R__parent,"jetAway.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjDijet(void *p) {
      return  p ? new(p) ::StjDijet : new ::StjDijet;
   }
   static void *newArray_StjDijet(Long_t nElements, void *p) {
      return p ? new(p) ::StjDijet[nElements] : new ::StjDijet[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjDijet(void *p) {
      delete ((::StjDijet*)p);
   }
   static void deleteArray_StjDijet(void *p) {
      delete [] ((::StjDijet*)p);
   }
   static void destruct_StjDijet(void *p) {
      typedef ::StjDijet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjDijet

//______________________________________________________________________________
void StjDijetListCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjDijetListCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjDijetListCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjDijetListCut::Class(),this);
   }
}

//______________________________________________________________________________
void StjDijetListCut::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjDijetListCut.
      TClass *R__cl = ::StjDijetListCut::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_cutList", (void*)&_cutList);
      ::ROOT::GenericShowMembers("StjDijetListCut::CutList", (void*)&_cutList, R__insp, strcat(R__parent,"_cutList."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjDijetListCut(void *p) {
      return  p ? new(p) ::StjDijetListCut : new ::StjDijetListCut;
   }
   static void *newArray_StjDijetListCut(Long_t nElements, void *p) {
      return p ? new(p) ::StjDijetListCut[nElements] : new ::StjDijetListCut[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjDijetListCut(void *p) {
      delete ((::StjDijetListCut*)p);
   }
   static void deleteArray_StjDijetListCut(void *p) {
      delete [] ((::StjDijetListCut*)p);
   }
   static void destruct_StjDijetListCut(void *p) {
      typedef ::StjDijetListCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjDijetListCut

//______________________________________________________________________________
void StjDijetPrint::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjDijetPrint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjDijetPrint::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjDijetPrint::Class(),this);
   }
}

//______________________________________________________________________________
void StjDijetPrint::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjDijetPrint.
      TClass *R__cl = ::StjDijetPrint::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjDijetPrint(void *p) {
      return  p ? new(p) ::StjDijetPrint : new ::StjDijetPrint;
   }
   static void *newArray_StjDijetPrint(Long_t nElements, void *p) {
      return p ? new(p) ::StjDijetPrint[nElements] : new ::StjDijetPrint[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjDijetPrint(void *p) {
      delete ((::StjDijetPrint*)p);
   }
   static void deleteArray_StjDijetPrint(void *p) {
      delete [] ((::StjDijetPrint*)p);
   }
   static void destruct_StjDijetPrint(void *p) {
      typedef ::StjDijetPrint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjDijetPrint

//______________________________________________________________________________
void StjEEMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjEEMC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjEEMC::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjEEMC::Class(),this);
   }
}

//______________________________________________________________________________
void StjEEMC::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjEEMC.
      TClass *R__cl = ::StjEEMC::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjEEMC(void *p) {
      delete ((::StjEEMC*)p);
   }
   static void deleteArray_StjEEMC(void *p) {
      delete [] ((::StjEEMC*)p);
   }
   static void destruct_StjEEMC(void *p) {
      typedef ::StjEEMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjEEMC

//______________________________________________________________________________
void StjEEMCNull::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjEEMCNull.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjEEMCNull::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjEEMCNull::Class(),this);
   }
}

//______________________________________________________________________________
void StjEEMCNull::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjEEMCNull.
      TClass *R__cl = ::StjEEMCNull::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      StjEEMC::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjEEMCNull(void *p) {
      return  p ? new(p) ::StjEEMCNull : new ::StjEEMCNull;
   }
   static void *newArray_StjEEMCNull(Long_t nElements, void *p) {
      return p ? new(p) ::StjEEMCNull[nElements] : new ::StjEEMCNull[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjEEMCNull(void *p) {
      delete ((::StjEEMCNull*)p);
   }
   static void deleteArray_StjEEMCNull(void *p) {
      delete [] ((::StjEEMCNull*)p);
   }
   static void destruct_StjEEMCNull(void *p) {
      typedef ::StjEEMCNull current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjEEMCNull

//______________________________________________________________________________
void StjEEMCTxt::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjEEMCTxt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjEEMCTxt::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjEEMCTxt::Class(),this);
   }
}

//______________________________________________________________________________
void StjEEMCTxt::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjEEMCTxt.
      TClass *R__cl = ::StjEEMCTxt::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_dataFile", (void*)&_dataFile);
      ::ROOT::GenericShowMembers("ifstream", (void*)&_dataFile, R__insp, strcat(R__parent,"_dataFile."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_currentEvent", &_currentEvent);
      R__insp.Inspect(R__cl, R__parent, "_oldLine", (void*)&_oldLine);
      ::ROOT::GenericShowMembers("string", (void*)&_oldLine, R__insp, strcat(R__parent,"_oldLine."),false);
      R__parent[R__ncp] = 0;
      StjEEMC::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjEEMCTxt(void *p) {
      delete ((::StjEEMCTxt*)p);
   }
   static void deleteArray_StjEEMCTxt(void *p) {
      delete [] ((::StjEEMCTxt*)p);
   }
   static void destruct_StjEEMCTxt(void *p) {
      typedef ::StjEEMCTxt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjEEMCTxt

//______________________________________________________________________________
void StjFormDijet::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjFormDijet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjFormDijet::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjFormDijet::Class(),this);
   }
}

//______________________________________________________________________________
void StjFormDijet::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjFormDijet.
      TClass *R__cl = ::StjFormDijet::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjFormDijet(void *p) {
      return  p ? new(p) ::StjFormDijet : new ::StjFormDijet;
   }
   static void *newArray_StjFormDijet(Long_t nElements, void *p) {
      return p ? new(p) ::StjFormDijet[nElements] : new ::StjFormDijet[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjFormDijet(void *p) {
      delete ((::StjFormDijet*)p);
   }
   static void deleteArray_StjFormDijet(void *p) {
      delete [] ((::StjFormDijet*)p);
   }
   static void destruct_StjFormDijet(void *p) {
      typedef ::StjFormDijet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjFormDijet

//______________________________________________________________________________
void StjFourVecCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjFourVecCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjFourVecCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjFourVecCut::Class(),this);
   }
}

//______________________________________________________________________________
void StjFourVecCut::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjFourVecCut.
      TClass *R__cl = ::StjFourVecCut::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjFourVecCut(void *p) {
      delete ((::StjFourVecCut*)p);
   }
   static void deleteArray_StjFourVecCut(void *p) {
      delete [] ((::StjFourVecCut*)p);
   }
   static void destruct_StjFourVecCut(void *p) {
      typedef ::StjFourVecCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjFourVecCut

//______________________________________________________________________________
void StjFourVecCutPt::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjFourVecCutPt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjFourVecCutPt::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjFourVecCutPt::Class(),this);
   }
}

//______________________________________________________________________________
void StjFourVecCutPt::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjFourVecCutPt.
      TClass *R__cl = ::StjFourVecCutPt::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      StjFourVecCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjFourVecCutPt(void *p) {
      return  p ? new(p) ::StjFourVecCutPt : new ::StjFourVecCutPt;
   }
   static void *newArray_StjFourVecCutPt(Long_t nElements, void *p) {
      return p ? new(p) ::StjFourVecCutPt[nElements] : new ::StjFourVecCutPt[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjFourVecCutPt(void *p) {
      delete ((::StjFourVecCutPt*)p);
   }
   static void deleteArray_StjFourVecCutPt(void *p) {
      delete [] ((::StjFourVecCutPt*)p);
   }
   static void destruct_StjFourVecCutPt(void *p) {
      typedef ::StjFourVecCutPt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjFourVecCutPt

//______________________________________________________________________________
void StjFourVecCutTrgBHT::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjFourVecCutTrgBHT.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjFourVecCutTrgBHT::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjFourVecCutTrgBHT::Class(),this);
   }
}

//______________________________________________________________________________
void StjFourVecCutTrgBHT::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjFourVecCutTrgBHT.
      TClass *R__cl = ::StjFourVecCutTrgBHT::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*_trg", &_trg);
      StjFourVecCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjFourVecCutTrgBHT(void *p) {
      delete ((::StjFourVecCutTrgBHT*)p);
   }
   static void deleteArray_StjFourVecCutTrgBHT(void *p) {
      delete [] ((::StjFourVecCutTrgBHT*)p);
   }
   static void destruct_StjFourVecCutTrgBHT(void *p) {
      typedef ::StjFourVecCutTrgBHT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjFourVecCutTrgBHT

//______________________________________________________________________________
void StjFourVecCutTrgBJP::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjFourVecCutTrgBJP.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjFourVecCutTrgBJP::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjFourVecCutTrgBJP::Class(),this);
   }
}

//______________________________________________________________________________
void StjFourVecCutTrgBJP::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjFourVecCutTrgBJP.
      TClass *R__cl = ::StjFourVecCutTrgBJP::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*_trg", &_trg);
      R__insp.Inspect(R__cl, R__parent, "*_jetPatchTowerMap", &_jetPatchTowerMap);
      StjFourVecCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjFourVecCutTrgBJP(void *p) {
      delete ((::StjFourVecCutTrgBJP*)p);
   }
   static void deleteArray_StjFourVecCutTrgBJP(void *p) {
      delete [] ((::StjFourVecCutTrgBJP*)p);
   }
   static void destruct_StjFourVecCutTrgBJP(void *p) {
      typedef ::StjFourVecCutTrgBJP current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjFourVecCutTrgBJP

//______________________________________________________________________________
void StjFourVec::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjFourVec.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjFourVec::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjFourVec::Class(),this);
   }
}

//______________________________________________________________________________
void StjFourVec::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjFourVec.
      TClass *R__cl = ::StjFourVec::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "runNumber", &runNumber);
      R__insp.Inspect(R__cl, R__parent, "eventId", &eventId);
      R__insp.Inspect(R__cl, R__parent, "fourvecId", &fourvecId);
      R__insp.Inspect(R__cl, R__parent, "type", &type);
      R__insp.Inspect(R__cl, R__parent, "detectorId", &detectorId);
      R__insp.Inspect(R__cl, R__parent, "trackId", &trackId);
      R__insp.Inspect(R__cl, R__parent, "towerId", &towerId);
      R__insp.Inspect(R__cl, R__parent, "mcparticleId", &mcparticleId);
      R__insp.Inspect(R__cl, R__parent, "pt", &pt);
      R__insp.Inspect(R__cl, R__parent, "eta", &eta);
      R__insp.Inspect(R__cl, R__parent, "phi", &phi);
      R__insp.Inspect(R__cl, R__parent, "m", &m);
      R__insp.Inspect(R__cl, R__parent, "vertexZ", &vertexZ);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjFourVec(void *p) {
      return  p ? new(p) ::StjFourVec : new ::StjFourVec;
   }
   static void *newArray_StjFourVec(Long_t nElements, void *p) {
      return p ? new(p) ::StjFourVec[nElements] : new ::StjFourVec[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjFourVec(void *p) {
      delete ((::StjFourVec*)p);
   }
   static void deleteArray_StjFourVec(void *p) {
      delete [] ((::StjFourVec*)p);
   }
   static void destruct_StjFourVec(void *p) {
      typedef ::StjFourVec current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjFourVec

//______________________________________________________________________________
void StjFourVecListCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjFourVecListCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjFourVecListCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjFourVecListCut::Class(),this);
   }
}

//______________________________________________________________________________
void StjFourVecListCut::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjFourVecListCut.
      TClass *R__cl = ::StjFourVecListCut::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_cutList", (void*)&_cutList);
      ::ROOT::GenericShowMembers("StjFourVecListCut::CutList", (void*)&_cutList, R__insp, strcat(R__parent,"_cutList."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjFourVecListCut(void *p) {
      return  p ? new(p) ::StjFourVecListCut : new ::StjFourVecListCut;
   }
   static void *newArray_StjFourVecListCut(Long_t nElements, void *p) {
      return p ? new(p) ::StjFourVecListCut[nElements] : new ::StjFourVecListCut[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjFourVecListCut(void *p) {
      delete ((::StjFourVecListCut*)p);
   }
   static void deleteArray_StjFourVecListCut(void *p) {
      delete [] ((::StjFourVecListCut*)p);
   }
   static void destruct_StjFourVecListCut(void *p) {
      typedef ::StjFourVecListCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjFourVecListCut

//______________________________________________________________________________
void StjFourVecPrint::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjFourVecPrint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjFourVecPrint::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjFourVecPrint::Class(),this);
   }
}

//______________________________________________________________________________
void StjFourVecPrint::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjFourVecPrint.
      TClass *R__cl = ::StjFourVecPrint::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjFourVecPrint(void *p) {
      return  p ? new(p) ::StjFourVecPrint : new ::StjFourVecPrint;
   }
   static void *newArray_StjFourVecPrint(Long_t nElements, void *p) {
      return p ? new(p) ::StjFourVecPrint[nElements] : new ::StjFourVecPrint[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjFourVecPrint(void *p) {
      delete ((::StjFourVecPrint*)p);
   }
   static void deleteArray_StjFourVecPrint(void *p) {
      delete [] ((::StjFourVecPrint*)p);
   }
   static void destruct_StjFourVecPrint(void *p) {
      typedef ::StjFourVecPrint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjFourVecPrint

//______________________________________________________________________________
void StjJetCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjJetCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjJetCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjJetCut::Class(),this);
   }
}

//______________________________________________________________________________
void StjJetCut::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjJetCut.
      TClass *R__cl = ::StjJetCut::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjJetCut(void *p) {
      delete ((::StjJetCut*)p);
   }
   static void deleteArray_StjJetCut(void *p) {
      delete [] ((::StjJetCut*)p);
   }
   static void destruct_StjJetCut(void *p) {
      typedef ::StjJetCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjJetCut

//______________________________________________________________________________
void StjJetCutDetectorEta::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjJetCutDetectorEta.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjJetCutDetectorEta::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjJetCutDetectorEta::Class(),this);
   }
}

//______________________________________________________________________________
void StjJetCutDetectorEta::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjJetCutDetectorEta.
      TClass *R__cl = ::StjJetCutDetectorEta::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      StjJetCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjJetCutDetectorEta(void *p) {
      return  p ? new(p) ::StjJetCutDetectorEta : new ::StjJetCutDetectorEta;
   }
   static void *newArray_StjJetCutDetectorEta(Long_t nElements, void *p) {
      return p ? new(p) ::StjJetCutDetectorEta[nElements] : new ::StjJetCutDetectorEta[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjJetCutDetectorEta(void *p) {
      delete ((::StjJetCutDetectorEta*)p);
   }
   static void deleteArray_StjJetCutDetectorEta(void *p) {
      delete [] ((::StjJetCutDetectorEta*)p);
   }
   static void destruct_StjJetCutDetectorEta(void *p) {
      typedef ::StjJetCutDetectorEta current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjJetCutDetectorEta

//______________________________________________________________________________
void StjJetCutEta::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjJetCutEta.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjJetCutEta::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjJetCutEta::Class(),this);
   }
}

//______________________________________________________________________________
void StjJetCutEta::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjJetCutEta.
      TClass *R__cl = ::StjJetCutEta::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      StjJetCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjJetCutEta(void *p) {
      return  p ? new(p) ::StjJetCutEta : new ::StjJetCutEta;
   }
   static void *newArray_StjJetCutEta(Long_t nElements, void *p) {
      return p ? new(p) ::StjJetCutEta[nElements] : new ::StjJetCutEta[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjJetCutEta(void *p) {
      delete ((::StjJetCutEta*)p);
   }
   static void deleteArray_StjJetCutEta(void *p) {
      delete [] ((::StjJetCutEta*)p);
   }
   static void destruct_StjJetCutEta(void *p) {
      typedef ::StjJetCutEta current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjJetCutEta

//______________________________________________________________________________
void StjJetCutNFourVecs::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjJetCutNFourVecs.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjJetCutNFourVecs::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjJetCutNFourVecs::Class(),this);
   }
}

//______________________________________________________________________________
void StjJetCutNFourVecs::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjJetCutNFourVecs.
      TClass *R__cl = ::StjJetCutNFourVecs::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      StjJetCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjJetCutNFourVecs(void *p) {
      return  p ? new(p) ::StjJetCutNFourVecs : new ::StjJetCutNFourVecs;
   }
   static void *newArray_StjJetCutNFourVecs(Long_t nElements, void *p) {
      return p ? new(p) ::StjJetCutNFourVecs[nElements] : new ::StjJetCutNFourVecs[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjJetCutNFourVecs(void *p) {
      delete ((::StjJetCutNFourVecs*)p);
   }
   static void deleteArray_StjJetCutNFourVecs(void *p) {
      delete [] ((::StjJetCutNFourVecs*)p);
   }
   static void destruct_StjJetCutNFourVecs(void *p) {
      typedef ::StjJetCutNFourVecs current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjJetCutNFourVecs

//______________________________________________________________________________
void StjJetCutPt::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjJetCutPt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjJetCutPt::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjJetCutPt::Class(),this);
   }
}

//______________________________________________________________________________
void StjJetCutPt::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjJetCutPt.
      TClass *R__cl = ::StjJetCutPt::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      StjJetCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjJetCutPt(void *p) {
      return  p ? new(p) ::StjJetCutPt : new ::StjJetCutPt;
   }
   static void *newArray_StjJetCutPt(Long_t nElements, void *p) {
      return p ? new(p) ::StjJetCutPt[nElements] : new ::StjJetCutPt[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjJetCutPt(void *p) {
      delete ((::StjJetCutPt*)p);
   }
   static void deleteArray_StjJetCutPt(void *p) {
      delete [] ((::StjJetCutPt*)p);
   }
   static void destruct_StjJetCutPt(void *p) {
      typedef ::StjJetCutPt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjJetCutPt

//______________________________________________________________________________
void StjJetCutTrgBHT::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjJetCutTrgBHT.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjJetCutTrgBHT::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjJetCutTrgBHT::Class(),this);
   }
}

//______________________________________________________________________________
void StjJetCutTrgBHT::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjJetCutTrgBHT.
      TClass *R__cl = ::StjJetCutTrgBHT::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*_trg", &_trg);
      R__insp.Inspect(R__cl, R__parent, "_fourVecListCut", &_fourVecListCut);
      _fourVecListCut.ShowMembers(R__insp, strcat(R__parent,"_fourVecListCut.")); R__parent[R__ncp] = 0;
      StjJetCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjJetCutTrgBHT(void *p) {
      delete ((::StjJetCutTrgBHT*)p);
   }
   static void deleteArray_StjJetCutTrgBHT(void *p) {
      delete [] ((::StjJetCutTrgBHT*)p);
   }
   static void destruct_StjJetCutTrgBHT(void *p) {
      typedef ::StjJetCutTrgBHT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjJetCutTrgBHT

//______________________________________________________________________________
void StjJetCutTrgBJP::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjJetCutTrgBJP.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjJetCutTrgBJP::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjJetCutTrgBJP::Class(),this);
   }
}

//______________________________________________________________________________
void StjJetCutTrgBJP::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjJetCutTrgBJP.
      TClass *R__cl = ::StjJetCutTrgBJP::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*_trg", &_trg);
      R__insp.Inspect(R__cl, R__parent, "_fourVecListCut", &_fourVecListCut);
      _fourVecListCut.ShowMembers(R__insp, strcat(R__parent,"_fourVecListCut.")); R__parent[R__ncp] = 0;
      StjJetCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjJetCutTrgBJP(void *p) {
      delete ((::StjJetCutTrgBJP*)p);
   }
   static void deleteArray_StjJetCutTrgBJP(void *p) {
      delete [] ((::StjJetCutTrgBJP*)p);
   }
   static void destruct_StjJetCutTrgBJP(void *p) {
      typedef ::StjJetCutTrgBJP current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjJetCutTrgBJP

//______________________________________________________________________________
void StjJet::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjJet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjJet::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjJet::Class(),this);
   }
}

//______________________________________________________________________________
void StjJet::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjJet.
      TClass *R__cl = ::StjJet::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "runNumber", &runNumber);
      R__insp.Inspect(R__cl, R__parent, "eventId", &eventId);
      R__insp.Inspect(R__cl, R__parent, "jetId", &jetId);
      R__insp.Inspect(R__cl, R__parent, "pt", &pt);
      R__insp.Inspect(R__cl, R__parent, "eta", &eta);
      R__insp.Inspect(R__cl, R__parent, "phi", &phi);
      R__insp.Inspect(R__cl, R__parent, "m", &m);
      R__insp.Inspect(R__cl, R__parent, "neuRt", &neuRt);
      R__insp.Inspect(R__cl, R__parent, "vertexZ", &vertexZ);
      R__insp.Inspect(R__cl, R__parent, "detectorEta", &detectorEta);
      R__insp.Inspect(R__cl, R__parent, "fourVecList", (void*)&fourVecList);
      ::ROOT::GenericShowMembers("StjFourVecList", (void*)&fourVecList, R__insp, strcat(R__parent,"fourVecList."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjJet(void *p) {
      return  p ? new(p) ::StjJet : new ::StjJet;
   }
   static void *newArray_StjJet(Long_t nElements, void *p) {
      return p ? new(p) ::StjJet[nElements] : new ::StjJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjJet(void *p) {
      delete ((::StjJet*)p);
   }
   static void deleteArray_StjJet(void *p) {
      delete [] ((::StjJet*)p);
   }
   static void destruct_StjJet(void *p) {
      typedef ::StjJet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjJet

//______________________________________________________________________________
void StjJetListCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjJetListCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjJetListCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjJetListCut::Class(),this);
   }
}

//______________________________________________________________________________
void StjJetListCut::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjJetListCut.
      TClass *R__cl = ::StjJetListCut::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_cutList", (void*)&_cutList);
      ::ROOT::GenericShowMembers("StjJetListCut::CutList", (void*)&_cutList, R__insp, strcat(R__parent,"_cutList."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjJetListCut(void *p) {
      return  p ? new(p) ::StjJetListCut : new ::StjJetListCut;
   }
   static void *newArray_StjJetListCut(Long_t nElements, void *p) {
      return p ? new(p) ::StjJetListCut[nElements] : new ::StjJetListCut[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjJetListCut(void *p) {
      delete ((::StjJetListCut*)p);
   }
   static void deleteArray_StjJetListCut(void *p) {
      delete [] ((::StjJetListCut*)p);
   }
   static void destruct_StjJetListCut(void *p) {
      typedef ::StjJetListCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjJetListCut

//______________________________________________________________________________
void StjJetPrint::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjJetPrint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjJetPrint::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjJetPrint::Class(),this);
   }
}

//______________________________________________________________________________
void StjJetPrint::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjJetPrint.
      TClass *R__cl = ::StjJetPrint::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjJetPrint(void *p) {
      return  p ? new(p) ::StjJetPrint : new ::StjJetPrint;
   }
   static void *newArray_StjJetPrint(Long_t nElements, void *p) {
      return p ? new(p) ::StjJetPrint[nElements] : new ::StjJetPrint[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjJetPrint(void *p) {
      delete ((::StjJetPrint*)p);
   }
   static void deleteArray_StjJetPrint(void *p) {
      delete [] ((::StjJetPrint*)p);
   }
   static void destruct_StjJetPrint(void *p) {
      typedef ::StjJetPrint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjJetPrint

//______________________________________________________________________________
void StjMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjMC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjMC::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjMC::Class(),this);
   }
}

//______________________________________________________________________________
void StjMC::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjMC.
      TClass *R__cl = ::StjMC::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjMC(void *p) {
      delete ((::StjMC*)p);
   }
   static void deleteArray_StjMC(void *p) {
      delete [] ((::StjMC*)p);
   }
   static void destruct_StjMC(void *p) {
      typedef ::StjMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjMC

//______________________________________________________________________________
void StjMCNull::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjMCNull.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjMCNull::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjMCNull::Class(),this);
   }
}

//______________________________________________________________________________
void StjMCNull::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjMCNull.
      TClass *R__cl = ::StjMCNull::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      StjMC::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjMCNull(void *p) {
      delete ((::StjMCNull*)p);
   }
   static void deleteArray_StjMCNull(void *p) {
      delete [] ((::StjMCNull*)p);
   }
   static void destruct_StjMCNull(void *p) {
      typedef ::StjMCNull current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjMCNull

//______________________________________________________________________________
void StjMCParticleCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjMCParticleCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjMCParticleCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjMCParticleCut::Class(),this);
   }
}

//______________________________________________________________________________
void StjMCParticleCut::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjMCParticleCut.
      TClass *R__cl = ::StjMCParticleCut::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjMCParticleCut(void *p) {
      delete ((::StjMCParticleCut*)p);
   }
   static void deleteArray_StjMCParticleCut(void *p) {
      delete [] ((::StjMCParticleCut*)p);
   }
   static void destruct_StjMCParticleCut(void *p) {
      typedef ::StjMCParticleCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjMCParticleCut

//______________________________________________________________________________
void StjMCParticleCutEta::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjMCParticleCutEta.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjMCParticleCutEta::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjMCParticleCutEta::Class(),this);
   }
}

//______________________________________________________________________________
void StjMCParticleCutEta::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjMCParticleCutEta.
      TClass *R__cl = ::StjMCParticleCutEta::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      StjMCParticleCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjMCParticleCutEta(void *p) {
      return  p ? new(p) ::StjMCParticleCutEta : new ::StjMCParticleCutEta;
   }
   static void *newArray_StjMCParticleCutEta(Long_t nElements, void *p) {
      return p ? new(p) ::StjMCParticleCutEta[nElements] : new ::StjMCParticleCutEta[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjMCParticleCutEta(void *p) {
      delete ((::StjMCParticleCutEta*)p);
   }
   static void deleteArray_StjMCParticleCutEta(void *p) {
      delete [] ((::StjMCParticleCutEta*)p);
   }
   static void destruct_StjMCParticleCutEta(void *p) {
      typedef ::StjMCParticleCutEta current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjMCParticleCutEta

//______________________________________________________________________________
void StjMCParticleCutEtaForStatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjMCParticleCutEtaForStatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjMCParticleCutEtaForStatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjMCParticleCutEtaForStatus::Class(),this);
   }
}

//______________________________________________________________________________
void StjMCParticleCutEtaForStatus::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjMCParticleCutEtaForStatus.
      TClass *R__cl = ::StjMCParticleCutEtaForStatus::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      R__insp.Inspect(R__cl, R__parent, "_status", &_status);
      StjMCParticleCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjMCParticleCutEtaForStatus(void *p) {
      return  p ? new(p) ::StjMCParticleCutEtaForStatus : new ::StjMCParticleCutEtaForStatus;
   }
   static void *newArray_StjMCParticleCutEtaForStatus(Long_t nElements, void *p) {
      return p ? new(p) ::StjMCParticleCutEtaForStatus[nElements] : new ::StjMCParticleCutEtaForStatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjMCParticleCutEtaForStatus(void *p) {
      delete ((::StjMCParticleCutEtaForStatus*)p);
   }
   static void deleteArray_StjMCParticleCutEtaForStatus(void *p) {
      delete [] ((::StjMCParticleCutEtaForStatus*)p);
   }
   static void destruct_StjMCParticleCutEtaForStatus(void *p) {
      typedef ::StjMCParticleCutEtaForStatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjMCParticleCutEtaForStatus

//______________________________________________________________________________
void StjMCParticleCutStatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjMCParticleCutStatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjMCParticleCutStatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjMCParticleCutStatus::Class(),this);
   }
}

//______________________________________________________________________________
void StjMCParticleCutStatus::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjMCParticleCutStatus.
      TClass *R__cl = ::StjMCParticleCutStatus::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_goodStatusSet", (void*)&_goodStatusSet);
      ::ROOT::GenericShowMembers("set<int>", (void*)&_goodStatusSet, R__insp, strcat(R__parent,"_goodStatusSet."),false);
      R__parent[R__ncp] = 0;
      StjMCParticleCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjMCParticleCutStatus(void *p) {
      return  p ? new(p) ::StjMCParticleCutStatus : new ::StjMCParticleCutStatus;
   }
   static void *newArray_StjMCParticleCutStatus(Long_t nElements, void *p) {
      return p ? new(p) ::StjMCParticleCutStatus[nElements] : new ::StjMCParticleCutStatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjMCParticleCutStatus(void *p) {
      delete ((::StjMCParticleCutStatus*)p);
   }
   static void deleteArray_StjMCParticleCutStatus(void *p) {
      delete [] ((::StjMCParticleCutStatus*)p);
   }
   static void destruct_StjMCParticleCutStatus(void *p) {
      typedef ::StjMCParticleCutStatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjMCParticleCutStatus

//______________________________________________________________________________
void StjMCParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjMCParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjMCParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjMCParticle::Class(),this);
   }
}

//______________________________________________________________________________
void StjMCParticle::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjMCParticle.
      TClass *R__cl = ::StjMCParticle::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "runNumber", &runNumber);
      R__insp.Inspect(R__cl, R__parent, "eventId", &eventId);
      R__insp.Inspect(R__cl, R__parent, "mcparticleId", &mcparticleId);
      R__insp.Inspect(R__cl, R__parent, "pdg", &pdg);
      R__insp.Inspect(R__cl, R__parent, "firstMotherId", &firstMotherId);
      R__insp.Inspect(R__cl, R__parent, "lastMotherId", &lastMotherId);
      R__insp.Inspect(R__cl, R__parent, "firstDaughterId", &firstDaughterId);
      R__insp.Inspect(R__cl, R__parent, "lastDaughterId", &lastDaughterId);
      R__insp.Inspect(R__cl, R__parent, "pt", &pt);
      R__insp.Inspect(R__cl, R__parent, "eta", &eta);
      R__insp.Inspect(R__cl, R__parent, "phi", &phi);
      R__insp.Inspect(R__cl, R__parent, "m", &m);
      R__insp.Inspect(R__cl, R__parent, "e", &e);
      R__insp.Inspect(R__cl, R__parent, "status", &status);
      R__insp.Inspect(R__cl, R__parent, "vertexZ", &vertexZ);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjMCParticle(void *p) {
      return  p ? new(p) ::StjMCParticle : new ::StjMCParticle;
   }
   static void *newArray_StjMCParticle(Long_t nElements, void *p) {
      return p ? new(p) ::StjMCParticle[nElements] : new ::StjMCParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjMCParticle(void *p) {
      delete ((::StjMCParticle*)p);
   }
   static void deleteArray_StjMCParticle(void *p) {
      delete [] ((::StjMCParticle*)p);
   }
   static void destruct_StjMCParticle(void *p) {
      typedef ::StjMCParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjMCParticle

//______________________________________________________________________________
void StjMCParticleListCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjMCParticleListCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjMCParticleListCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjMCParticleListCut::Class(),this);
   }
}

//______________________________________________________________________________
void StjMCParticleListCut::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjMCParticleListCut.
      TClass *R__cl = ::StjMCParticleListCut::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_cutList", (void*)&_cutList);
      ::ROOT::GenericShowMembers("StjMCParticleListCut::CutList", (void*)&_cutList, R__insp, strcat(R__parent,"_cutList."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjMCParticleListCut(void *p) {
      return  p ? new(p) ::StjMCParticleListCut : new ::StjMCParticleListCut;
   }
   static void *newArray_StjMCParticleListCut(Long_t nElements, void *p) {
      return p ? new(p) ::StjMCParticleListCut[nElements] : new ::StjMCParticleListCut[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjMCParticleListCut(void *p) {
      delete ((::StjMCParticleListCut*)p);
   }
   static void deleteArray_StjMCParticleListCut(void *p) {
      delete [] ((::StjMCParticleListCut*)p);
   }
   static void destruct_StjMCParticleListCut(void *p) {
      typedef ::StjMCParticleListCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjMCParticleListCut

//______________________________________________________________________________
void StjMCParticleListToFourVecList::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjMCParticleListToFourVecList.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjMCParticleListToFourVecList::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjMCParticleListToFourVecList::Class(),this);
   }
}

//______________________________________________________________________________
void StjMCParticleListToFourVecList::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjMCParticleListToFourVecList.
      TClass *R__cl = ::StjMCParticleListToFourVecList::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjMCParticleListToFourVecList(void *p) {
      return  p ? new(p) ::StjMCParticleListToFourVecList : new ::StjMCParticleListToFourVecList;
   }
   static void *newArray_StjMCParticleListToFourVecList(Long_t nElements, void *p) {
      return p ? new(p) ::StjMCParticleListToFourVecList[nElements] : new ::StjMCParticleListToFourVecList[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjMCParticleListToFourVecList(void *p) {
      delete ((::StjMCParticleListToFourVecList*)p);
   }
   static void deleteArray_StjMCParticleListToFourVecList(void *p) {
      delete [] ((::StjMCParticleListToFourVecList*)p);
   }
   static void destruct_StjMCParticleListToFourVecList(void *p) {
      typedef ::StjMCParticleListToFourVecList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjMCParticleListToFourVecList

//______________________________________________________________________________
void StjMCParticlePrint::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjMCParticlePrint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjMCParticlePrint::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjMCParticlePrint::Class(),this);
   }
}

//______________________________________________________________________________
void StjMCParticlePrint::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjMCParticlePrint.
      TClass *R__cl = ::StjMCParticlePrint::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjMCParticlePrint(void *p) {
      return  p ? new(p) ::StjMCParticlePrint : new ::StjMCParticlePrint;
   }
   static void *newArray_StjMCParticlePrint(Long_t nElements, void *p) {
      return p ? new(p) ::StjMCParticlePrint[nElements] : new ::StjMCParticlePrint[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjMCParticlePrint(void *p) {
      delete ((::StjMCParticlePrint*)p);
   }
   static void deleteArray_StjMCParticlePrint(void *p) {
      delete [] ((::StjMCParticlePrint*)p);
   }
   static void destruct_StjMCParticlePrint(void *p) {
      typedef ::StjMCParticlePrint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjMCParticlePrint

//______________________________________________________________________________
void StjMCParticleToFourVec::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjMCParticleToFourVec.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjMCParticleToFourVec::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjMCParticleToFourVec::Class(),this);
   }
}

//______________________________________________________________________________
void StjMCParticleToFourVec::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjMCParticleToFourVec.
      TClass *R__cl = ::StjMCParticleToFourVec::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjMCParticleToFourVec(void *p) {
      return  p ? new(p) ::StjMCParticleToFourVec : new ::StjMCParticleToFourVec;
   }
   static void *newArray_StjMCParticleToFourVec(Long_t nElements, void *p) {
      return p ? new(p) ::StjMCParticleToFourVec[nElements] : new ::StjMCParticleToFourVec[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjMCParticleToFourVec(void *p) {
      delete ((::StjMCParticleToFourVec*)p);
   }
   static void deleteArray_StjMCParticleToFourVec(void *p) {
      delete [] ((::StjMCParticleToFourVec*)p);
   }
   static void destruct_StjMCParticleToFourVec(void *p) {
      typedef ::StjMCParticleToFourVec current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjMCParticleToFourVec

//______________________________________________________________________________
void StjMCTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjMCTree.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjMCTree::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjMCTree::Class(),this);
   }
}

//______________________________________________________________________________
void StjMCTree::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjMCTree.
      TClass *R__cl = ::StjMCTree::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*_reader", &_reader);
      StjMC::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjMCTree(void *p) {
      delete ((::StjMCTree*)p);
   }
   static void deleteArray_StjMCTree(void *p) {
      delete [] ((::StjMCTree*)p);
   }
   static void destruct_StjMCTree(void *p) {
      typedef ::StjMCTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjMCTree

//______________________________________________________________________________
void StjTPC::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTPC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTPC::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTPC::Class(),this);
   }
}

//______________________________________________________________________________
void StjTPC::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTPC.
      TClass *R__cl = ::StjTPC::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjTPC(void *p) {
      delete ((::StjTPC*)p);
   }
   static void deleteArray_StjTPC(void *p) {
      delete [] ((::StjTPC*)p);
   }
   static void destruct_StjTPC(void *p) {
      typedef ::StjTPC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTPC

//______________________________________________________________________________
void StjTPCNull::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTPCNull.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTPCNull::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTPCNull::Class(),this);
   }
}

//______________________________________________________________________________
void StjTPCNull::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTPCNull.
      TClass *R__cl = ::StjTPCNull::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      StjTPC::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTPCNull(void *p) {
      return  p ? new(p) ::StjTPCNull : new ::StjTPCNull;
   }
   static void *newArray_StjTPCNull(Long_t nElements, void *p) {
      return p ? new(p) ::StjTPCNull[nElements] : new ::StjTPCNull[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTPCNull(void *p) {
      delete ((::StjTPCNull*)p);
   }
   static void deleteArray_StjTPCNull(void *p) {
      delete [] ((::StjTPCNull*)p);
   }
   static void destruct_StjTPCNull(void *p) {
      typedef ::StjTPCNull current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTPCNull

//______________________________________________________________________________
void StjTPCTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTPCTree.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTPCTree::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTPCTree::Class(),this);
   }
}

//______________________________________________________________________________
void StjTPCTree::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTPCTree.
      TClass *R__cl = ::StjTPCTree::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*_reader", &_reader);
      StjTPC::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjTPCTree(void *p) {
      delete ((::StjTPCTree*)p);
   }
   static void deleteArray_StjTPCTree(void *p) {
      delete [] ((::StjTPCTree*)p);
   }
   static void destruct_StjTPCTree(void *p) {
      typedef ::StjTPCTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTPCTree

//______________________________________________________________________________
void StjTPCTxt::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTPCTxt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTPCTxt::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTPCTxt::Class(),this);
   }
}

//______________________________________________________________________________
void StjTPCTxt::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTPCTxt.
      TClass *R__cl = ::StjTPCTxt::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_dataFile", (void*)&_dataFile);
      ::ROOT::GenericShowMembers("ifstream", (void*)&_dataFile, R__insp, strcat(R__parent,"_dataFile."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_currentEvent", &_currentEvent);
      R__insp.Inspect(R__cl, R__parent, "_oldLine", (void*)&_oldLine);
      ::ROOT::GenericShowMembers("string", (void*)&_oldLine, R__insp, strcat(R__parent,"_oldLine."),false);
      R__parent[R__ncp] = 0;
      StjTPC::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjTPCTxt(void *p) {
      delete ((::StjTPCTxt*)p);
   }
   static void deleteArray_StjTPCTxt(void *p) {
      delete [] ((::StjTPCTxt*)p);
   }
   static void destruct_StjTPCTxt(void *p) {
      typedef ::StjTPCTxt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTPCTxt

//______________________________________________________________________________
void StjTowerEnergyCorrectionForTracks::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyCorrectionForTracks.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyCorrectionForTracks::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyCorrectionForTracks::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyCorrectionForTracks::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyCorrectionForTracks.
      TClass *R__cl = ::StjTowerEnergyCorrectionForTracks::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "mNtracksOnTower[4801]", mNtracksOnTower);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergyCorrectionForTracks(void *p) {
      return  p ? new(p) ::StjTowerEnergyCorrectionForTracks : new ::StjTowerEnergyCorrectionForTracks;
   }
   static void *newArray_StjTowerEnergyCorrectionForTracks(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergyCorrectionForTracks[nElements] : new ::StjTowerEnergyCorrectionForTracks[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergyCorrectionForTracks(void *p) {
      delete ((::StjTowerEnergyCorrectionForTracks*)p);
   }
   static void deleteArray_StjTowerEnergyCorrectionForTracks(void *p) {
      delete [] ((::StjTowerEnergyCorrectionForTracks*)p);
   }
   static void destruct_StjTowerEnergyCorrectionForTracks(void *p) {
      typedef ::StjTowerEnergyCorrectionForTracks current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyCorrectionForTracks

//______________________________________________________________________________
void StjTowerEnergyCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyCut::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyCut::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyCut.
      TClass *R__cl = ::StjTowerEnergyCut::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjTowerEnergyCut(void *p) {
      delete ((::StjTowerEnergyCut*)p);
   }
   static void deleteArray_StjTowerEnergyCut(void *p) {
      delete [] ((::StjTowerEnergyCut*)p);
   }
   static void destruct_StjTowerEnergyCut(void *p) {
      typedef ::StjTowerEnergyCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyCut

//______________________________________________________________________________
void StjTowerEnergyCut2003BemcTower::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyCut2003BemcTower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyCut2003BemcTower::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyCut2003BemcTower::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyCut2003BemcTower::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyCut2003BemcTower.
      TClass *R__cl = ::StjTowerEnergyCut2003BemcTower::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      StjTowerEnergyCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergyCut2003BemcTower(void *p) {
      return  p ? new(p) ::StjTowerEnergyCut2003BemcTower : new ::StjTowerEnergyCut2003BemcTower;
   }
   static void *newArray_StjTowerEnergyCut2003BemcTower(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergyCut2003BemcTower[nElements] : new ::StjTowerEnergyCut2003BemcTower[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergyCut2003BemcTower(void *p) {
      delete ((::StjTowerEnergyCut2003BemcTower*)p);
   }
   static void deleteArray_StjTowerEnergyCut2003BemcTower(void *p) {
      delete [] ((::StjTowerEnergyCut2003BemcTower*)p);
   }
   static void destruct_StjTowerEnergyCut2003BemcTower(void *p) {
      typedef ::StjTowerEnergyCut2003BemcTower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyCut2003BemcTower

//______________________________________________________________________________
void StjTowerEnergyCutAdc::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyCutAdc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyCutAdc::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyCutAdc::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyCutAdc::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyCutAdc.
      TClass *R__cl = ::StjTowerEnergyCutAdc::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_factor", &_factor);
      StjTowerEnergyCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergyCutAdc(void *p) {
      return  p ? new(p) ::StjTowerEnergyCutAdc : new ::StjTowerEnergyCutAdc;
   }
   static void *newArray_StjTowerEnergyCutAdc(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergyCutAdc[nElements] : new ::StjTowerEnergyCutAdc[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergyCutAdc(void *p) {
      delete ((::StjTowerEnergyCutAdc*)p);
   }
   static void deleteArray_StjTowerEnergyCutAdc(void *p) {
      delete [] ((::StjTowerEnergyCutAdc*)p);
   }
   static void destruct_StjTowerEnergyCutAdc(void *p) {
      typedef ::StjTowerEnergyCutAdc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyCutAdc

//______________________________________________________________________________
void StjTowerEnergyCutBemcStatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyCutBemcStatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyCutBemcStatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyCutBemcStatus::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyCutBemcStatus::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyCutBemcStatus.
      TClass *R__cl = ::StjTowerEnergyCutBemcStatus::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_goodStatus", &_goodStatus);
      StjTowerEnergyCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergyCutBemcStatus(void *p) {
      return  p ? new(p) ::StjTowerEnergyCutBemcStatus : new ::StjTowerEnergyCutBemcStatus;
   }
   static void *newArray_StjTowerEnergyCutBemcStatus(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergyCutBemcStatus[nElements] : new ::StjTowerEnergyCutBemcStatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergyCutBemcStatus(void *p) {
      delete ((::StjTowerEnergyCutBemcStatus*)p);
   }
   static void deleteArray_StjTowerEnergyCutBemcStatus(void *p) {
      delete [] ((::StjTowerEnergyCutBemcStatus*)p);
   }
   static void destruct_StjTowerEnergyCutBemcStatus(void *p) {
      typedef ::StjTowerEnergyCutBemcStatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyCutBemcStatus

//______________________________________________________________________________
void StjTowerEnergyCutBemcWestOnly::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyCutBemcWestOnly.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyCutBemcWestOnly::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyCutBemcWestOnly::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyCutBemcWestOnly::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyCutBemcWestOnly.
      TClass *R__cl = ::StjTowerEnergyCutBemcWestOnly::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      StjTowerEnergyCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergyCutBemcWestOnly(void *p) {
      return  p ? new(p) ::StjTowerEnergyCutBemcWestOnly : new ::StjTowerEnergyCutBemcWestOnly;
   }
   static void *newArray_StjTowerEnergyCutBemcWestOnly(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergyCutBemcWestOnly[nElements] : new ::StjTowerEnergyCutBemcWestOnly[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergyCutBemcWestOnly(void *p) {
      delete ((::StjTowerEnergyCutBemcWestOnly*)p);
   }
   static void deleteArray_StjTowerEnergyCutBemcWestOnly(void *p) {
      delete [] ((::StjTowerEnergyCutBemcWestOnly*)p);
   }
   static void destruct_StjTowerEnergyCutBemcWestOnly(void *p) {
      typedef ::StjTowerEnergyCutBemcWestOnly current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyCutBemcWestOnly

//______________________________________________________________________________
void StjTowerEnergyCutEnergy::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyCutEnergy.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyCutEnergy::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyCutEnergy::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyCutEnergy::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyCutEnergy.
      TClass *R__cl = ::StjTowerEnergyCutEnergy::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      StjTowerEnergyCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergyCutEnergy(void *p) {
      return  p ? new(p) ::StjTowerEnergyCutEnergy : new ::StjTowerEnergyCutEnergy;
   }
   static void *newArray_StjTowerEnergyCutEnergy(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergyCutEnergy[nElements] : new ::StjTowerEnergyCutEnergy[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergyCutEnergy(void *p) {
      delete ((::StjTowerEnergyCutEnergy*)p);
   }
   static void deleteArray_StjTowerEnergyCutEnergy(void *p) {
      delete [] ((::StjTowerEnergyCutEnergy*)p);
   }
   static void destruct_StjTowerEnergyCutEnergy(void *p) {
      typedef ::StjTowerEnergyCutEnergy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyCutEnergy

//______________________________________________________________________________
void StjTowerEnergyCutEt::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyCutEt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyCutEt::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyCutEt::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyCutEt::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyCutEt.
      TClass *R__cl = ::StjTowerEnergyCutEt::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      StjTowerEnergyCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergyCutEt(void *p) {
      return  p ? new(p) ::StjTowerEnergyCutEt : new ::StjTowerEnergyCutEt;
   }
   static void *newArray_StjTowerEnergyCutEt(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergyCutEt[nElements] : new ::StjTowerEnergyCutEt[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergyCutEt(void *p) {
      delete ((::StjTowerEnergyCutEt*)p);
   }
   static void deleteArray_StjTowerEnergyCutEt(void *p) {
      delete [] ((::StjTowerEnergyCutEt*)p);
   }
   static void destruct_StjTowerEnergyCutEt(void *p) {
      typedef ::StjTowerEnergyCutEt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyCutEt

//______________________________________________________________________________
void StjTowerEnergy::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergy.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergy::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergy::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergy::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergy.
      TClass *R__cl = ::StjTowerEnergy::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "runNumber", &runNumber);
      R__insp.Inspect(R__cl, R__parent, "eventId", &eventId);
      R__insp.Inspect(R__cl, R__parent, "detectorId", &detectorId);
      R__insp.Inspect(R__cl, R__parent, "towerId", &towerId);
      R__insp.Inspect(R__cl, R__parent, "towerR", &towerR);
      R__insp.Inspect(R__cl, R__parent, "towerEta", &towerEta);
      R__insp.Inspect(R__cl, R__parent, "towerPhi", &towerPhi);
      R__insp.Inspect(R__cl, R__parent, "vertexX", &vertexX);
      R__insp.Inspect(R__cl, R__parent, "vertexY", &vertexY);
      R__insp.Inspect(R__cl, R__parent, "vertexZ", &vertexZ);
      R__insp.Inspect(R__cl, R__parent, "energy", &energy);
      R__insp.Inspect(R__cl, R__parent, "adc", &adc);
      R__insp.Inspect(R__cl, R__parent, "pedestal", &pedestal);
      R__insp.Inspect(R__cl, R__parent, "rms", &rms);
      R__insp.Inspect(R__cl, R__parent, "status", &status);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergy(void *p) {
      return  p ? new(p) ::StjTowerEnergy : new ::StjTowerEnergy;
   }
   static void *newArray_StjTowerEnergy(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergy[nElements] : new ::StjTowerEnergy[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergy(void *p) {
      delete ((::StjTowerEnergy*)p);
   }
   static void deleteArray_StjTowerEnergy(void *p) {
      delete [] ((::StjTowerEnergy*)p);
   }
   static void destruct_StjTowerEnergy(void *p) {
      typedef ::StjTowerEnergy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergy

//______________________________________________________________________________
void StjTowerEnergyListCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyListCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyListCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyListCut::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyListCut::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyListCut.
      TClass *R__cl = ::StjTowerEnergyListCut::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_cutList", (void*)&_cutList);
      ::ROOT::GenericShowMembers("StjTowerEnergyListCut::CutList", (void*)&_cutList, R__insp, strcat(R__parent,"_cutList."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergyListCut(void *p) {
      return  p ? new(p) ::StjTowerEnergyListCut : new ::StjTowerEnergyListCut;
   }
   static void *newArray_StjTowerEnergyListCut(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergyListCut[nElements] : new ::StjTowerEnergyListCut[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergyListCut(void *p) {
      delete ((::StjTowerEnergyListCut*)p);
   }
   static void deleteArray_StjTowerEnergyListCut(void *p) {
      delete [] ((::StjTowerEnergyListCut*)p);
   }
   static void destruct_StjTowerEnergyListCut(void *p) {
      typedef ::StjTowerEnergyListCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyListCut

//______________________________________________________________________________
void StjTowerEnergyListVariation::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyListVariation.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyListVariation::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyListVariation::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyListVariation::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyListVariation.
      TClass *R__cl = ::StjTowerEnergyListVariation::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_varList", (void*)&_varList);
      ::ROOT::GenericShowMembers("StjTowerEnergyListVariation::VarList", (void*)&_varList, R__insp, strcat(R__parent,"_varList."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergyListVariation(void *p) {
      return  p ? new(p) ::StjTowerEnergyListVariation : new ::StjTowerEnergyListVariation;
   }
   static void *newArray_StjTowerEnergyListVariation(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergyListVariation[nElements] : new ::StjTowerEnergyListVariation[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergyListVariation(void *p) {
      delete ((::StjTowerEnergyListVariation*)p);
   }
   static void deleteArray_StjTowerEnergyListVariation(void *p) {
      delete [] ((::StjTowerEnergyListVariation*)p);
   }
   static void destruct_StjTowerEnergyListVariation(void *p) {
      typedef ::StjTowerEnergyListVariation current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyListVariation

//______________________________________________________________________________
void StjTowerEnergyPrint::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyPrint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyPrint::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyPrint::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyPrint::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyPrint.
      TClass *R__cl = ::StjTowerEnergyPrint::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergyPrint(void *p) {
      return  p ? new(p) ::StjTowerEnergyPrint : new ::StjTowerEnergyPrint;
   }
   static void *newArray_StjTowerEnergyPrint(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergyPrint[nElements] : new ::StjTowerEnergyPrint[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergyPrint(void *p) {
      delete ((::StjTowerEnergyPrint*)p);
   }
   static void deleteArray_StjTowerEnergyPrint(void *p) {
      delete [] ((::StjTowerEnergyPrint*)p);
   }
   static void destruct_StjTowerEnergyPrint(void *p) {
      typedef ::StjTowerEnergyPrint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyPrint

//______________________________________________________________________________
void StjTowerEnergyToFourVec::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyToFourVec.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyToFourVec::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyToFourVec::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyToFourVec::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyToFourVec.
      TClass *R__cl = ::StjTowerEnergyToFourVec::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergyToFourVec(void *p) {
      return  p ? new(p) ::StjTowerEnergyToFourVec : new ::StjTowerEnergyToFourVec;
   }
   static void *newArray_StjTowerEnergyToFourVec(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergyToFourVec[nElements] : new ::StjTowerEnergyToFourVec[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergyToFourVec(void *p) {
      delete ((::StjTowerEnergyToFourVec*)p);
   }
   static void deleteArray_StjTowerEnergyToFourVec(void *p) {
      delete [] ((::StjTowerEnergyToFourVec*)p);
   }
   static void destruct_StjTowerEnergyToFourVec(void *p) {
      typedef ::StjTowerEnergyToFourVec current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyToFourVec

//______________________________________________________________________________
void StjTowerEnergyToTLorentzVector::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyToTLorentzVector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyToTLorentzVector::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyToTLorentzVector::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyToTLorentzVector::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyToTLorentzVector.
      TClass *R__cl = ::StjTowerEnergyToTLorentzVector::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_mass", &_mass);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergyToTLorentzVector(void *p) {
      return  p ? new(p) ::StjTowerEnergyToTLorentzVector : new ::StjTowerEnergyToTLorentzVector;
   }
   static void *newArray_StjTowerEnergyToTLorentzVector(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergyToTLorentzVector[nElements] : new ::StjTowerEnergyToTLorentzVector[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergyToTLorentzVector(void *p) {
      delete ((::StjTowerEnergyToTLorentzVector*)p);
   }
   static void deleteArray_StjTowerEnergyToTLorentzVector(void *p) {
      delete [] ((::StjTowerEnergyToTLorentzVector*)p);
   }
   static void destruct_StjTowerEnergyToTLorentzVector(void *p) {
      typedef ::StjTowerEnergyToTLorentzVector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyToTLorentzVector

//______________________________________________________________________________
void StjTowerEnergyVariation::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyVariation.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyVariation::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyVariation::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyVariation::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyVariation.
      TClass *R__cl = ::StjTowerEnergyVariation::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjTowerEnergyVariation(void *p) {
      delete ((::StjTowerEnergyVariation*)p);
   }
   static void deleteArray_StjTowerEnergyVariation(void *p) {
      delete [] ((::StjTowerEnergyVariation*)p);
   }
   static void destruct_StjTowerEnergyVariation(void *p) {
      typedef ::StjTowerEnergyVariation current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyVariation

//______________________________________________________________________________
void StjTowerEnergyVariationEnergy::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTowerEnergyVariationEnergy.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTowerEnergyVariationEnergy::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTowerEnergyVariationEnergy::Class(),this);
   }
}

//______________________________________________________________________________
void StjTowerEnergyVariationEnergy::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTowerEnergyVariationEnergy.
      TClass *R__cl = ::StjTowerEnergyVariationEnergy::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_ratio", &_ratio);
      StjTowerEnergyVariation::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTowerEnergyVariationEnergy(void *p) {
      return  p ? new(p) ::StjTowerEnergyVariationEnergy : new ::StjTowerEnergyVariationEnergy;
   }
   static void *newArray_StjTowerEnergyVariationEnergy(Long_t nElements, void *p) {
      return p ? new(p) ::StjTowerEnergyVariationEnergy[nElements] : new ::StjTowerEnergyVariationEnergy[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTowerEnergyVariationEnergy(void *p) {
      delete ((::StjTowerEnergyVariationEnergy*)p);
   }
   static void deleteArray_StjTowerEnergyVariationEnergy(void *p) {
      delete [] ((::StjTowerEnergyVariationEnergy*)p);
   }
   static void destruct_StjTowerEnergyVariationEnergy(void *p) {
      typedef ::StjTowerEnergyVariationEnergy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTowerEnergyVariationEnergy

//______________________________________________________________________________
void StjTrackCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTrackCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTrackCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTrackCut::Class(),this);
   }
}

//______________________________________________________________________________
void StjTrackCut::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTrackCut.
      TClass *R__cl = ::StjTrackCut::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjTrackCut(void *p) {
      delete ((::StjTrackCut*)p);
   }
   static void deleteArray_StjTrackCut(void *p) {
      delete [] ((::StjTrackCut*)p);
   }
   static void destruct_StjTrackCut(void *p) {
      typedef ::StjTrackCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTrackCut

//______________________________________________________________________________
void StjTrackCutDca::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTrackCutDca.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTrackCutDca::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTrackCutDca::Class(),this);
   }
}

//______________________________________________________________________________
void StjTrackCutDca::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTrackCutDca.
      TClass *R__cl = ::StjTrackCutDca::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      StjTrackCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTrackCutDca(void *p) {
      return  p ? new(p) ::StjTrackCutDca : new ::StjTrackCutDca;
   }
   static void *newArray_StjTrackCutDca(Long_t nElements, void *p) {
      return p ? new(p) ::StjTrackCutDca[nElements] : new ::StjTrackCutDca[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTrackCutDca(void *p) {
      delete ((::StjTrackCutDca*)p);
   }
   static void deleteArray_StjTrackCutDca(void *p) {
      delete [] ((::StjTrackCutDca*)p);
   }
   static void destruct_StjTrackCutDca(void *p) {
      typedef ::StjTrackCutDca current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTrackCutDca

//______________________________________________________________________________
void StjTrackCutDcaPtDependent::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTrackCutDcaPtDependent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTrackCutDcaPtDependent::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTrackCutDcaPtDependent::Class(),this);
   }
}

//______________________________________________________________________________
void StjTrackCutDcaPtDependent::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTrackCutDcaPtDependent.
      TClass *R__cl = ::StjTrackCutDcaPtDependent::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_pt1", &_pt1);
      R__insp.Inspect(R__cl, R__parent, "_dcaMax1", &_dcaMax1);
      R__insp.Inspect(R__cl, R__parent, "_pt2", &_pt2);
      R__insp.Inspect(R__cl, R__parent, "_dcaMax2", &_dcaMax2);
      StjTrackCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTrackCutDcaPtDependent(void *p) {
      return  p ? new(p) ::StjTrackCutDcaPtDependent : new ::StjTrackCutDcaPtDependent;
   }
   static void *newArray_StjTrackCutDcaPtDependent(Long_t nElements, void *p) {
      return p ? new(p) ::StjTrackCutDcaPtDependent[nElements] : new ::StjTrackCutDcaPtDependent[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTrackCutDcaPtDependent(void *p) {
      delete ((::StjTrackCutDcaPtDependent*)p);
   }
   static void deleteArray_StjTrackCutDcaPtDependent(void *p) {
      delete [] ((::StjTrackCutDcaPtDependent*)p);
   }
   static void destruct_StjTrackCutDcaPtDependent(void *p) {
      typedef ::StjTrackCutDcaPtDependent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTrackCutDcaPtDependent

//______________________________________________________________________________
void StjTrackCutEta::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTrackCutEta.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTrackCutEta::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTrackCutEta::Class(),this);
   }
}

//______________________________________________________________________________
void StjTrackCutEta::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTrackCutEta.
      TClass *R__cl = ::StjTrackCutEta::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      StjTrackCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTrackCutEta(void *p) {
      return  p ? new(p) ::StjTrackCutEta : new ::StjTrackCutEta;
   }
   static void *newArray_StjTrackCutEta(Long_t nElements, void *p) {
      return p ? new(p) ::StjTrackCutEta[nElements] : new ::StjTrackCutEta[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTrackCutEta(void *p) {
      delete ((::StjTrackCutEta*)p);
   }
   static void deleteArray_StjTrackCutEta(void *p) {
      delete [] ((::StjTrackCutEta*)p);
   }
   static void destruct_StjTrackCutEta(void *p) {
      typedef ::StjTrackCutEta current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTrackCutEta

//______________________________________________________________________________
void StjTrackCutFlag::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTrackCutFlag.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTrackCutFlag::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTrackCutFlag::Class(),this);
   }
}

//______________________________________________________________________________
void StjTrackCutFlag::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTrackCutFlag.
      TClass *R__cl = ::StjTrackCutFlag::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      StjTrackCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTrackCutFlag(void *p) {
      return  p ? new(p) ::StjTrackCutFlag : new ::StjTrackCutFlag;
   }
   static void *newArray_StjTrackCutFlag(Long_t nElements, void *p) {
      return p ? new(p) ::StjTrackCutFlag[nElements] : new ::StjTrackCutFlag[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTrackCutFlag(void *p) {
      delete ((::StjTrackCutFlag*)p);
   }
   static void deleteArray_StjTrackCutFlag(void *p) {
      delete [] ((::StjTrackCutFlag*)p);
   }
   static void destruct_StjTrackCutFlag(void *p) {
      typedef ::StjTrackCutFlag current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTrackCutFlag

//______________________________________________________________________________
void StjTrackCutNHits::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTrackCutNHits.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTrackCutNHits::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTrackCutNHits::Class(),this);
   }
}

//______________________________________________________________________________
void StjTrackCutNHits::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTrackCutNHits.
      TClass *R__cl = ::StjTrackCutNHits::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_min", &_min);
      R__insp.Inspect(R__cl, R__parent, "_max", &_max);
      StjTrackCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTrackCutNHits(void *p) {
      return  p ? new(p) ::StjTrackCutNHits : new ::StjTrackCutNHits;
   }
   static void *newArray_StjTrackCutNHits(Long_t nElements, void *p) {
      return p ? new(p) ::StjTrackCutNHits[nElements] : new ::StjTrackCutNHits[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTrackCutNHits(void *p) {
      delete ((::StjTrackCutNHits*)p);
   }
   static void deleteArray_StjTrackCutNHits(void *p) {
      delete [] ((::StjTrackCutNHits*)p);
   }
   static void destruct_StjTrackCutNHits(void *p) {
      typedef ::StjTrackCutNHits current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTrackCutNHits

//______________________________________________________________________________
void StjTrackCutPossibleHitRatio::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTrackCutPossibleHitRatio.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTrackCutPossibleHitRatio::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTrackCutPossibleHitRatio::Class(),this);
   }
}

//______________________________________________________________________________
void StjTrackCutPossibleHitRatio::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTrackCutPossibleHitRatio.
      TClass *R__cl = ::StjTrackCutPossibleHitRatio::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_minRatio", &_minRatio);
      StjTrackCut::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTrackCutPossibleHitRatio(void *p) {
      return  p ? new(p) ::StjTrackCutPossibleHitRatio : new ::StjTrackCutPossibleHitRatio;
   }
   static void *newArray_StjTrackCutPossibleHitRatio(Long_t nElements, void *p) {
      return p ? new(p) ::StjTrackCutPossibleHitRatio[nElements] : new ::StjTrackCutPossibleHitRatio[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTrackCutPossibleHitRatio(void *p) {
      delete ((::StjTrackCutPossibleHitRatio*)p);
   }
   static void deleteArray_StjTrackCutPossibleHitRatio(void *p) {
      delete [] ((::StjTrackCutPossibleHitRatio*)p);
   }
   static void destruct_StjTrackCutPossibleHitRatio(void *p) {
      typedef ::StjTrackCutPossibleHitRatio current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTrackCutPossibleHitRatio

//______________________________________________________________________________
void StjTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTrack::Class(),this);
   }
}

//______________________________________________________________________________
void StjTrack::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTrack.
      TClass *R__cl = ::StjTrack::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "runNumber", &runNumber);
      R__insp.Inspect(R__cl, R__parent, "eventId", &eventId);
      R__insp.Inspect(R__cl, R__parent, "detectorId", &detectorId);
      R__insp.Inspect(R__cl, R__parent, "pt", &pt);
      R__insp.Inspect(R__cl, R__parent, "eta", &eta);
      R__insp.Inspect(R__cl, R__parent, "phi", &phi);
      R__insp.Inspect(R__cl, R__parent, "flag", &flag);
      R__insp.Inspect(R__cl, R__parent, "nHits", &nHits);
      R__insp.Inspect(R__cl, R__parent, "charge", &charge);
      R__insp.Inspect(R__cl, R__parent, "nHitsPoss", &nHitsPoss);
      R__insp.Inspect(R__cl, R__parent, "nHitsDedx", &nHitsDedx);
      R__insp.Inspect(R__cl, R__parent, "nHitsFit", &nHitsFit);
      R__insp.Inspect(R__cl, R__parent, "nSigmaPion", &nSigmaPion);
      R__insp.Inspect(R__cl, R__parent, "Tdca", &Tdca);
      R__insp.Inspect(R__cl, R__parent, "dcaZ", &dcaZ);
      R__insp.Inspect(R__cl, R__parent, "dcaD", &dcaD);
      R__insp.Inspect(R__cl, R__parent, "BField", &BField);
      R__insp.Inspect(R__cl, R__parent, "bemcRadius", &bemcRadius);
      R__insp.Inspect(R__cl, R__parent, "vertexZ", &vertexZ);
      R__insp.Inspect(R__cl, R__parent, "exitDetectorId", &exitDetectorId);
      R__insp.Inspect(R__cl, R__parent, "exitTowerId", &exitTowerId);
      R__insp.Inspect(R__cl, R__parent, "exitEta", &exitEta);
      R__insp.Inspect(R__cl, R__parent, "exitPhi", &exitPhi);
      R__insp.Inspect(R__cl, R__parent, "dEdx", &dEdx);
      R__insp.Inspect(R__cl, R__parent, "trackIndex", &trackIndex);
      R__insp.Inspect(R__cl, R__parent, "id", &id);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTrack(void *p) {
      return  p ? new(p) ::StjTrack : new ::StjTrack;
   }
   static void *newArray_StjTrack(Long_t nElements, void *p) {
      return p ? new(p) ::StjTrack[nElements] : new ::StjTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTrack(void *p) {
      delete ((::StjTrack*)p);
   }
   static void deleteArray_StjTrack(void *p) {
      delete [] ((::StjTrack*)p);
   }
   static void destruct_StjTrack(void *p) {
      typedef ::StjTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTrack

//______________________________________________________________________________
void StjTrackListCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTrackListCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTrackListCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTrackListCut::Class(),this);
   }
}

//______________________________________________________________________________
void StjTrackListCut::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTrackListCut.
      TClass *R__cl = ::StjTrackListCut::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_cutList", (void*)&_cutList);
      ::ROOT::GenericShowMembers("StjTrackListCut::CutList", (void*)&_cutList, R__insp, strcat(R__parent,"_cutList."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTrackListCut(void *p) {
      return  p ? new(p) ::StjTrackListCut : new ::StjTrackListCut;
   }
   static void *newArray_StjTrackListCut(Long_t nElements, void *p) {
      return p ? new(p) ::StjTrackListCut[nElements] : new ::StjTrackListCut[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTrackListCut(void *p) {
      delete ((::StjTrackListCut*)p);
   }
   static void deleteArray_StjTrackListCut(void *p) {
      delete [] ((::StjTrackListCut*)p);
   }
   static void destruct_StjTrackListCut(void *p) {
      typedef ::StjTrackListCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTrackListCut

//______________________________________________________________________________
void StjTrackPrint::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTrackPrint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTrackPrint::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTrackPrint::Class(),this);
   }
}

//______________________________________________________________________________
void StjTrackPrint::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTrackPrint.
      TClass *R__cl = ::StjTrackPrint::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTrackPrint(void *p) {
      return  p ? new(p) ::StjTrackPrint : new ::StjTrackPrint;
   }
   static void *newArray_StjTrackPrint(Long_t nElements, void *p) {
      return p ? new(p) ::StjTrackPrint[nElements] : new ::StjTrackPrint[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTrackPrint(void *p) {
      delete ((::StjTrackPrint*)p);
   }
   static void deleteArray_StjTrackPrint(void *p) {
      delete [] ((::StjTrackPrint*)p);
   }
   static void destruct_StjTrackPrint(void *p) {
      typedef ::StjTrackPrint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTrackPrint

//______________________________________________________________________________
void StjTrackToFourVec::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTrackToFourVec.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTrackToFourVec::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTrackToFourVec::Class(),this);
   }
}

//______________________________________________________________________________
void StjTrackToFourVec::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTrackToFourVec.
      TClass *R__cl = ::StjTrackToFourVec::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTrackToFourVec(void *p) {
      return  p ? new(p) ::StjTrackToFourVec : new ::StjTrackToFourVec;
   }
   static void *newArray_StjTrackToFourVec(Long_t nElements, void *p) {
      return p ? new(p) ::StjTrackToFourVec[nElements] : new ::StjTrackToFourVec[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTrackToFourVec(void *p) {
      delete ((::StjTrackToFourVec*)p);
   }
   static void deleteArray_StjTrackToFourVec(void *p) {
      delete [] ((::StjTrackToFourVec*)p);
   }
   static void destruct_StjTrackToFourVec(void *p) {
      typedef ::StjTrackToFourVec current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTrackToFourVec

//______________________________________________________________________________
void StjTrackToTLorentzVector::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTrackToTLorentzVector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTrackToTLorentzVector::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTrackToTLorentzVector::Class(),this);
   }
}

//______________________________________________________________________________
void StjTrackToTLorentzVector::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTrackToTLorentzVector.
      TClass *R__cl = ::StjTrackToTLorentzVector::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_mass", &_mass);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTrackToTLorentzVector(void *p) {
      return  p ? new(p) ::StjTrackToTLorentzVector : new ::StjTrackToTLorentzVector;
   }
   static void *newArray_StjTrackToTLorentzVector(Long_t nElements, void *p) {
      return p ? new(p) ::StjTrackToTLorentzVector[nElements] : new ::StjTrackToTLorentzVector[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTrackToTLorentzVector(void *p) {
      delete ((::StjTrackToTLorentzVector*)p);
   }
   static void deleteArray_StjTrackToTLorentzVector(void *p) {
      delete [] ((::StjTrackToTLorentzVector*)p);
   }
   static void destruct_StjTrackToTLorentzVector(void *p) {
      typedef ::StjTrackToTLorentzVector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTrackToTLorentzVector

//______________________________________________________________________________
void StjTrackTowerEnergyListToFourVecList::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjTrackTowerEnergyListToFourVecList.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjTrackTowerEnergyListToFourVecList::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjTrackTowerEnergyListToFourVecList::Class(),this);
   }
}

//______________________________________________________________________________
void StjTrackTowerEnergyListToFourVecList::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjTrackTowerEnergyListToFourVecList.
      TClass *R__cl = ::StjTrackTowerEnergyListToFourVecList::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StjTrackTowerEnergyListToFourVecList(void *p) {
      return  p ? new(p) ::StjTrackTowerEnergyListToFourVecList : new ::StjTrackTowerEnergyListToFourVecList;
   }
   static void *newArray_StjTrackTowerEnergyListToFourVecList(Long_t nElements, void *p) {
      return p ? new(p) ::StjTrackTowerEnergyListToFourVecList[nElements] : new ::StjTrackTowerEnergyListToFourVecList[nElements];
   }
   // Wrapper around operator delete
   static void delete_StjTrackTowerEnergyListToFourVecList(void *p) {
      delete ((::StjTrackTowerEnergyListToFourVecList*)p);
   }
   static void deleteArray_StjTrackTowerEnergyListToFourVecList(void *p) {
      delete [] ((::StjTrackTowerEnergyListToFourVecList*)p);
   }
   static void destruct_StjTrackTowerEnergyListToFourVecList(void *p) {
      typedef ::StjTrackTowerEnergyListToFourVecList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjTrackTowerEnergyListToFourVecList

//______________________________________________________________________________
void StjDijetListTrigger::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjDijetListTrigger.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjDijetListTrigger::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjDijetListTrigger::Class(),this);
   }
}

//______________________________________________________________________________
void StjDijetListTrigger::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjDijetListTrigger.
      TClass *R__cl = ::StjDijetListTrigger::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjDijetListTrigger(void *p) {
      delete ((::StjDijetListTrigger*)p);
   }
   static void deleteArray_StjDijetListTrigger(void *p) {
      delete [] ((::StjDijetListTrigger*)p);
   }
   static void destruct_StjDijetListTrigger(void *p) {
      typedef ::StjDijetListTrigger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjDijetListTrigger

//______________________________________________________________________________
void StjDijetListTriggerBJP::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjDijetListTriggerBJP.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjDijetListTriggerBJP::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjDijetListTriggerBJP::Class(),this);
   }
}

//______________________________________________________________________________
void StjDijetListTriggerBJP::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjDijetListTriggerBJP.
      TClass *R__cl = ::StjDijetListTriggerBJP::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      StjDijetListTrigger::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjDijetListTriggerBJP(void *p) {
      delete ((::StjDijetListTriggerBJP*)p);
   }
   static void deleteArray_StjDijetListTriggerBJP(void *p) {
      delete [] ((::StjDijetListTriggerBJP*)p);
   }
   static void destruct_StjDijetListTriggerBJP(void *p) {
      typedef ::StjDijetListTriggerBJP current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjDijetListTriggerBJP

//______________________________________________________________________________
void StjDijetListTriggerBHT::Streamer(TBuffer &R__b)
{
   // Stream an object of class StjDijetListTriggerBHT.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StjDijetListTriggerBHT::Class(),this);
   } else {
      R__b.WriteClassBuffer(StjDijetListTriggerBHT::Class(),this);
   }
}

//______________________________________________________________________________
void StjDijetListTriggerBHT::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StjDijetListTriggerBHT.
      TClass *R__cl = ::StjDijetListTriggerBHT::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      StjDijetListTrigger::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StjDijetListTriggerBHT(void *p) {
      delete ((::StjDijetListTriggerBHT*)p);
   }
   static void deleteArray_StjDijetListTriggerBHT(void *p) {
      delete [] ((::StjDijetListTriggerBHT*)p);
   }
   static void destruct_StjDijetListTriggerBHT(void *p) {
      typedef ::StjDijetListTriggerBHT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StjDijetListTriggerBHT

namespace ROOT {
   void setlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void setlEintgR_Dictionary();
   static void *new_setlEintgR(void *p = 0);
   static void *newArray_setlEintgR(Long_t size, void *p);
   static void delete_setlEintgR(void *p);
   static void deleteArray_setlEintgR(void *p);
   static void destruct_setlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const set<int>*)
   {
      set<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<int>", -2, "set.dll", 0,
                  typeid(set<int>), DefineBehavior(ptr, ptr),
                  0, &setlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(set<int>) );
      instance.SetNew(&new_setlEintgR);
      instance.SetNewArray(&newArray_setlEintgR);
      instance.SetDelete(&delete_setlEintgR);
      instance.SetDeleteArray(&deleteArray_setlEintgR);
      instance.SetDestructor(&destruct_setlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Insert< set<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const set<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_setlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int> : new set<int>;
   }
   static void *newArray_setlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int>[nElements] : new set<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEintgR(void *p) {
      delete ((set<int>*)p);
   }
   static void deleteArray_setlEintgR(void *p) {
      delete [] ((set<int>*)p);
   }
   static void destruct_setlEintgR(void *p) {
      typedef set<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class set<int>

namespace ROOT {
   void vectorlEStjDijetgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEStjDijetgR_Dictionary();
   static void *new_vectorlEStjDijetgR(void *p = 0);
   static void *newArray_vectorlEStjDijetgR(Long_t size, void *p);
   static void delete_vectorlEStjDijetgR(void *p);
   static void deleteArray_vectorlEStjDijetgR(void *p);
   static void destruct_vectorlEStjDijetgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StjDijet>*)
   {
      vector<StjDijet> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StjDijet>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StjDijet>", -2, "prec_stl/vector", 49,
                  typeid(vector<StjDijet>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStjDijetgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<StjDijet>) );
      instance.SetNew(&new_vectorlEStjDijetgR);
      instance.SetNewArray(&newArray_vectorlEStjDijetgR);
      instance.SetDelete(&delete_vectorlEStjDijetgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStjDijetgR);
      instance.SetDestructor(&destruct_vectorlEStjDijetgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StjDijet> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StjDijet>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStjDijetgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StjDijet>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStjDijetgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjDijet> : new vector<StjDijet>;
   }
   static void *newArray_vectorlEStjDijetgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjDijet>[nElements] : new vector<StjDijet>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStjDijetgR(void *p) {
      delete ((vector<StjDijet>*)p);
   }
   static void deleteArray_vectorlEStjDijetgR(void *p) {
      delete [] ((vector<StjDijet>*)p);
   }
   static void destruct_vectorlEStjDijetgR(void *p) {
      typedef vector<StjDijet> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StjDijet>

namespace ROOT {
   void vectorlEStjDijetCutmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEStjDijetCutmUgR_Dictionary();
   static void *new_vectorlEStjDijetCutmUgR(void *p = 0);
   static void *newArray_vectorlEStjDijetCutmUgR(Long_t size, void *p);
   static void delete_vectorlEStjDijetCutmUgR(void *p);
   static void deleteArray_vectorlEStjDijetCutmUgR(void *p);
   static void destruct_vectorlEStjDijetCutmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StjDijetCut*>*)
   {
      vector<StjDijetCut*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StjDijetCut*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StjDijetCut*>", -2, "prec_stl/vector", 49,
                  typeid(vector<StjDijetCut*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStjDijetCutmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StjDijetCut*>) );
      instance.SetNew(&new_vectorlEStjDijetCutmUgR);
      instance.SetNewArray(&newArray_vectorlEStjDijetCutmUgR);
      instance.SetDelete(&delete_vectorlEStjDijetCutmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStjDijetCutmUgR);
      instance.SetDestructor(&destruct_vectorlEStjDijetCutmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StjDijetCut*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StjDijetCut*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStjDijetCutmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StjDijetCut*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStjDijetCutmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjDijetCut*> : new vector<StjDijetCut*>;
   }
   static void *newArray_vectorlEStjDijetCutmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjDijetCut*>[nElements] : new vector<StjDijetCut*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStjDijetCutmUgR(void *p) {
      delete ((vector<StjDijetCut*>*)p);
   }
   static void deleteArray_vectorlEStjDijetCutmUgR(void *p) {
      delete [] ((vector<StjDijetCut*>*)p);
   }
   static void destruct_vectorlEStjDijetCutmUgR(void *p) {
      typedef vector<StjDijetCut*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StjDijetCut*>

namespace ROOT {
   void vectorlEStjFourVecgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEStjFourVecgR_Dictionary();
   static void *new_vectorlEStjFourVecgR(void *p = 0);
   static void *newArray_vectorlEStjFourVecgR(Long_t size, void *p);
   static void delete_vectorlEStjFourVecgR(void *p);
   static void deleteArray_vectorlEStjFourVecgR(void *p);
   static void destruct_vectorlEStjFourVecgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StjFourVec>*)
   {
      vector<StjFourVec> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StjFourVec>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StjFourVec>", -2, "prec_stl/vector", 49,
                  typeid(vector<StjFourVec>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStjFourVecgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<StjFourVec>) );
      instance.SetNew(&new_vectorlEStjFourVecgR);
      instance.SetNewArray(&newArray_vectorlEStjFourVecgR);
      instance.SetDelete(&delete_vectorlEStjFourVecgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStjFourVecgR);
      instance.SetDestructor(&destruct_vectorlEStjFourVecgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StjFourVec> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StjFourVec>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStjFourVecgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StjFourVec>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStjFourVecgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjFourVec> : new vector<StjFourVec>;
   }
   static void *newArray_vectorlEStjFourVecgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjFourVec>[nElements] : new vector<StjFourVec>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStjFourVecgR(void *p) {
      delete ((vector<StjFourVec>*)p);
   }
   static void deleteArray_vectorlEStjFourVecgR(void *p) {
      delete [] ((vector<StjFourVec>*)p);
   }
   static void destruct_vectorlEStjFourVecgR(void *p) {
      typedef vector<StjFourVec> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StjFourVec>

namespace ROOT {
   void vectorlEStjFourVecCutmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEStjFourVecCutmUgR_Dictionary();
   static void *new_vectorlEStjFourVecCutmUgR(void *p = 0);
   static void *newArray_vectorlEStjFourVecCutmUgR(Long_t size, void *p);
   static void delete_vectorlEStjFourVecCutmUgR(void *p);
   static void deleteArray_vectorlEStjFourVecCutmUgR(void *p);
   static void destruct_vectorlEStjFourVecCutmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StjFourVecCut*>*)
   {
      vector<StjFourVecCut*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StjFourVecCut*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StjFourVecCut*>", -2, "prec_stl/vector", 49,
                  typeid(vector<StjFourVecCut*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStjFourVecCutmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StjFourVecCut*>) );
      instance.SetNew(&new_vectorlEStjFourVecCutmUgR);
      instance.SetNewArray(&newArray_vectorlEStjFourVecCutmUgR);
      instance.SetDelete(&delete_vectorlEStjFourVecCutmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStjFourVecCutmUgR);
      instance.SetDestructor(&destruct_vectorlEStjFourVecCutmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StjFourVecCut*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StjFourVecCut*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStjFourVecCutmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StjFourVecCut*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStjFourVecCutmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjFourVecCut*> : new vector<StjFourVecCut*>;
   }
   static void *newArray_vectorlEStjFourVecCutmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjFourVecCut*>[nElements] : new vector<StjFourVecCut*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStjFourVecCutmUgR(void *p) {
      delete ((vector<StjFourVecCut*>*)p);
   }
   static void deleteArray_vectorlEStjFourVecCutmUgR(void *p) {
      delete [] ((vector<StjFourVecCut*>*)p);
   }
   static void destruct_vectorlEStjFourVecCutmUgR(void *p) {
      typedef vector<StjFourVecCut*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StjFourVecCut*>

namespace ROOT {
   void vectorlEStjJetgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEStjJetgR_Dictionary();
   static void *new_vectorlEStjJetgR(void *p = 0);
   static void *newArray_vectorlEStjJetgR(Long_t size, void *p);
   static void delete_vectorlEStjJetgR(void *p);
   static void deleteArray_vectorlEStjJetgR(void *p);
   static void destruct_vectorlEStjJetgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StjJet>*)
   {
      vector<StjJet> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StjJet>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StjJet>", -2, "prec_stl/vector", 49,
                  typeid(vector<StjJet>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStjJetgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<StjJet>) );
      instance.SetNew(&new_vectorlEStjJetgR);
      instance.SetNewArray(&newArray_vectorlEStjJetgR);
      instance.SetDelete(&delete_vectorlEStjJetgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStjJetgR);
      instance.SetDestructor(&destruct_vectorlEStjJetgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StjJet> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StjJet>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStjJetgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StjJet>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStjJetgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjJet> : new vector<StjJet>;
   }
   static void *newArray_vectorlEStjJetgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjJet>[nElements] : new vector<StjJet>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStjJetgR(void *p) {
      delete ((vector<StjJet>*)p);
   }
   static void deleteArray_vectorlEStjJetgR(void *p) {
      delete [] ((vector<StjJet>*)p);
   }
   static void destruct_vectorlEStjJetgR(void *p) {
      typedef vector<StjJet> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StjJet>

namespace ROOT {
   void vectorlEStjJetCutmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEStjJetCutmUgR_Dictionary();
   static void *new_vectorlEStjJetCutmUgR(void *p = 0);
   static void *newArray_vectorlEStjJetCutmUgR(Long_t size, void *p);
   static void delete_vectorlEStjJetCutmUgR(void *p);
   static void deleteArray_vectorlEStjJetCutmUgR(void *p);
   static void destruct_vectorlEStjJetCutmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StjJetCut*>*)
   {
      vector<StjJetCut*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StjJetCut*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StjJetCut*>", -2, "prec_stl/vector", 49,
                  typeid(vector<StjJetCut*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStjJetCutmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StjJetCut*>) );
      instance.SetNew(&new_vectorlEStjJetCutmUgR);
      instance.SetNewArray(&newArray_vectorlEStjJetCutmUgR);
      instance.SetDelete(&delete_vectorlEStjJetCutmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStjJetCutmUgR);
      instance.SetDestructor(&destruct_vectorlEStjJetCutmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StjJetCut*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StjJetCut*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStjJetCutmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StjJetCut*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStjJetCutmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjJetCut*> : new vector<StjJetCut*>;
   }
   static void *newArray_vectorlEStjJetCutmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjJetCut*>[nElements] : new vector<StjJetCut*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStjJetCutmUgR(void *p) {
      delete ((vector<StjJetCut*>*)p);
   }
   static void deleteArray_vectorlEStjJetCutmUgR(void *p) {
      delete [] ((vector<StjJetCut*>*)p);
   }
   static void destruct_vectorlEStjJetCutmUgR(void *p) {
      typedef vector<StjJetCut*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StjJetCut*>

namespace ROOT {
   void vectorlEStjMCParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEStjMCParticlegR_Dictionary();
   static void *new_vectorlEStjMCParticlegR(void *p = 0);
   static void *newArray_vectorlEStjMCParticlegR(Long_t size, void *p);
   static void delete_vectorlEStjMCParticlegR(void *p);
   static void deleteArray_vectorlEStjMCParticlegR(void *p);
   static void destruct_vectorlEStjMCParticlegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StjMCParticle>*)
   {
      vector<StjMCParticle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StjMCParticle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StjMCParticle>", -2, "prec_stl/vector", 49,
                  typeid(vector<StjMCParticle>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStjMCParticlegR_Dictionary, isa_proxy, 4,
                  sizeof(vector<StjMCParticle>) );
      instance.SetNew(&new_vectorlEStjMCParticlegR);
      instance.SetNewArray(&newArray_vectorlEStjMCParticlegR);
      instance.SetDelete(&delete_vectorlEStjMCParticlegR);
      instance.SetDeleteArray(&deleteArray_vectorlEStjMCParticlegR);
      instance.SetDestructor(&destruct_vectorlEStjMCParticlegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StjMCParticle> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StjMCParticle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStjMCParticlegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StjMCParticle>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStjMCParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjMCParticle> : new vector<StjMCParticle>;
   }
   static void *newArray_vectorlEStjMCParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjMCParticle>[nElements] : new vector<StjMCParticle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStjMCParticlegR(void *p) {
      delete ((vector<StjMCParticle>*)p);
   }
   static void deleteArray_vectorlEStjMCParticlegR(void *p) {
      delete [] ((vector<StjMCParticle>*)p);
   }
   static void destruct_vectorlEStjMCParticlegR(void *p) {
      typedef vector<StjMCParticle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StjMCParticle>

namespace ROOT {
   void vectorlEStjMCParticleCutmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEStjMCParticleCutmUgR_Dictionary();
   static void *new_vectorlEStjMCParticleCutmUgR(void *p = 0);
   static void *newArray_vectorlEStjMCParticleCutmUgR(Long_t size, void *p);
   static void delete_vectorlEStjMCParticleCutmUgR(void *p);
   static void deleteArray_vectorlEStjMCParticleCutmUgR(void *p);
   static void destruct_vectorlEStjMCParticleCutmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StjMCParticleCut*>*)
   {
      vector<StjMCParticleCut*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StjMCParticleCut*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StjMCParticleCut*>", -2, "prec_stl/vector", 49,
                  typeid(vector<StjMCParticleCut*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStjMCParticleCutmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StjMCParticleCut*>) );
      instance.SetNew(&new_vectorlEStjMCParticleCutmUgR);
      instance.SetNewArray(&newArray_vectorlEStjMCParticleCutmUgR);
      instance.SetDelete(&delete_vectorlEStjMCParticleCutmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStjMCParticleCutmUgR);
      instance.SetDestructor(&destruct_vectorlEStjMCParticleCutmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StjMCParticleCut*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StjMCParticleCut*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStjMCParticleCutmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StjMCParticleCut*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStjMCParticleCutmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjMCParticleCut*> : new vector<StjMCParticleCut*>;
   }
   static void *newArray_vectorlEStjMCParticleCutmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjMCParticleCut*>[nElements] : new vector<StjMCParticleCut*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStjMCParticleCutmUgR(void *p) {
      delete ((vector<StjMCParticleCut*>*)p);
   }
   static void deleteArray_vectorlEStjMCParticleCutmUgR(void *p) {
      delete [] ((vector<StjMCParticleCut*>*)p);
   }
   static void destruct_vectorlEStjMCParticleCutmUgR(void *p) {
      typedef vector<StjMCParticleCut*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StjMCParticleCut*>

namespace ROOT {
   void vectorlEStjTowerEnergygR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEStjTowerEnergygR_Dictionary();
   static void *new_vectorlEStjTowerEnergygR(void *p = 0);
   static void *newArray_vectorlEStjTowerEnergygR(Long_t size, void *p);
   static void delete_vectorlEStjTowerEnergygR(void *p);
   static void deleteArray_vectorlEStjTowerEnergygR(void *p);
   static void destruct_vectorlEStjTowerEnergygR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StjTowerEnergy>*)
   {
      vector<StjTowerEnergy> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StjTowerEnergy>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StjTowerEnergy>", -2, "prec_stl/vector", 49,
                  typeid(vector<StjTowerEnergy>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStjTowerEnergygR_Dictionary, isa_proxy, 4,
                  sizeof(vector<StjTowerEnergy>) );
      instance.SetNew(&new_vectorlEStjTowerEnergygR);
      instance.SetNewArray(&newArray_vectorlEStjTowerEnergygR);
      instance.SetDelete(&delete_vectorlEStjTowerEnergygR);
      instance.SetDeleteArray(&deleteArray_vectorlEStjTowerEnergygR);
      instance.SetDestructor(&destruct_vectorlEStjTowerEnergygR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StjTowerEnergy> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StjTowerEnergy>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStjTowerEnergygR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StjTowerEnergy>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStjTowerEnergygR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjTowerEnergy> : new vector<StjTowerEnergy>;
   }
   static void *newArray_vectorlEStjTowerEnergygR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjTowerEnergy>[nElements] : new vector<StjTowerEnergy>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStjTowerEnergygR(void *p) {
      delete ((vector<StjTowerEnergy>*)p);
   }
   static void deleteArray_vectorlEStjTowerEnergygR(void *p) {
      delete [] ((vector<StjTowerEnergy>*)p);
   }
   static void destruct_vectorlEStjTowerEnergygR(void *p) {
      typedef vector<StjTowerEnergy> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StjTowerEnergy>

namespace ROOT {
   void vectorlEStjTowerEnergyCutmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEStjTowerEnergyCutmUgR_Dictionary();
   static void *new_vectorlEStjTowerEnergyCutmUgR(void *p = 0);
   static void *newArray_vectorlEStjTowerEnergyCutmUgR(Long_t size, void *p);
   static void delete_vectorlEStjTowerEnergyCutmUgR(void *p);
   static void deleteArray_vectorlEStjTowerEnergyCutmUgR(void *p);
   static void destruct_vectorlEStjTowerEnergyCutmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StjTowerEnergyCut*>*)
   {
      vector<StjTowerEnergyCut*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StjTowerEnergyCut*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StjTowerEnergyCut*>", -2, "prec_stl/vector", 49,
                  typeid(vector<StjTowerEnergyCut*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStjTowerEnergyCutmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StjTowerEnergyCut*>) );
      instance.SetNew(&new_vectorlEStjTowerEnergyCutmUgR);
      instance.SetNewArray(&newArray_vectorlEStjTowerEnergyCutmUgR);
      instance.SetDelete(&delete_vectorlEStjTowerEnergyCutmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStjTowerEnergyCutmUgR);
      instance.SetDestructor(&destruct_vectorlEStjTowerEnergyCutmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StjTowerEnergyCut*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StjTowerEnergyCut*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStjTowerEnergyCutmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StjTowerEnergyCut*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStjTowerEnergyCutmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjTowerEnergyCut*> : new vector<StjTowerEnergyCut*>;
   }
   static void *newArray_vectorlEStjTowerEnergyCutmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjTowerEnergyCut*>[nElements] : new vector<StjTowerEnergyCut*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStjTowerEnergyCutmUgR(void *p) {
      delete ((vector<StjTowerEnergyCut*>*)p);
   }
   static void deleteArray_vectorlEStjTowerEnergyCutmUgR(void *p) {
      delete [] ((vector<StjTowerEnergyCut*>*)p);
   }
   static void destruct_vectorlEStjTowerEnergyCutmUgR(void *p) {
      typedef vector<StjTowerEnergyCut*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StjTowerEnergyCut*>

namespace ROOT {
   void vectorlEStjTowerEnergyVariationmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEStjTowerEnergyVariationmUgR_Dictionary();
   static void *new_vectorlEStjTowerEnergyVariationmUgR(void *p = 0);
   static void *newArray_vectorlEStjTowerEnergyVariationmUgR(Long_t size, void *p);
   static void delete_vectorlEStjTowerEnergyVariationmUgR(void *p);
   static void deleteArray_vectorlEStjTowerEnergyVariationmUgR(void *p);
   static void destruct_vectorlEStjTowerEnergyVariationmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StjTowerEnergyVariation*>*)
   {
      vector<StjTowerEnergyVariation*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StjTowerEnergyVariation*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StjTowerEnergyVariation*>", -2, "prec_stl/vector", 49,
                  typeid(vector<StjTowerEnergyVariation*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStjTowerEnergyVariationmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StjTowerEnergyVariation*>) );
      instance.SetNew(&new_vectorlEStjTowerEnergyVariationmUgR);
      instance.SetNewArray(&newArray_vectorlEStjTowerEnergyVariationmUgR);
      instance.SetDelete(&delete_vectorlEStjTowerEnergyVariationmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStjTowerEnergyVariationmUgR);
      instance.SetDestructor(&destruct_vectorlEStjTowerEnergyVariationmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StjTowerEnergyVariation*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StjTowerEnergyVariation*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStjTowerEnergyVariationmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StjTowerEnergyVariation*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStjTowerEnergyVariationmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjTowerEnergyVariation*> : new vector<StjTowerEnergyVariation*>;
   }
   static void *newArray_vectorlEStjTowerEnergyVariationmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjTowerEnergyVariation*>[nElements] : new vector<StjTowerEnergyVariation*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStjTowerEnergyVariationmUgR(void *p) {
      delete ((vector<StjTowerEnergyVariation*>*)p);
   }
   static void deleteArray_vectorlEStjTowerEnergyVariationmUgR(void *p) {
      delete [] ((vector<StjTowerEnergyVariation*>*)p);
   }
   static void destruct_vectorlEStjTowerEnergyVariationmUgR(void *p) {
      typedef vector<StjTowerEnergyVariation*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StjTowerEnergyVariation*>

namespace ROOT {
   void vectorlEStjTrackgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEStjTrackgR_Dictionary();
   static void *new_vectorlEStjTrackgR(void *p = 0);
   static void *newArray_vectorlEStjTrackgR(Long_t size, void *p);
   static void delete_vectorlEStjTrackgR(void *p);
   static void deleteArray_vectorlEStjTrackgR(void *p);
   static void destruct_vectorlEStjTrackgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StjTrack>*)
   {
      vector<StjTrack> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StjTrack>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StjTrack>", -2, "prec_stl/vector", 49,
                  typeid(vector<StjTrack>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStjTrackgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<StjTrack>) );
      instance.SetNew(&new_vectorlEStjTrackgR);
      instance.SetNewArray(&newArray_vectorlEStjTrackgR);
      instance.SetDelete(&delete_vectorlEStjTrackgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStjTrackgR);
      instance.SetDestructor(&destruct_vectorlEStjTrackgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StjTrack> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StjTrack>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStjTrackgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StjTrack>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStjTrackgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjTrack> : new vector<StjTrack>;
   }
   static void *newArray_vectorlEStjTrackgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjTrack>[nElements] : new vector<StjTrack>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStjTrackgR(void *p) {
      delete ((vector<StjTrack>*)p);
   }
   static void deleteArray_vectorlEStjTrackgR(void *p) {
      delete [] ((vector<StjTrack>*)p);
   }
   static void destruct_vectorlEStjTrackgR(void *p) {
      typedef vector<StjTrack> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StjTrack>

namespace ROOT {
   void vectorlEStjTrackCutmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEStjTrackCutmUgR_Dictionary();
   static void *new_vectorlEStjTrackCutmUgR(void *p = 0);
   static void *newArray_vectorlEStjTrackCutmUgR(Long_t size, void *p);
   static void delete_vectorlEStjTrackCutmUgR(void *p);
   static void deleteArray_vectorlEStjTrackCutmUgR(void *p);
   static void destruct_vectorlEStjTrackCutmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StjTrackCut*>*)
   {
      vector<StjTrackCut*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StjTrackCut*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StjTrackCut*>", -2, "prec_stl/vector", 49,
                  typeid(vector<StjTrackCut*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStjTrackCutmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StjTrackCut*>) );
      instance.SetNew(&new_vectorlEStjTrackCutmUgR);
      instance.SetNewArray(&newArray_vectorlEStjTrackCutmUgR);
      instance.SetDelete(&delete_vectorlEStjTrackCutmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStjTrackCutmUgR);
      instance.SetDestructor(&destruct_vectorlEStjTrackCutmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StjTrackCut*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StjTrackCut*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStjTrackCutmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StjTrackCut*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStjTrackCutmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjTrackCut*> : new vector<StjTrackCut*>;
   }
   static void *newArray_vectorlEStjTrackCutmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StjTrackCut*>[nElements] : new vector<StjTrackCut*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStjTrackCutmUgR(void *p) {
      delete ((vector<StjTrackCut*>*)p);
   }
   static void deleteArray_vectorlEStjTrackCutmUgR(void *p) {
      delete [] ((vector<StjTrackCut*>*)p);
   }
   static void destruct_vectorlEStjTrackCutmUgR(void *p) {
      typedef vector<StjTrackCut*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StjTrackCut*>

/********************************************************
* BaseDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableBaseDict();

extern "C" void G__set_cpp_environmentBaseDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StjBEMC.h");
  G__add_compiledheader("StjBEMCNull.h");
  G__add_compiledheader("StjBEMCTree.h");
  G__add_compiledheader("StjBEMCTxt.h");
  G__add_compiledheader("StjDijetCut.h");
  G__add_compiledheader("StjDijetCutAsymmetricPt.h");
  G__add_compiledheader("StjDijetCutDPhi.h");
  G__add_compiledheader("StjDijetCutEta.h");
  G__add_compiledheader("StjDijetCutEta3MinusEta4.h");
  G__add_compiledheader("StjDijetCutTrgBHT.h");
  G__add_compiledheader("StjDijetCutTrgBJP.h");
  G__add_compiledheader("StjDijetList.h");
  G__add_compiledheader("StjDijetListCut.h");
  G__add_compiledheader("StjDijetPrint.h");
  G__add_compiledheader("StjEEMC.h");
  G__add_compiledheader("StjEEMCNull.h");
  G__add_compiledheader("StjEEMCTxt.h");
  G__add_compiledheader("StjFormDijet.h");
  G__add_compiledheader("StjFourVecCut.h");
  G__add_compiledheader("StjFourVecCutPt.h");
  G__add_compiledheader("StjFourVecCutTrgBHT.h");
  G__add_compiledheader("StjFourVecCutTrgBJP.h");
  G__add_compiledheader("StjFourVecList.h");
  G__add_compiledheader("StjFourVecListCut.h");
  G__add_compiledheader("StjFourVecPrint.h");
  G__add_compiledheader("StjJetCut.h");
  G__add_compiledheader("StjJetCutDetectorEta.h");
  G__add_compiledheader("StjJetCutEta.h");
  G__add_compiledheader("StjJetCutNFourVecs.h");
  G__add_compiledheader("StjJetCutPt.h");
  G__add_compiledheader("StjJetCutTrgBHT.h");
  G__add_compiledheader("StjJetCutTrgBJP.h");
  G__add_compiledheader("StjJetList.h");
  G__add_compiledheader("StjJetListCut.h");
  G__add_compiledheader("StjJetPrint.h");
  G__add_compiledheader("StjMC.h");
  G__add_compiledheader("StjMCNull.h");
  G__add_compiledheader("StjMCParticleCut.h");
  G__add_compiledheader("StjMCParticleCutEta.h");
  G__add_compiledheader("StjMCParticleCutEtaForStatus.h");
  G__add_compiledheader("StjMCParticleCutStatus.h");
  G__add_compiledheader("StjMCParticleList.h");
  G__add_compiledheader("StjMCParticleListCut.h");
  G__add_compiledheader("StjMCParticleListToFourVecList.h");
  G__add_compiledheader("StjMCParticlePrint.h");
  G__add_compiledheader("StjMCParticleToFourVec.h");
  G__add_compiledheader("StjMCTree.h");
  G__add_compiledheader("StjTPC.h");
  G__add_compiledheader("StjTPCNull.h");
  G__add_compiledheader("StjTPCTree.h");
  G__add_compiledheader("StjTPCTxt.h");
  G__add_compiledheader("StjTowerEnergyCorrectionForTracks.h");
  G__add_compiledheader("StjTowerEnergyCut.h");
  G__add_compiledheader("StjTowerEnergyCut2003BemcTower.h");
  G__add_compiledheader("StjTowerEnergyCutAdc.h");
  G__add_compiledheader("StjTowerEnergyCutBemcStatus.h");
  G__add_compiledheader("StjTowerEnergyCutBemcWestOnly.h");
  G__add_compiledheader("StjTowerEnergyCutEnergy.h");
  G__add_compiledheader("StjTowerEnergyCutEt.h");
  G__add_compiledheader("StjTowerEnergyList.h");
  G__add_compiledheader("StjTowerEnergyListCut.h");
  G__add_compiledheader("StjTowerEnergyListVariation.h");
  G__add_compiledheader("StjTowerEnergyPrint.h");
  G__add_compiledheader("StjTowerEnergyToFourVec.h");
  G__add_compiledheader("StjTowerEnergyToTLorentzVector.h");
  G__add_compiledheader("StjTowerEnergyVariation.h");
  G__add_compiledheader("StjTowerEnergyVariationEnergy.h");
  G__add_compiledheader("StjTrackCut.h");
  G__add_compiledheader("StjTrackCutDca.h");
  G__add_compiledheader("StjTrackCutDcaPtDependent.h");
  G__add_compiledheader("StjTrackCutEta.h");
  G__add_compiledheader("StjTrackCutFlag.h");
  G__add_compiledheader("StjTrackCutNHits.h");
  G__add_compiledheader("StjTrackCutPossibleHitRatio.h");
  G__add_compiledheader("StjTrackList.h");
  G__add_compiledheader("StjTrackListCut.h");
  G__add_compiledheader("StjTrackPrint.h");
  G__add_compiledheader("StjTrackToFourVec.h");
  G__add_compiledheader("StjTrackToTLorentzVector.h");
  G__add_compiledheader("StjTrackTowerEnergyListToFourVecList.h");
  G__add_compiledheader("StjDijetListTrigger.h");
  G__add_compiledheader("StjDijetListTriggerBJP.h");
  G__add_compiledheader("StjDijetListTriggerBHT.h");
  G__cpp_reset_tagtableBaseDict();
}
#include <new>
extern "C" int G__cpp_dllrevBaseDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StjTowerEnergy */
static int G__BaseDict_139_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_139_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_139_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_139_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergy::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_139_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergy*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_139_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_139_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_139_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_139_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__BaseDict_139_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergy *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergy[n];
     } else {
       p = new((void*) gvp) StjTowerEnergy[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergy;
     } else {
       p = new((void*) gvp) StjTowerEnergy;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_139_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergy* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergy(*(StjTowerEnergy*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergy G__TStjTowerEnergy;
static int G__BaseDict_139_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergy*) (soff+(sizeof(StjTowerEnergy)*i)))->~G__TStjTowerEnergy();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergy*) (soff))->~G__TStjTowerEnergy();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_139_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergy* dest = (StjTowerEnergy*) G__getstructoffset();
   *dest = *(StjTowerEnergy*) libp->para[0].ref;
   const StjTowerEnergy& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<StjTowerEnergy,allocator<StjTowerEnergy> > */
static int G__BaseDict_141_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjTowerEnergy& obj = ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->at((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator* pobj;
         vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator xobj = ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->begin();
         pobj = new vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator* pobj;
         vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator xobj = ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->end();
         pobj = new vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjTowerEnergy,allocator<StjTowerEnergy> >::reverse_iterator* pobj;
         vector<StjTowerEnergy,allocator<StjTowerEnergy> >::reverse_iterator xobj = ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->rbegin();
         pobj = new vector<StjTowerEnergy,allocator<StjTowerEnergy> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjTowerEnergy,allocator<StjTowerEnergy> >::reverse_iterator* pobj;
         vector<StjTowerEnergy,allocator<StjTowerEnergy> >::reverse_iterator xobj = ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->rend();
         pobj = new vector<StjTowerEnergy,allocator<StjTowerEnergy> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->resize((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->resize((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type) G__int(libp->para[0]), *((StjTowerEnergy*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjTowerEnergy& obj = ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->operator[]((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjTowerEnergy,allocator<StjTowerEnergy> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjTowerEnergy,allocator<StjTowerEnergy> >[n];
     } else {
       p = new((void*) gvp) vector<StjTowerEnergy,allocator<StjTowerEnergy> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjTowerEnergy,allocator<StjTowerEnergy> >;
     } else {
       p = new((void*) gvp) vector<StjTowerEnergy,allocator<StjTowerEnergy> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjTowerEnergy,allocator<StjTowerEnergy> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjTowerEnergy,allocator<StjTowerEnergy> >((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type) G__int(libp->para[0]), *(StjTowerEnergy*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<StjTowerEnergy,allocator<StjTowerEnergy> >((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type) G__int(libp->para[0]), *(StjTowerEnergy*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjTowerEnergy,allocator<StjTowerEnergy> >((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<StjTowerEnergy,allocator<StjTowerEnergy> >((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjTowerEnergy,allocator<StjTowerEnergy> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<StjTowerEnergy,allocator<StjTowerEnergy> >(*(vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<StjTowerEnergy,allocator<StjTowerEnergy> >(*(vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjTowerEnergy,allocator<StjTowerEnergy> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<StjTowerEnergy,allocator<StjTowerEnergy> >(*((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::const_iterator*) G__int(libp->para[0])), *((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<StjTowerEnergy,allocator<StjTowerEnergy> >(*((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::const_iterator*) G__int(libp->para[0])), *((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StjTowerEnergy,allocator<StjTowerEnergy> >& obj = ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->operator=(*(vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->reserve((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjTowerEnergy& obj = ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjTowerEnergy& obj = ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->push_back(*(StjTowerEnergy*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->swap(*(vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator* pobj;
         vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator xobj = ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->insert(*((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator*) G__int(libp->para[0])), *(StjTowerEnergy*) libp->para[1].ref);
         pobj = new vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->insert(*((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator*) G__int(libp->para[0])), *((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::const_iterator*) G__int(libp->para[1]))
, *((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->insert(*((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator*) G__int(libp->para[0])), (vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type) G__int(libp->para[1])
, *(StjTowerEnergy*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->erase(*((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->erase(*((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator*) G__int(libp->para[0])), *((vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_141_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<StjTowerEnergy,allocator<StjTowerEnergy> > G__TvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR;
static int G__BaseDict_141_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) (soff+(sizeof(vector<StjTowerEnergy,allocator<StjTowerEnergy> >)*i)))->~G__TvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<StjTowerEnergy,allocator<StjTowerEnergy> >*) (soff))->~G__TvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjBEMC */
static int G__BaseDict_144_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjBEMC*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_144_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjTowerEnergyList* pobj;
         StjTowerEnergyList xobj = ((StjBEMC*) G__getstructoffset())->getEnergyList();
         pobj = new StjTowerEnergyList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_144_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjBEMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_144_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjBEMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_144_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjBEMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_144_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjBEMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_144_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjBEMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_144_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjBEMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_144_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjBEMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_144_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjBEMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_144_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjBEMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjBEMC G__TStjBEMC;
static int G__BaseDict_144_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjBEMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjBEMC*) (soff+(sizeof(StjBEMC)*i)))->~G__TStjBEMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjBEMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjBEMC*) (soff))->~G__TStjBEMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_144_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjBEMC* dest = (StjBEMC*) G__getstructoffset();
   *dest = *(StjBEMC*) libp->para[0].ref;
   const StjBEMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjBEMCNull */
static int G__BaseDict_145_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjBEMCNull* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjBEMCNull[n];
     } else {
       p = new((void*) gvp) StjBEMCNull[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjBEMCNull;
     } else {
       p = new((void*) gvp) StjBEMCNull;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjBEMCNull);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_145_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjBEMCNull::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_145_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjBEMCNull::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_145_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjBEMCNull::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_145_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjBEMCNull::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_145_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjBEMCNull*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_145_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjBEMCNull::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_145_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjBEMCNull::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_145_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjBEMCNull::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_145_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjBEMCNull::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_145_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjBEMCNull* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjBEMCNull(*(StjBEMCNull*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjBEMCNull);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjBEMCNull G__TStjBEMCNull;
static int G__BaseDict_145_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjBEMCNull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjBEMCNull*) (soff+(sizeof(StjBEMCNull)*i)))->~G__TStjBEMCNull();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjBEMCNull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjBEMCNull*) (soff))->~G__TStjBEMCNull();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_145_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjBEMCNull* dest = (StjBEMCNull*) G__getstructoffset();
   *dest = *(StjBEMCNull*) libp->para[0].ref;
   const StjBEMCNull& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjBEMCTree */
static int G__BaseDict_147_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjBEMCTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjBEMCTree((StjTowerEnergyListReader*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StjBEMCTree((StjTowerEnergyListReader*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTree);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_147_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjBEMCTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_147_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjBEMCTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_147_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjBEMCTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_147_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjBEMCTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_147_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjBEMCTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_147_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjBEMCTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_147_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjBEMCTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_147_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjBEMCTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_147_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjBEMCTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_147_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjBEMCTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjBEMCTree(*(StjBEMCTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTree);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjBEMCTree G__TStjBEMCTree;
static int G__BaseDict_147_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjBEMCTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjBEMCTree*) (soff+(sizeof(StjBEMCTree)*i)))->~G__TStjBEMCTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjBEMCTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjBEMCTree*) (soff))->~G__TStjBEMCTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_147_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjBEMCTree* dest = (StjBEMCTree*) G__getstructoffset();
   *dest = *(StjBEMCTree*) libp->para[0].ref;
   const StjBEMCTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjBEMCTxt */
static int G__BaseDict_150_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjBEMCTxt* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjBEMCTxt((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StjBEMCTxt((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTxt);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_150_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjBEMCTxt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_150_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjBEMCTxt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_150_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjBEMCTxt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_150_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjBEMCTxt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_150_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjBEMCTxt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_150_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjBEMCTxt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_150_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjBEMCTxt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_150_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjBEMCTxt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_150_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjBEMCTxt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjBEMCTxt G__TStjBEMCTxt;
static int G__BaseDict_150_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjBEMCTxt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjBEMCTxt*) (soff+(sizeof(StjBEMCTxt)*i)))->~G__TStjBEMCTxt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjBEMCTxt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjBEMCTxt*) (soff))->~G__TStjBEMCTxt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjFourVec */
static int G__BaseDict_151_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjFourVec::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_151_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVec::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_151_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjFourVec::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_151_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjFourVec::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_151_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjFourVec*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_151_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVec::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_151_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVec::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_151_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVec::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_151_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVec::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__BaseDict_151_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFourVec *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjFourVec[n];
     } else {
       p = new((void*) gvp) StjFourVec[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjFourVec;
     } else {
       p = new((void*) gvp) StjFourVec;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFourVec);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_151_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjFourVec* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjFourVec(*(StjFourVec*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFourVec);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjFourVec G__TStjFourVec;
static int G__BaseDict_151_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjFourVec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjFourVec*) (soff+(sizeof(StjFourVec)*i)))->~G__TStjFourVec();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjFourVec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjFourVec*) (soff))->~G__TStjFourVec();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_151_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFourVec* dest = (StjFourVec*) G__getstructoffset();
   *dest = *(StjFourVec*) libp->para[0].ref;
   const StjFourVec& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<StjFourVec,allocator<StjFourVec> > */
static int G__BaseDict_153_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjFourVec& obj = ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->at((vector<StjFourVec,allocator<StjFourVec> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjFourVec,allocator<StjFourVec> >::iterator* pobj;
         vector<StjFourVec,allocator<StjFourVec> >::iterator xobj = ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->begin();
         pobj = new vector<StjFourVec,allocator<StjFourVec> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjFourVec,allocator<StjFourVec> >::iterator* pobj;
         vector<StjFourVec,allocator<StjFourVec> >::iterator xobj = ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->end();
         pobj = new vector<StjFourVec,allocator<StjFourVec> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjFourVec,allocator<StjFourVec> >::reverse_iterator* pobj;
         vector<StjFourVec,allocator<StjFourVec> >::reverse_iterator xobj = ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->rbegin();
         pobj = new vector<StjFourVec,allocator<StjFourVec> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjFourVec,allocator<StjFourVec> >::reverse_iterator* pobj;
         vector<StjFourVec,allocator<StjFourVec> >::reverse_iterator xobj = ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->rend();
         pobj = new vector<StjFourVec,allocator<StjFourVec> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->resize((vector<StjFourVec,allocator<StjFourVec> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->resize((vector<StjFourVec,allocator<StjFourVec> >::size_type) G__int(libp->para[0]), *((StjFourVec*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjFourVec& obj = ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->operator[]((vector<StjFourVec,allocator<StjFourVec> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjFourVec,allocator<StjFourVec> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjFourVec,allocator<StjFourVec> >[n];
     } else {
       p = new((void*) gvp) vector<StjFourVec,allocator<StjFourVec> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjFourVec,allocator<StjFourVec> >;
     } else {
       p = new((void*) gvp) vector<StjFourVec,allocator<StjFourVec> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjFourVec,allocator<StjFourVec> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjFourVec,allocator<StjFourVec> >((vector<StjFourVec,allocator<StjFourVec> >::size_type) G__int(libp->para[0]), *(StjFourVec*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<StjFourVec,allocator<StjFourVec> >((vector<StjFourVec,allocator<StjFourVec> >::size_type) G__int(libp->para[0]), *(StjFourVec*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjFourVec,allocator<StjFourVec> >((vector<StjFourVec,allocator<StjFourVec> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<StjFourVec,allocator<StjFourVec> >((vector<StjFourVec,allocator<StjFourVec> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjFourVec,allocator<StjFourVec> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<StjFourVec,allocator<StjFourVec> >(*(vector<StjFourVec,allocator<StjFourVec> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<StjFourVec,allocator<StjFourVec> >(*(vector<StjFourVec,allocator<StjFourVec> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjFourVec,allocator<StjFourVec> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<StjFourVec,allocator<StjFourVec> >(*((vector<StjFourVec,allocator<StjFourVec> >::const_iterator*) G__int(libp->para[0])), *((vector<StjFourVec,allocator<StjFourVec> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<StjFourVec,allocator<StjFourVec> >(*((vector<StjFourVec,allocator<StjFourVec> >::const_iterator*) G__int(libp->para[0])), *((vector<StjFourVec,allocator<StjFourVec> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StjFourVec,allocator<StjFourVec> >& obj = ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->operator=(*(vector<StjFourVec,allocator<StjFourVec> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->reserve((vector<StjFourVec,allocator<StjFourVec> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjFourVec& obj = ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjFourVec& obj = ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->push_back(*(StjFourVec*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->swap(*(vector<StjFourVec,allocator<StjFourVec> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjFourVec,allocator<StjFourVec> >::iterator* pobj;
         vector<StjFourVec,allocator<StjFourVec> >::iterator xobj = ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->insert(*((vector<StjFourVec,allocator<StjFourVec> >::iterator*) G__int(libp->para[0])), *(StjFourVec*) libp->para[1].ref);
         pobj = new vector<StjFourVec,allocator<StjFourVec> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->insert(*((vector<StjFourVec,allocator<StjFourVec> >::iterator*) G__int(libp->para[0])), *((vector<StjFourVec,allocator<StjFourVec> >::const_iterator*) G__int(libp->para[1]))
, *((vector<StjFourVec,allocator<StjFourVec> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->insert(*((vector<StjFourVec,allocator<StjFourVec> >::iterator*) G__int(libp->para[0])), (vector<StjFourVec,allocator<StjFourVec> >::size_type) G__int(libp->para[1])
, *(StjFourVec*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->erase(*((vector<StjFourVec,allocator<StjFourVec> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->erase(*((vector<StjFourVec,allocator<StjFourVec> >::iterator*) G__int(libp->para[0])), *((vector<StjFourVec,allocator<StjFourVec> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_153_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjFourVec,allocator<StjFourVec> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<StjFourVec,allocator<StjFourVec> > G__TvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR;
static int G__BaseDict_153_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<StjFourVec,allocator<StjFourVec> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<StjFourVec,allocator<StjFourVec> >*) (soff+(sizeof(vector<StjFourVec,allocator<StjFourVec> >)*i)))->~G__TvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<StjFourVec,allocator<StjFourVec> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<StjFourVec,allocator<StjFourVec> >*) (soff))->~G__TvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjJet */
static int G__BaseDict_156_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjJet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_156_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_156_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjJet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_156_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjJet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_156_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjJet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_156_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_156_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_156_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_156_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__BaseDict_156_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJet *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJet[n];
     } else {
       p = new((void*) gvp) StjJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJet;
     } else {
       p = new((void*) gvp) StjJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJet);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_156_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjJet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjJet(*(StjJet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJet);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjJet G__TStjJet;
static int G__BaseDict_156_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjJet*) (soff+(sizeof(StjJet)*i)))->~G__TStjJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjJet*) (soff))->~G__TStjJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_156_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJet* dest = (StjJet*) G__getstructoffset();
   *dest = *(StjJet*) libp->para[0].ref;
   const StjJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<StjJet,allocator<StjJet> > */
static int G__BaseDict_158_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjJet& obj = ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->at((vector<StjJet,allocator<StjJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjJet,allocator<StjJet> >::iterator* pobj;
         vector<StjJet,allocator<StjJet> >::iterator xobj = ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->begin();
         pobj = new vector<StjJet,allocator<StjJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjJet,allocator<StjJet> >::iterator* pobj;
         vector<StjJet,allocator<StjJet> >::iterator xobj = ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->end();
         pobj = new vector<StjJet,allocator<StjJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjJet,allocator<StjJet> >::reverse_iterator* pobj;
         vector<StjJet,allocator<StjJet> >::reverse_iterator xobj = ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->rbegin();
         pobj = new vector<StjJet,allocator<StjJet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjJet,allocator<StjJet> >::reverse_iterator* pobj;
         vector<StjJet,allocator<StjJet> >::reverse_iterator xobj = ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->rend();
         pobj = new vector<StjJet,allocator<StjJet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->resize((vector<StjJet,allocator<StjJet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->resize((vector<StjJet,allocator<StjJet> >::size_type) G__int(libp->para[0]), *((StjJet*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjJet& obj = ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->operator[]((vector<StjJet,allocator<StjJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjJet,allocator<StjJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjJet,allocator<StjJet> >[n];
     } else {
       p = new((void*) gvp) vector<StjJet,allocator<StjJet> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjJet,allocator<StjJet> >;
     } else {
       p = new((void*) gvp) vector<StjJet,allocator<StjJet> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjJet,allocator<StjJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjJet,allocator<StjJet> >((vector<StjJet,allocator<StjJet> >::size_type) G__int(libp->para[0]), *(StjJet*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<StjJet,allocator<StjJet> >((vector<StjJet,allocator<StjJet> >::size_type) G__int(libp->para[0]), *(StjJet*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjJet,allocator<StjJet> >((vector<StjJet,allocator<StjJet> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<StjJet,allocator<StjJet> >((vector<StjJet,allocator<StjJet> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjJet,allocator<StjJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<StjJet,allocator<StjJet> >(*(vector<StjJet,allocator<StjJet> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<StjJet,allocator<StjJet> >(*(vector<StjJet,allocator<StjJet> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjJet,allocator<StjJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<StjJet,allocator<StjJet> >(*((vector<StjJet,allocator<StjJet> >::const_iterator*) G__int(libp->para[0])), *((vector<StjJet,allocator<StjJet> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<StjJet,allocator<StjJet> >(*((vector<StjJet,allocator<StjJet> >::const_iterator*) G__int(libp->para[0])), *((vector<StjJet,allocator<StjJet> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StjJet,allocator<StjJet> >& obj = ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->operator=(*(vector<StjJet,allocator<StjJet> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->reserve((vector<StjJet,allocator<StjJet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjJet& obj = ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjJet& obj = ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->push_back(*(StjJet*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->swap(*(vector<StjJet,allocator<StjJet> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjJet,allocator<StjJet> >::iterator* pobj;
         vector<StjJet,allocator<StjJet> >::iterator xobj = ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->insert(*((vector<StjJet,allocator<StjJet> >::iterator*) G__int(libp->para[0])), *(StjJet*) libp->para[1].ref);
         pobj = new vector<StjJet,allocator<StjJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->insert(*((vector<StjJet,allocator<StjJet> >::iterator*) G__int(libp->para[0])), *((vector<StjJet,allocator<StjJet> >::const_iterator*) G__int(libp->para[1]))
, *((vector<StjJet,allocator<StjJet> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->insert(*((vector<StjJet,allocator<StjJet> >::iterator*) G__int(libp->para[0])), (vector<StjJet,allocator<StjJet> >::size_type) G__int(libp->para[1])
, *(StjJet*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->erase(*((vector<StjJet,allocator<StjJet> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->erase(*((vector<StjJet,allocator<StjJet> >::iterator*) G__int(libp->para[0])), *((vector<StjJet,allocator<StjJet> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_158_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjJet,allocator<StjJet> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<StjJet,allocator<StjJet> > G__TvectorlEStjJetcOallocatorlEStjJetgRsPgR;
static int G__BaseDict_158_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<StjJet,allocator<StjJet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<StjJet,allocator<StjJet> >*) (soff+(sizeof(vector<StjJet,allocator<StjJet> >)*i)))->~G__TvectorlEStjJetcOallocatorlEStjJetgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<StjJet,allocator<StjJet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<StjJet,allocator<StjJet> >*) (soff))->~G__TvectorlEStjJetcOallocatorlEStjJetgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjDijet */
static int G__BaseDict_161_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjDijet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_161_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_161_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjDijet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_161_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjDijet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_161_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_161_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_161_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_161_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_161_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__BaseDict_161_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijet *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjDijet[n];
     } else {
       p = new((void*) gvp) StjDijet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjDijet;
     } else {
       p = new((void*) gvp) StjDijet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijet);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_161_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjDijet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjDijet(*(StjDijet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijet);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjDijet G__TStjDijet;
static int G__BaseDict_161_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjDijet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjDijet*) (soff+(sizeof(StjDijet)*i)))->~G__TStjDijet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjDijet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjDijet*) (soff))->~G__TStjDijet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_161_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijet* dest = (StjDijet*) G__getstructoffset();
   *dest = *(StjDijet*) libp->para[0].ref;
   const StjDijet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<StjDijet,allocator<StjDijet> > */
static int G__BaseDict_163_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjDijet& obj = ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->at((vector<StjDijet,allocator<StjDijet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjDijet,allocator<StjDijet> >::iterator* pobj;
         vector<StjDijet,allocator<StjDijet> >::iterator xobj = ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->begin();
         pobj = new vector<StjDijet,allocator<StjDijet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjDijet,allocator<StjDijet> >::iterator* pobj;
         vector<StjDijet,allocator<StjDijet> >::iterator xobj = ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->end();
         pobj = new vector<StjDijet,allocator<StjDijet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjDijet,allocator<StjDijet> >::reverse_iterator* pobj;
         vector<StjDijet,allocator<StjDijet> >::reverse_iterator xobj = ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->rbegin();
         pobj = new vector<StjDijet,allocator<StjDijet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjDijet,allocator<StjDijet> >::reverse_iterator* pobj;
         vector<StjDijet,allocator<StjDijet> >::reverse_iterator xobj = ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->rend();
         pobj = new vector<StjDijet,allocator<StjDijet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->resize((vector<StjDijet,allocator<StjDijet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->resize((vector<StjDijet,allocator<StjDijet> >::size_type) G__int(libp->para[0]), *((StjDijet*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjDijet& obj = ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->operator[]((vector<StjDijet,allocator<StjDijet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjDijet,allocator<StjDijet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjDijet,allocator<StjDijet> >[n];
     } else {
       p = new((void*) gvp) vector<StjDijet,allocator<StjDijet> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjDijet,allocator<StjDijet> >;
     } else {
       p = new((void*) gvp) vector<StjDijet,allocator<StjDijet> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjDijet,allocator<StjDijet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjDijet,allocator<StjDijet> >((vector<StjDijet,allocator<StjDijet> >::size_type) G__int(libp->para[0]), *(StjDijet*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<StjDijet,allocator<StjDijet> >((vector<StjDijet,allocator<StjDijet> >::size_type) G__int(libp->para[0]), *(StjDijet*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjDijet,allocator<StjDijet> >((vector<StjDijet,allocator<StjDijet> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<StjDijet,allocator<StjDijet> >((vector<StjDijet,allocator<StjDijet> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjDijet,allocator<StjDijet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<StjDijet,allocator<StjDijet> >(*(vector<StjDijet,allocator<StjDijet> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<StjDijet,allocator<StjDijet> >(*(vector<StjDijet,allocator<StjDijet> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjDijet,allocator<StjDijet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<StjDijet,allocator<StjDijet> >(*((vector<StjDijet,allocator<StjDijet> >::const_iterator*) G__int(libp->para[0])), *((vector<StjDijet,allocator<StjDijet> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<StjDijet,allocator<StjDijet> >(*((vector<StjDijet,allocator<StjDijet> >::const_iterator*) G__int(libp->para[0])), *((vector<StjDijet,allocator<StjDijet> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StjDijet,allocator<StjDijet> >& obj = ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->operator=(*(vector<StjDijet,allocator<StjDijet> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->reserve((vector<StjDijet,allocator<StjDijet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjDijet& obj = ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjDijet& obj = ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->push_back(*(StjDijet*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->swap(*(vector<StjDijet,allocator<StjDijet> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjDijet,allocator<StjDijet> >::iterator* pobj;
         vector<StjDijet,allocator<StjDijet> >::iterator xobj = ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->insert(*((vector<StjDijet,allocator<StjDijet> >::iterator*) G__int(libp->para[0])), *(StjDijet*) libp->para[1].ref);
         pobj = new vector<StjDijet,allocator<StjDijet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->insert(*((vector<StjDijet,allocator<StjDijet> >::iterator*) G__int(libp->para[0])), *((vector<StjDijet,allocator<StjDijet> >::const_iterator*) G__int(libp->para[1]))
, *((vector<StjDijet,allocator<StjDijet> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->insert(*((vector<StjDijet,allocator<StjDijet> >::iterator*) G__int(libp->para[0])), (vector<StjDijet,allocator<StjDijet> >::size_type) G__int(libp->para[1])
, *(StjDijet*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->erase(*((vector<StjDijet,allocator<StjDijet> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->erase(*((vector<StjDijet,allocator<StjDijet> >::iterator*) G__int(libp->para[0])), *((vector<StjDijet,allocator<StjDijet> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_163_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjDijet,allocator<StjDijet> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<StjDijet,allocator<StjDijet> > G__TvectorlEStjDijetcOallocatorlEStjDijetgRsPgR;
static int G__BaseDict_163_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<StjDijet,allocator<StjDijet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<StjDijet,allocator<StjDijet> >*) (soff+(sizeof(vector<StjDijet,allocator<StjDijet> >)*i)))->~G__TvectorlEStjDijetcOallocatorlEStjDijetgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<StjDijet,allocator<StjDijet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<StjDijet,allocator<StjDijet> >*) (soff))->~G__TvectorlEStjDijetcOallocatorlEStjDijetgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjDijetCut */
static int G__BaseDict_166_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StjDijetCut*) G__getstructoffset())->operator()(*(StjDijet*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_166_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjDijetCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_166_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_166_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjDijetCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_166_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjDijetCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_166_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_166_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_166_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_166_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_166_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjDijetCut G__TStjDijetCut;
static int G__BaseDict_166_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjDijetCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjDijetCut*) (soff+(sizeof(StjDijetCut)*i)))->~G__TStjDijetCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjDijetCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjDijetCut*) (soff))->~G__TStjDijetCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_166_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetCut* dest = (StjDijetCut*) G__getstructoffset();
   *dest = *(StjDijetCut*) libp->para[0].ref;
   const StjDijetCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjDijetCutAsymmetricPt */
static int G__BaseDict_167_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetCutAsymmetricPt* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjDijetCutAsymmetricPt((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) StjDijetCutAsymmetricPt((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutAsymmetricPt);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_167_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjDijetCutAsymmetricPt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_167_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutAsymmetricPt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_167_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjDijetCutAsymmetricPt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_167_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjDijetCutAsymmetricPt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_167_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetCutAsymmetricPt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_167_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutAsymmetricPt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_167_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCutAsymmetricPt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_167_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutAsymmetricPt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_167_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCutAsymmetricPt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_167_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjDijetCutAsymmetricPt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjDijetCutAsymmetricPt(*(StjDijetCutAsymmetricPt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutAsymmetricPt);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjDijetCutAsymmetricPt G__TStjDijetCutAsymmetricPt;
static int G__BaseDict_167_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjDijetCutAsymmetricPt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjDijetCutAsymmetricPt*) (soff+(sizeof(StjDijetCutAsymmetricPt)*i)))->~G__TStjDijetCutAsymmetricPt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjDijetCutAsymmetricPt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjDijetCutAsymmetricPt*) (soff))->~G__TStjDijetCutAsymmetricPt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_167_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetCutAsymmetricPt* dest = (StjDijetCutAsymmetricPt*) G__getstructoffset();
   *dest = *(StjDijetCutAsymmetricPt*) libp->para[0].ref;
   const StjDijetCutAsymmetricPt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjDijetCutDPhi */
static int G__BaseDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetCutDPhi* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjDijetCutDPhi((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjDijetCutDPhi((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjDijetCutDPhi((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjDijetCutDPhi((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjDijetCutDPhi[n];
       } else {
         p = new((void*) gvp) StjDijetCutDPhi[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjDijetCutDPhi;
       } else {
         p = new((void*) gvp) StjDijetCutDPhi;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutDPhi);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjDijetCutDPhi::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutDPhi::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjDijetCutDPhi::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjDijetCutDPhi::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetCutDPhi*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutDPhi::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCutDPhi::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutDPhi::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCutDPhi::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjDijetCutDPhi* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjDijetCutDPhi(*(StjDijetCutDPhi*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutDPhi);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjDijetCutDPhi G__TStjDijetCutDPhi;
static int G__BaseDict_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjDijetCutDPhi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjDijetCutDPhi*) (soff+(sizeof(StjDijetCutDPhi)*i)))->~G__TStjDijetCutDPhi();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjDijetCutDPhi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjDijetCutDPhi*) (soff))->~G__TStjDijetCutDPhi();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetCutDPhi* dest = (StjDijetCutDPhi*) G__getstructoffset();
   *dest = *(StjDijetCutDPhi*) libp->para[0].ref;
   const StjDijetCutDPhi& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjJetCut */
static int G__BaseDict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StjJetCut*) G__getstructoffset())->operator()(*(StjJet*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjJetCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjJetCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjJetCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjJetCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjJetCut G__TStjJetCut;
static int G__BaseDict_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjJetCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjJetCut*) (soff+(sizeof(StjJetCut)*i)))->~G__TStjJetCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjJetCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjJetCut*) (soff))->~G__TStjJetCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetCut* dest = (StjJetCut*) G__getstructoffset();
   *dest = *(StjJetCut*) libp->para[0].ref;
   const StjJetCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjJetCutEta */
static int G__BaseDict_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetCutEta* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJetCutEta((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjJetCutEta((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJetCutEta((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjJetCutEta((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjJetCutEta[n];
       } else {
         p = new((void*) gvp) StjJetCutEta[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjJetCutEta;
       } else {
         p = new((void*) gvp) StjJetCutEta;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetCutEta);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjJetCutEta::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutEta::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjJetCutEta::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjJetCutEta::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjJetCutEta*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutEta::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCutEta::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutEta::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCutEta::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjJetCutEta* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjJetCutEta(*(StjJetCutEta*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetCutEta);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjJetCutEta G__TStjJetCutEta;
static int G__BaseDict_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjJetCutEta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjJetCutEta*) (soff+(sizeof(StjJetCutEta)*i)))->~G__TStjJetCutEta();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjJetCutEta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjJetCutEta*) (soff))->~G__TStjJetCutEta();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetCutEta* dest = (StjJetCutEta*) G__getstructoffset();
   *dest = *(StjJetCutEta*) libp->para[0].ref;
   const StjJetCutEta& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjDijetCutEta */
static int G__BaseDict_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetCutEta* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjDijetCutEta((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjDijetCutEta((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjDijetCutEta((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjDijetCutEta((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjDijetCutEta[n];
       } else {
         p = new((void*) gvp) StjDijetCutEta[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjDijetCutEta;
       } else {
         p = new((void*) gvp) StjDijetCutEta;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjDijetCutEta::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutEta::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjDijetCutEta::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjDijetCutEta::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_171_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetCutEta*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_171_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutEta::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_171_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCutEta::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_171_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutEta::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_171_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCutEta::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_171_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjDijetCutEta* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjDijetCutEta(*(StjDijetCutEta*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjDijetCutEta G__TStjDijetCutEta;
static int G__BaseDict_171_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjDijetCutEta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjDijetCutEta*) (soff+(sizeof(StjDijetCutEta)*i)))->~G__TStjDijetCutEta();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjDijetCutEta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjDijetCutEta*) (soff))->~G__TStjDijetCutEta();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_171_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetCutEta* dest = (StjDijetCutEta*) G__getstructoffset();
   *dest = *(StjDijetCutEta*) libp->para[0].ref;
   const StjDijetCutEta& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjDijetCutEta3MinusEta4 */
static int G__BaseDict_172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetCutEta3MinusEta4* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjDijetCutEta3MinusEta4((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjDijetCutEta3MinusEta4((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjDijetCutEta3MinusEta4((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjDijetCutEta3MinusEta4((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjDijetCutEta3MinusEta4[n];
       } else {
         p = new((void*) gvp) StjDijetCutEta3MinusEta4[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjDijetCutEta3MinusEta4;
       } else {
         p = new((void*) gvp) StjDijetCutEta3MinusEta4;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta3MinusEta4);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjDijetCutEta3MinusEta4::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutEta3MinusEta4::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjDijetCutEta3MinusEta4::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjDijetCutEta3MinusEta4::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetCutEta3MinusEta4*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_172_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutEta3MinusEta4::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_172_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCutEta3MinusEta4::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_172_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutEta3MinusEta4::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCutEta3MinusEta4::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjDijetCutEta3MinusEta4* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjDijetCutEta3MinusEta4(*(StjDijetCutEta3MinusEta4*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta3MinusEta4);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjDijetCutEta3MinusEta4 G__TStjDijetCutEta3MinusEta4;
static int G__BaseDict_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjDijetCutEta3MinusEta4*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjDijetCutEta3MinusEta4*) (soff+(sizeof(StjDijetCutEta3MinusEta4)*i)))->~G__TStjDijetCutEta3MinusEta4();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjDijetCutEta3MinusEta4*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjDijetCutEta3MinusEta4*) (soff))->~G__TStjDijetCutEta3MinusEta4();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetCutEta3MinusEta4* dest = (StjDijetCutEta3MinusEta4*) G__getstructoffset();
   *dest = *(StjDijetCutEta3MinusEta4*) libp->para[0].ref;
   const StjDijetCutEta3MinusEta4& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjFourVecCut */
static int G__BaseDict_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StjFourVecCut*) G__getstructoffset())->operator()(*(StjFourVec*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjFourVecCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjFourVecCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjFourVecCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjFourVecCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVecCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVecCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjFourVecCut G__TStjFourVecCut;
static int G__BaseDict_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjFourVecCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjFourVecCut*) (soff+(sizeof(StjFourVecCut)*i)))->~G__TStjFourVecCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjFourVecCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjFourVecCut*) (soff))->~G__TStjFourVecCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFourVecCut* dest = (StjFourVecCut*) G__getstructoffset();
   *dest = *(StjFourVecCut*) libp->para[0].ref;
   const StjFourVecCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjFourVecListCut */
static int G__BaseDict_174_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFourVecListCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjFourVecListCut[n];
     } else {
       p = new((void*) gvp) StjFourVecListCut[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjFourVecListCut;
     } else {
       p = new((void*) gvp) StjFourVecListCut;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFourVecListCut);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjFourVecList* pobj;
         StjFourVecList xobj = ((StjFourVecListCut*) G__getstructoffset())->operator()(*(StjFourVecList*) libp->para[0].ref);
         pobj = new StjFourVecList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_174_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjFourVecListCut*) G__getstructoffset())->addCut((StjFourVecCut*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_174_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjFourVecListCut::CutList* pobj;
         StjFourVecListCut::CutList xobj = ((StjFourVecListCut*) G__getstructoffset())->getCutList();
         pobj = new StjFourVecListCut::CutList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_174_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjFourVecListCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_174_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecListCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_174_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjFourVecListCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_174_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjFourVecListCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_174_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjFourVecListCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_174_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecListCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_174_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVecListCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_174_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecListCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_174_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVecListCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_174_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjFourVecListCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjFourVecListCut(*(StjFourVecListCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFourVecListCut);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjFourVecListCut G__TStjFourVecListCut;
static int G__BaseDict_174_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjFourVecListCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjFourVecListCut*) (soff+(sizeof(StjFourVecListCut)*i)))->~G__TStjFourVecListCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjFourVecListCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjFourVecListCut*) (soff))->~G__TStjFourVecListCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_174_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFourVecListCut* dest = (StjFourVecListCut*) G__getstructoffset();
   *dest = *(StjFourVecListCut*) libp->para[0].ref;
   const StjFourVecListCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjJetCutTrgBHT */
static int G__BaseDict_180_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetCutTrgBHT* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjJetCutTrgBHT((StjTrg*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StjJetCutTrgBHT((StjTrg*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBHT);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_180_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjJetCutTrgBHT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_180_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutTrgBHT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_180_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjJetCutTrgBHT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_180_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjJetCutTrgBHT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_180_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjJetCutTrgBHT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_180_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutTrgBHT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_180_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCutTrgBHT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_180_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutTrgBHT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_180_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCutTrgBHT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_180_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjJetCutTrgBHT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjJetCutTrgBHT(*(StjJetCutTrgBHT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBHT);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjJetCutTrgBHT G__TStjJetCutTrgBHT;
static int G__BaseDict_180_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjJetCutTrgBHT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjJetCutTrgBHT*) (soff+(sizeof(StjJetCutTrgBHT)*i)))->~G__TStjJetCutTrgBHT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjJetCutTrgBHT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjJetCutTrgBHT*) (soff))->~G__TStjJetCutTrgBHT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_180_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetCutTrgBHT* dest = (StjJetCutTrgBHT*) G__getstructoffset();
   *dest = *(StjJetCutTrgBHT*) libp->para[0].ref;
   const StjJetCutTrgBHT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjDijetCutTrgBHT */
static int G__BaseDict_181_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetCutTrgBHT* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjDijetCutTrgBHT((StjTrg*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StjDijetCutTrgBHT((StjTrg*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBHT);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_181_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjDijetCutTrgBHT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_181_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutTrgBHT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_181_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjDijetCutTrgBHT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_181_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjDijetCutTrgBHT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_181_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetCutTrgBHT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_181_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutTrgBHT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_181_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCutTrgBHT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_181_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutTrgBHT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_181_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCutTrgBHT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_181_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjDijetCutTrgBHT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjDijetCutTrgBHT(*(StjDijetCutTrgBHT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBHT);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjDijetCutTrgBHT G__TStjDijetCutTrgBHT;
static int G__BaseDict_181_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjDijetCutTrgBHT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjDijetCutTrgBHT*) (soff+(sizeof(StjDijetCutTrgBHT)*i)))->~G__TStjDijetCutTrgBHT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjDijetCutTrgBHT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjDijetCutTrgBHT*) (soff))->~G__TStjDijetCutTrgBHT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_181_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetCutTrgBHT* dest = (StjDijetCutTrgBHT*) G__getstructoffset();
   *dest = *(StjDijetCutTrgBHT*) libp->para[0].ref;
   const StjDijetCutTrgBHT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjJetCutTrgBJP */
static int G__BaseDict_183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetCutTrgBJP* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjJetCutTrgBJP((StjTrg*) G__int(libp->para[0]), (StjTrgBEMCJetPatchTowerIdMap*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) StjJetCutTrgBJP((StjTrg*) G__int(libp->para[0]), (StjTrgBEMCJetPatchTowerIdMap*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBJP);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_183_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjJetCutTrgBJP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_183_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutTrgBJP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjJetCutTrgBJP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjJetCutTrgBJP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_183_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjJetCutTrgBJP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_183_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutTrgBJP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_183_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCutTrgBJP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_183_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutTrgBJP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_183_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCutTrgBJP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_183_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjJetCutTrgBJP* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjJetCutTrgBJP(*(StjJetCutTrgBJP*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBJP);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjJetCutTrgBJP G__TStjJetCutTrgBJP;
static int G__BaseDict_183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjJetCutTrgBJP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjJetCutTrgBJP*) (soff+(sizeof(StjJetCutTrgBJP)*i)))->~G__TStjJetCutTrgBJP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjJetCutTrgBJP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjJetCutTrgBJP*) (soff))->~G__TStjJetCutTrgBJP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetCutTrgBJP* dest = (StjJetCutTrgBJP*) G__getstructoffset();
   *dest = *(StjJetCutTrgBJP*) libp->para[0].ref;
   const StjJetCutTrgBJP& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjDijetCutTrgBJP */
static int G__BaseDict_184_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetCutTrgBJP* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjDijetCutTrgBJP((StjTrg*) G__int(libp->para[0]), (StjTrgBEMCJetPatchTowerIdMap*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) StjDijetCutTrgBJP((StjTrg*) G__int(libp->para[0]), (StjTrgBEMCJetPatchTowerIdMap*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBJP);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_184_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjDijetCutTrgBJP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_184_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutTrgBJP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_184_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjDijetCutTrgBJP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_184_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjDijetCutTrgBJP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_184_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetCutTrgBJP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_184_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutTrgBJP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_184_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCutTrgBJP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_184_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetCutTrgBJP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_184_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetCutTrgBJP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_184_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjDijetCutTrgBJP* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjDijetCutTrgBJP(*(StjDijetCutTrgBJP*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBJP);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjDijetCutTrgBJP G__TStjDijetCutTrgBJP;
static int G__BaseDict_184_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjDijetCutTrgBJP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjDijetCutTrgBJP*) (soff+(sizeof(StjDijetCutTrgBJP)*i)))->~G__TStjDijetCutTrgBJP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjDijetCutTrgBJP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjDijetCutTrgBJP*) (soff))->~G__TStjDijetCutTrgBJP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_184_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetCutTrgBJP* dest = (StjDijetCutTrgBJP*) G__getstructoffset();
   *dest = *(StjDijetCutTrgBJP*) libp->para[0].ref;
   const StjDijetCutTrgBJP& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjDijetListCut */
static int G__BaseDict_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetListCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjDijetListCut[n];
     } else {
       p = new((void*) gvp) StjDijetListCut[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjDijetListCut;
     } else {
       p = new((void*) gvp) StjDijetListCut;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetListCut);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjDijetList* pobj;
         StjDijetList xobj = ((StjDijetListCut*) G__getstructoffset())->operator()(*(StjDijetList*) libp->para[0].ref);
         pobj = new StjDijetList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetListCut*) G__getstructoffset())->addCut((StjDijetCut*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjDijetListCut::CutList* pobj;
         StjDijetListCut::CutList xobj = ((StjDijetListCut*) G__getstructoffset())->getCutList();
         pobj = new StjDijetListCut::CutList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_185_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjDijetListCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_185_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetListCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_185_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjDijetListCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_185_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjDijetListCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_185_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetListCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_185_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetListCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_185_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetListCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_185_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetListCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_185_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetListCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_185_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjDijetListCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjDijetListCut(*(StjDijetListCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetListCut);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjDijetListCut G__TStjDijetListCut;
static int G__BaseDict_185_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjDijetListCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjDijetListCut*) (soff+(sizeof(StjDijetListCut)*i)))->~G__TStjDijetListCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjDijetListCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjDijetListCut*) (soff))->~G__TStjDijetListCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_185_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetListCut* dest = (StjDijetListCut*) G__getstructoffset();
   *dest = *(StjDijetListCut*) libp->para[0].ref;
   const StjDijetListCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjDijetPrint */
static int G__BaseDict_190_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetPrint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjDijetPrint[n];
     } else {
       p = new((void*) gvp) StjDijetPrint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjDijetPrint;
     } else {
       p = new((void*) gvp) StjDijetPrint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetPrint);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_190_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetPrint*) G__getstructoffset())->operator()(*(StjDijetList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_190_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjDijetPrint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetPrint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjDijetPrint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_190_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjDijetPrint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetPrint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_190_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetPrint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_190_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetPrint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_190_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetPrint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_190_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetPrint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_190_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjDijetPrint* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjDijetPrint(*(StjDijetPrint*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetPrint);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjDijetPrint G__TStjDijetPrint;
static int G__BaseDict_190_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjDijetPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjDijetPrint*) (soff+(sizeof(StjDijetPrint)*i)))->~G__TStjDijetPrint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjDijetPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjDijetPrint*) (soff))->~G__TStjDijetPrint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_190_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetPrint* dest = (StjDijetPrint*) G__getstructoffset();
   *dest = *(StjDijetPrint*) libp->para[0].ref;
   const StjDijetPrint& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjEEMC */
static int G__BaseDict_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjEEMC*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjTowerEnergyList* pobj;
         StjTowerEnergyList xobj = ((StjEEMC*) G__getstructoffset())->getEnergyList();
         pobj = new StjTowerEnergyList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjEEMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjEEMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjEEMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjEEMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjEEMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjEEMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjEEMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjEEMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjEEMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjEEMC G__TStjEEMC;
static int G__BaseDict_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjEEMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjEEMC*) (soff+(sizeof(StjEEMC)*i)))->~G__TStjEEMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjEEMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjEEMC*) (soff))->~G__TStjEEMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjEEMC* dest = (StjEEMC*) G__getstructoffset();
   *dest = *(StjEEMC*) libp->para[0].ref;
   const StjEEMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjEEMCNull */
static int G__BaseDict_192_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjEEMCNull* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjEEMCNull[n];
     } else {
       p = new((void*) gvp) StjEEMCNull[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjEEMCNull;
     } else {
       p = new((void*) gvp) StjEEMCNull;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjEEMCNull);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_192_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjEEMCNull::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_192_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjEEMCNull::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_192_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjEEMCNull::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_192_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjEEMCNull::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_192_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjEEMCNull*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_192_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjEEMCNull::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_192_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjEEMCNull::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_192_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjEEMCNull::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_192_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjEEMCNull::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_192_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjEEMCNull* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjEEMCNull(*(StjEEMCNull*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjEEMCNull);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjEEMCNull G__TStjEEMCNull;
static int G__BaseDict_192_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjEEMCNull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjEEMCNull*) (soff+(sizeof(StjEEMCNull)*i)))->~G__TStjEEMCNull();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjEEMCNull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjEEMCNull*) (soff))->~G__TStjEEMCNull();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_192_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjEEMCNull* dest = (StjEEMCNull*) G__getstructoffset();
   *dest = *(StjEEMCNull*) libp->para[0].ref;
   const StjEEMCNull& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjEEMCTxt */
static int G__BaseDict_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjEEMCTxt* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjEEMCTxt((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StjEEMCTxt((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjEEMCTxt);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjEEMCTxt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjEEMCTxt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjEEMCTxt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjEEMCTxt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjEEMCTxt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjEEMCTxt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjEEMCTxt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjEEMCTxt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjEEMCTxt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjEEMCTxt G__TStjEEMCTxt;
static int G__BaseDict_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjEEMCTxt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjEEMCTxt*) (soff+(sizeof(StjEEMCTxt)*i)))->~G__TStjEEMCTxt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjEEMCTxt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjEEMCTxt*) (soff))->~G__TStjEEMCTxt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjFormDijet */
static int G__BaseDict_194_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFormDijet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjFormDijet[n];
     } else {
       p = new((void*) gvp) StjFormDijet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjFormDijet;
     } else {
       p = new((void*) gvp) StjFormDijet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFormDijet);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_194_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjDijetList* pobj;
         StjDijetList xobj = ((StjFormDijet*) G__getstructoffset())->operator()(*((StjJetList*) G__int(libp->para[0])));
         pobj = new StjDijetList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_194_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjFormDijet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFormDijet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_194_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjFormDijet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_194_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjFormDijet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_194_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjFormDijet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_194_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFormDijet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_194_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFormDijet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_194_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFormDijet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_194_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFormDijet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_194_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjFormDijet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjFormDijet(*(StjFormDijet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFormDijet);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjFormDijet G__TStjFormDijet;
static int G__BaseDict_194_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjFormDijet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjFormDijet*) (soff+(sizeof(StjFormDijet)*i)))->~G__TStjFormDijet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjFormDijet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjFormDijet*) (soff))->~G__TStjFormDijet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_194_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFormDijet* dest = (StjFormDijet*) G__getstructoffset();
   *dest = *(StjFormDijet*) libp->para[0].ref;
   const StjFormDijet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjFourVecCutPt */
static int G__BaseDict_196_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFourVecCutPt* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjFourVecCutPt((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjFourVecCutPt((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjFourVecCutPt((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjFourVecCutPt((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjFourVecCutPt[n];
       } else {
         p = new((void*) gvp) StjFourVecCutPt[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjFourVecCutPt;
       } else {
         p = new((void*) gvp) StjFourVecCutPt;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutPt);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_196_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjFourVecCutPt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_196_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecCutPt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_196_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjFourVecCutPt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_196_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjFourVecCutPt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_196_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjFourVecCutPt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_196_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecCutPt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_196_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVecCutPt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_196_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecCutPt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_196_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVecCutPt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_196_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjFourVecCutPt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjFourVecCutPt(*(StjFourVecCutPt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutPt);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjFourVecCutPt G__TStjFourVecCutPt;
static int G__BaseDict_196_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjFourVecCutPt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjFourVecCutPt*) (soff+(sizeof(StjFourVecCutPt)*i)))->~G__TStjFourVecCutPt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjFourVecCutPt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjFourVecCutPt*) (soff))->~G__TStjFourVecCutPt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_196_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFourVecCutPt* dest = (StjFourVecCutPt*) G__getstructoffset();
   *dest = *(StjFourVecCutPt*) libp->para[0].ref;
   const StjFourVecCutPt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjFourVecCutTrgBHT */
static int G__BaseDict_197_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFourVecCutTrgBHT* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjFourVecCutTrgBHT((StjTrg*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StjFourVecCutTrgBHT((StjTrg*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBHT);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_197_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjFourVecCutTrgBHT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_197_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecCutTrgBHT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_197_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjFourVecCutTrgBHT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_197_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjFourVecCutTrgBHT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_197_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjFourVecCutTrgBHT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_197_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecCutTrgBHT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_197_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVecCutTrgBHT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_197_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecCutTrgBHT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_197_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVecCutTrgBHT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_197_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjFourVecCutTrgBHT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjFourVecCutTrgBHT(*(StjFourVecCutTrgBHT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBHT);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjFourVecCutTrgBHT G__TStjFourVecCutTrgBHT;
static int G__BaseDict_197_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjFourVecCutTrgBHT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjFourVecCutTrgBHT*) (soff+(sizeof(StjFourVecCutTrgBHT)*i)))->~G__TStjFourVecCutTrgBHT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjFourVecCutTrgBHT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjFourVecCutTrgBHT*) (soff))->~G__TStjFourVecCutTrgBHT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_197_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFourVecCutTrgBHT* dest = (StjFourVecCutTrgBHT*) G__getstructoffset();
   *dest = *(StjFourVecCutTrgBHT*) libp->para[0].ref;
   const StjFourVecCutTrgBHT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjFourVecCutTrgBJP */
static int G__BaseDict_198_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFourVecCutTrgBJP* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjFourVecCutTrgBJP((StjTrg*) G__int(libp->para[0]), (StjTrgBEMCJetPatchTowerIdMap*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) StjFourVecCutTrgBJP((StjTrg*) G__int(libp->para[0]), (StjTrgBEMCJetPatchTowerIdMap*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBJP);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_198_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjFourVecCutTrgBJP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_198_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecCutTrgBJP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_198_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjFourVecCutTrgBJP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_198_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjFourVecCutTrgBJP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_198_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjFourVecCutTrgBJP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_198_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecCutTrgBJP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_198_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVecCutTrgBJP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_198_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecCutTrgBJP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_198_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVecCutTrgBJP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_198_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjFourVecCutTrgBJP* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjFourVecCutTrgBJP(*(StjFourVecCutTrgBJP*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBJP);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjFourVecCutTrgBJP G__TStjFourVecCutTrgBJP;
static int G__BaseDict_198_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjFourVecCutTrgBJP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjFourVecCutTrgBJP*) (soff+(sizeof(StjFourVecCutTrgBJP)*i)))->~G__TStjFourVecCutTrgBJP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjFourVecCutTrgBJP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjFourVecCutTrgBJP*) (soff))->~G__TStjFourVecCutTrgBJP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_198_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFourVecCutTrgBJP* dest = (StjFourVecCutTrgBJP*) G__getstructoffset();
   *dest = *(StjFourVecCutTrgBJP*) libp->para[0].ref;
   const StjFourVecCutTrgBJP& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjFourVecPrint */
static int G__BaseDict_203_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFourVecPrint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjFourVecPrint[n];
     } else {
       p = new((void*) gvp) StjFourVecPrint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjFourVecPrint;
     } else {
       p = new((void*) gvp) StjFourVecPrint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFourVecPrint);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjFourVecPrint*) G__getstructoffset())->operator()(*(StjFourVecList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjFourVecPrint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecPrint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_203_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjFourVecPrint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_203_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjFourVecPrint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_203_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjFourVecPrint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_203_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecPrint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVecPrint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjFourVecPrint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjFourVecPrint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_203_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjFourVecPrint* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjFourVecPrint(*(StjFourVecPrint*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjFourVecPrint);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjFourVecPrint G__TStjFourVecPrint;
static int G__BaseDict_203_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjFourVecPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjFourVecPrint*) (soff+(sizeof(StjFourVecPrint)*i)))->~G__TStjFourVecPrint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjFourVecPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjFourVecPrint*) (soff))->~G__TStjFourVecPrint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_203_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjFourVecPrint* dest = (StjFourVecPrint*) G__getstructoffset();
   *dest = *(StjFourVecPrint*) libp->para[0].ref;
   const StjFourVecPrint& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjJetCutDetectorEta */
static int G__BaseDict_204_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetCutDetectorEta* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJetCutDetectorEta((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjJetCutDetectorEta((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJetCutDetectorEta((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjJetCutDetectorEta((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjJetCutDetectorEta[n];
       } else {
         p = new((void*) gvp) StjJetCutDetectorEta[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjJetCutDetectorEta;
       } else {
         p = new((void*) gvp) StjJetCutDetectorEta;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetCutDetectorEta);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_204_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjJetCutDetectorEta::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_204_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutDetectorEta::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_204_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjJetCutDetectorEta::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_204_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjJetCutDetectorEta::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_204_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjJetCutDetectorEta*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_204_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutDetectorEta::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_204_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCutDetectorEta::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_204_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutDetectorEta::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_204_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCutDetectorEta::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_204_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjJetCutDetectorEta* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjJetCutDetectorEta(*(StjJetCutDetectorEta*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetCutDetectorEta);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjJetCutDetectorEta G__TStjJetCutDetectorEta;
static int G__BaseDict_204_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjJetCutDetectorEta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjJetCutDetectorEta*) (soff+(sizeof(StjJetCutDetectorEta)*i)))->~G__TStjJetCutDetectorEta();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjJetCutDetectorEta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjJetCutDetectorEta*) (soff))->~G__TStjJetCutDetectorEta();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_204_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetCutDetectorEta* dest = (StjJetCutDetectorEta*) G__getstructoffset();
   *dest = *(StjJetCutDetectorEta*) libp->para[0].ref;
   const StjJetCutDetectorEta& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjJetCutNFourVecs */
static int G__BaseDict_205_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetCutNFourVecs* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJetCutNFourVecs((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) StjJetCutNFourVecs((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJetCutNFourVecs((size_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StjJetCutNFourVecs((size_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjJetCutNFourVecs[n];
       } else {
         p = new((void*) gvp) StjJetCutNFourVecs[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjJetCutNFourVecs;
       } else {
         p = new((void*) gvp) StjJetCutNFourVecs;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetCutNFourVecs);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjJetCutNFourVecs::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutNFourVecs::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjJetCutNFourVecs::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjJetCutNFourVecs::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjJetCutNFourVecs*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutNFourVecs::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCutNFourVecs::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutNFourVecs::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCutNFourVecs::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_205_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjJetCutNFourVecs* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjJetCutNFourVecs(*(StjJetCutNFourVecs*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetCutNFourVecs);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjJetCutNFourVecs G__TStjJetCutNFourVecs;
static int G__BaseDict_205_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjJetCutNFourVecs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjJetCutNFourVecs*) (soff+(sizeof(StjJetCutNFourVecs)*i)))->~G__TStjJetCutNFourVecs();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjJetCutNFourVecs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjJetCutNFourVecs*) (soff))->~G__TStjJetCutNFourVecs();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_205_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetCutNFourVecs* dest = (StjJetCutNFourVecs*) G__getstructoffset();
   *dest = *(StjJetCutNFourVecs*) libp->para[0].ref;
   const StjJetCutNFourVecs& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjJetCutPt */
static int G__BaseDict_206_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetCutPt* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJetCutPt((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjJetCutPt((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJetCutPt((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjJetCutPt((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjJetCutPt[n];
       } else {
         p = new((void*) gvp) StjJetCutPt[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjJetCutPt;
       } else {
         p = new((void*) gvp) StjJetCutPt;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetCutPt);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_206_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjJetCutPt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_206_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutPt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_206_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjJetCutPt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_206_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjJetCutPt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_206_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjJetCutPt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_206_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutPt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_206_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCutPt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_206_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetCutPt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_206_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetCutPt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_206_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjJetCutPt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjJetCutPt(*(StjJetCutPt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetCutPt);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjJetCutPt G__TStjJetCutPt;
static int G__BaseDict_206_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjJetCutPt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjJetCutPt*) (soff+(sizeof(StjJetCutPt)*i)))->~G__TStjJetCutPt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjJetCutPt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjJetCutPt*) (soff))->~G__TStjJetCutPt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_206_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetCutPt* dest = (StjJetCutPt*) G__getstructoffset();
   *dest = *(StjJetCutPt*) libp->para[0].ref;
   const StjJetCutPt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjJetListCut */
static int G__BaseDict_207_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetListCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJetListCut[n];
     } else {
       p = new((void*) gvp) StjJetListCut[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJetListCut;
     } else {
       p = new((void*) gvp) StjJetListCut;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetListCut);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_207_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjJetList* pobj;
         StjJetList xobj = ((StjJetListCut*) G__getstructoffset())->operator()(*(StjJetList*) libp->para[0].ref);
         pobj = new StjJetList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_207_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjJetListCut*) G__getstructoffset())->addCut((StjJetCut*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_207_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjJetListCut::CutList* pobj;
         StjJetListCut::CutList xobj = ((StjJetListCut*) G__getstructoffset())->getCutList();
         pobj = new StjJetListCut::CutList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_207_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjJetListCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_207_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetListCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_207_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjJetListCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_207_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjJetListCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_207_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjJetListCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_207_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetListCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_207_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetListCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_207_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetListCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_207_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetListCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_207_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjJetListCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjJetListCut(*(StjJetListCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetListCut);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjJetListCut G__TStjJetListCut;
static int G__BaseDict_207_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjJetListCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjJetListCut*) (soff+(sizeof(StjJetListCut)*i)))->~G__TStjJetListCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjJetListCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjJetListCut*) (soff))->~G__TStjJetListCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_207_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetListCut* dest = (StjJetListCut*) G__getstructoffset();
   *dest = *(StjJetListCut*) libp->para[0].ref;
   const StjJetListCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjJetPrint */
static int G__BaseDict_212_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetPrint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJetPrint[n];
     } else {
       p = new((void*) gvp) StjJetPrint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjJetPrint;
     } else {
       p = new((void*) gvp) StjJetPrint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetPrint);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_212_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjJetPrint*) G__getstructoffset())->operator()(*(StjJetList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_212_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjJetPrint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_212_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetPrint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_212_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjJetPrint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_212_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjJetPrint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_212_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjJetPrint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_212_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetPrint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_212_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetPrint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_212_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjJetPrint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_212_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjJetPrint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_212_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjJetPrint* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjJetPrint(*(StjJetPrint*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjJetPrint);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjJetPrint G__TStjJetPrint;
static int G__BaseDict_212_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjJetPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjJetPrint*) (soff+(sizeof(StjJetPrint)*i)))->~G__TStjJetPrint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjJetPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjJetPrint*) (soff))->~G__TStjJetPrint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_212_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjJetPrint* dest = (StjJetPrint*) G__getstructoffset();
   *dest = *(StjJetPrint*) libp->para[0].ref;
   const StjJetPrint& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjMCParticle */
static int G__BaseDict_213_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjMCParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_213_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_213_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjMCParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_213_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjMCParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_213_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMCParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_213_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_213_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_213_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_213_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__BaseDict_213_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticle *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticle[n];
     } else {
       p = new((void*) gvp) StjMCParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticle;
     } else {
       p = new((void*) gvp) StjMCParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_213_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjMCParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjMCParticle(*(StjMCParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjMCParticle G__TStjMCParticle;
static int G__BaseDict_213_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjMCParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjMCParticle*) (soff+(sizeof(StjMCParticle)*i)))->~G__TStjMCParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjMCParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjMCParticle*) (soff))->~G__TStjMCParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_213_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticle* dest = (StjMCParticle*) G__getstructoffset();
   *dest = *(StjMCParticle*) libp->para[0].ref;
   const StjMCParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<StjMCParticle,allocator<StjMCParticle> > */
static int G__BaseDict_215_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjMCParticle& obj = ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->at((vector<StjMCParticle,allocator<StjMCParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjMCParticle,allocator<StjMCParticle> >::iterator* pobj;
         vector<StjMCParticle,allocator<StjMCParticle> >::iterator xobj = ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->begin();
         pobj = new vector<StjMCParticle,allocator<StjMCParticle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjMCParticle,allocator<StjMCParticle> >::iterator* pobj;
         vector<StjMCParticle,allocator<StjMCParticle> >::iterator xobj = ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->end();
         pobj = new vector<StjMCParticle,allocator<StjMCParticle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjMCParticle,allocator<StjMCParticle> >::reverse_iterator* pobj;
         vector<StjMCParticle,allocator<StjMCParticle> >::reverse_iterator xobj = ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->rbegin();
         pobj = new vector<StjMCParticle,allocator<StjMCParticle> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjMCParticle,allocator<StjMCParticle> >::reverse_iterator* pobj;
         vector<StjMCParticle,allocator<StjMCParticle> >::reverse_iterator xobj = ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->rend();
         pobj = new vector<StjMCParticle,allocator<StjMCParticle> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->resize((vector<StjMCParticle,allocator<StjMCParticle> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->resize((vector<StjMCParticle,allocator<StjMCParticle> >::size_type) G__int(libp->para[0]), *((StjMCParticle*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjMCParticle& obj = ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->operator[]((vector<StjMCParticle,allocator<StjMCParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjMCParticle,allocator<StjMCParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjMCParticle,allocator<StjMCParticle> >[n];
     } else {
       p = new((void*) gvp) vector<StjMCParticle,allocator<StjMCParticle> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjMCParticle,allocator<StjMCParticle> >;
     } else {
       p = new((void*) gvp) vector<StjMCParticle,allocator<StjMCParticle> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjMCParticle,allocator<StjMCParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjMCParticle,allocator<StjMCParticle> >((vector<StjMCParticle,allocator<StjMCParticle> >::size_type) G__int(libp->para[0]), *(StjMCParticle*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<StjMCParticle,allocator<StjMCParticle> >((vector<StjMCParticle,allocator<StjMCParticle> >::size_type) G__int(libp->para[0]), *(StjMCParticle*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjMCParticle,allocator<StjMCParticle> >((vector<StjMCParticle,allocator<StjMCParticle> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<StjMCParticle,allocator<StjMCParticle> >((vector<StjMCParticle,allocator<StjMCParticle> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjMCParticle,allocator<StjMCParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<StjMCParticle,allocator<StjMCParticle> >(*(vector<StjMCParticle,allocator<StjMCParticle> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<StjMCParticle,allocator<StjMCParticle> >(*(vector<StjMCParticle,allocator<StjMCParticle> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjMCParticle,allocator<StjMCParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<StjMCParticle,allocator<StjMCParticle> >(*((vector<StjMCParticle,allocator<StjMCParticle> >::const_iterator*) G__int(libp->para[0])), *((vector<StjMCParticle,allocator<StjMCParticle> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<StjMCParticle,allocator<StjMCParticle> >(*((vector<StjMCParticle,allocator<StjMCParticle> >::const_iterator*) G__int(libp->para[0])), *((vector<StjMCParticle,allocator<StjMCParticle> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StjMCParticle,allocator<StjMCParticle> >& obj = ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->operator=(*(vector<StjMCParticle,allocator<StjMCParticle> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->reserve((vector<StjMCParticle,allocator<StjMCParticle> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjMCParticle& obj = ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjMCParticle& obj = ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->push_back(*(StjMCParticle*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->swap(*(vector<StjMCParticle,allocator<StjMCParticle> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjMCParticle,allocator<StjMCParticle> >::iterator* pobj;
         vector<StjMCParticle,allocator<StjMCParticle> >::iterator xobj = ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->insert(*((vector<StjMCParticle,allocator<StjMCParticle> >::iterator*) G__int(libp->para[0])), *(StjMCParticle*) libp->para[1].ref);
         pobj = new vector<StjMCParticle,allocator<StjMCParticle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->insert(*((vector<StjMCParticle,allocator<StjMCParticle> >::iterator*) G__int(libp->para[0])), *((vector<StjMCParticle,allocator<StjMCParticle> >::const_iterator*) G__int(libp->para[1]))
, *((vector<StjMCParticle,allocator<StjMCParticle> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->insert(*((vector<StjMCParticle,allocator<StjMCParticle> >::iterator*) G__int(libp->para[0])), (vector<StjMCParticle,allocator<StjMCParticle> >::size_type) G__int(libp->para[1])
, *(StjMCParticle*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->erase(*((vector<StjMCParticle,allocator<StjMCParticle> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->erase(*((vector<StjMCParticle,allocator<StjMCParticle> >::iterator*) G__int(libp->para[0])), *((vector<StjMCParticle,allocator<StjMCParticle> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_215_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjMCParticle,allocator<StjMCParticle> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<StjMCParticle,allocator<StjMCParticle> > G__TvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR;
static int G__BaseDict_215_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<StjMCParticle,allocator<StjMCParticle> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<StjMCParticle,allocator<StjMCParticle> >*) (soff+(sizeof(vector<StjMCParticle,allocator<StjMCParticle> >)*i)))->~G__TvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<StjMCParticle,allocator<StjMCParticle> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<StjMCParticle,allocator<StjMCParticle> >*) (soff))->~G__TvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjMC */
static int G__BaseDict_218_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMC*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_218_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjMCParticleList* pobj;
         StjMCParticleList xobj = ((StjMC*) G__getstructoffset())->getMCParticleList();
         pobj = new StjMCParticleList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_218_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_218_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_218_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_218_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_218_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_218_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_218_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjMC G__TStjMC;
static int G__BaseDict_218_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjMC*) (soff+(sizeof(StjMC)*i)))->~G__TStjMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjMC*) (soff))->~G__TStjMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_218_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMC* dest = (StjMC*) G__getstructoffset();
   *dest = *(StjMC*) libp->para[0].ref;
   const StjMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjMCNull */
static int G__BaseDict_219_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjMCParticleList* pobj;
         StjMCParticleList xobj = ((StjMCNull*) G__getstructoffset())->getMCPartilceList();
         pobj = new StjMCParticleList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_219_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjMCNull::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCNull::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjMCNull::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_219_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjMCNull::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_219_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMCNull*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_219_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCNull::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_219_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCNull::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_219_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCNull::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_219_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCNull::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjMCNull G__TStjMCNull;
static int G__BaseDict_219_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjMCNull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjMCNull*) (soff+(sizeof(StjMCNull)*i)))->~G__TStjMCNull();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjMCNull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjMCNull*) (soff))->~G__TStjMCNull();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_219_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCNull* dest = (StjMCNull*) G__getstructoffset();
   *dest = *(StjMCNull*) libp->para[0].ref;
   const StjMCNull& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjMCParticleCut */
static int G__BaseDict_220_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StjMCParticleCut*) G__getstructoffset())->operator()(*(StjMCParticle*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_220_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjMCParticleCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_220_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_220_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjMCParticleCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_220_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjMCParticleCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_220_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMCParticleCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_220_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_220_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_220_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_220_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjMCParticleCut G__TStjMCParticleCut;
static int G__BaseDict_220_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjMCParticleCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjMCParticleCut*) (soff+(sizeof(StjMCParticleCut)*i)))->~G__TStjMCParticleCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjMCParticleCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjMCParticleCut*) (soff))->~G__TStjMCParticleCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_220_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleCut* dest = (StjMCParticleCut*) G__getstructoffset();
   *dest = *(StjMCParticleCut*) libp->para[0].ref;
   const StjMCParticleCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjMCParticleCutEta */
static int G__BaseDict_221_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleCutEta* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticleCutEta((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjMCParticleCutEta((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticleCutEta((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjMCParticleCutEta((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjMCParticleCutEta[n];
       } else {
         p = new((void*) gvp) StjMCParticleCutEta[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjMCParticleCutEta;
       } else {
         p = new((void*) gvp) StjMCParticleCutEta;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEta);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_221_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjMCParticleCutEta::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_221_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleCutEta::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjMCParticleCutEta::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_221_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjMCParticleCutEta::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_221_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMCParticleCutEta*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_221_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleCutEta::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_221_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleCutEta::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_221_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleCutEta::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_221_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleCutEta::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_221_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjMCParticleCutEta* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjMCParticleCutEta(*(StjMCParticleCutEta*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEta);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjMCParticleCutEta G__TStjMCParticleCutEta;
static int G__BaseDict_221_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjMCParticleCutEta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjMCParticleCutEta*) (soff+(sizeof(StjMCParticleCutEta)*i)))->~G__TStjMCParticleCutEta();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjMCParticleCutEta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjMCParticleCutEta*) (soff))->~G__TStjMCParticleCutEta();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_221_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleCutEta* dest = (StjMCParticleCutEta*) G__getstructoffset();
   *dest = *(StjMCParticleCutEta*) libp->para[0].ref;
   const StjMCParticleCutEta& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjMCParticleCutEtaForStatus */
static int G__BaseDict_222_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleCutEtaForStatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticleCutEtaForStatus(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) StjMCParticleCutEtaForStatus(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticleCutEtaForStatus((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjMCParticleCutEtaForStatus((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticleCutEtaForStatus((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjMCParticleCutEtaForStatus((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjMCParticleCutEtaForStatus[n];
       } else {
         p = new((void*) gvp) StjMCParticleCutEtaForStatus[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjMCParticleCutEtaForStatus;
       } else {
         p = new((void*) gvp) StjMCParticleCutEtaForStatus;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEtaForStatus);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_222_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjMCParticleCutEtaForStatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_222_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleCutEtaForStatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_222_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjMCParticleCutEtaForStatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_222_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjMCParticleCutEtaForStatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_222_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMCParticleCutEtaForStatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_222_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleCutEtaForStatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_222_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleCutEtaForStatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_222_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleCutEtaForStatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_222_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleCutEtaForStatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_222_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjMCParticleCutEtaForStatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjMCParticleCutEtaForStatus(*(StjMCParticleCutEtaForStatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEtaForStatus);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjMCParticleCutEtaForStatus G__TStjMCParticleCutEtaForStatus;
static int G__BaseDict_222_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjMCParticleCutEtaForStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjMCParticleCutEtaForStatus*) (soff+(sizeof(StjMCParticleCutEtaForStatus)*i)))->~G__TStjMCParticleCutEtaForStatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjMCParticleCutEtaForStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjMCParticleCutEtaForStatus*) (soff))->~G__TStjMCParticleCutEtaForStatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_222_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleCutEtaForStatus* dest = (StjMCParticleCutEtaForStatus*) G__getstructoffset();
   *dest = *(StjMCParticleCutEtaForStatus*) libp->para[0].ref;
   const StjMCParticleCutEtaForStatus& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjMCParticleCutStatus */
static int G__BaseDict_287_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleCutStatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticleCutStatus((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StjMCParticleCutStatus((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjMCParticleCutStatus[n];
       } else {
         p = new((void*) gvp) StjMCParticleCutStatus[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjMCParticleCutStatus;
       } else {
         p = new((void*) gvp) StjMCParticleCutStatus;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutStatus);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_287_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleCutStatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjMCParticleCutStatus((int) G__int(libp->para[0]), (int*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) StjMCParticleCutStatus((int) G__int(libp->para[0]), (int*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutStatus);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_287_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjMCParticleCutStatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_287_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleCutStatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_287_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjMCParticleCutStatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_287_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjMCParticleCutStatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_287_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMCParticleCutStatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_287_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleCutStatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_287_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleCutStatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_287_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleCutStatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_287_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleCutStatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_287_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjMCParticleCutStatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjMCParticleCutStatus(*(StjMCParticleCutStatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutStatus);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjMCParticleCutStatus G__TStjMCParticleCutStatus;
static int G__BaseDict_287_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjMCParticleCutStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjMCParticleCutStatus*) (soff+(sizeof(StjMCParticleCutStatus)*i)))->~G__TStjMCParticleCutStatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjMCParticleCutStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjMCParticleCutStatus*) (soff))->~G__TStjMCParticleCutStatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_287_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleCutStatus* dest = (StjMCParticleCutStatus*) G__getstructoffset();
   *dest = *(StjMCParticleCutStatus*) libp->para[0].ref;
   const StjMCParticleCutStatus& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjMCParticleListCut */
static int G__BaseDict_288_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleListCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticleListCut[n];
     } else {
       p = new((void*) gvp) StjMCParticleListCut[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticleListCut;
     } else {
       p = new((void*) gvp) StjMCParticleListCut;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListCut);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_288_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjMCParticleList* pobj;
         StjMCParticleList xobj = ((StjMCParticleListCut*) G__getstructoffset())->operator()(*(StjMCParticleList*) libp->para[0].ref);
         pobj = new StjMCParticleList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_288_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMCParticleListCut*) G__getstructoffset())->addCut((StjMCParticleCut*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_288_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjMCParticleListCut::CutList* pobj;
         StjMCParticleListCut::CutList xobj = ((StjMCParticleListCut*) G__getstructoffset())->getCutList();
         pobj = new StjMCParticleListCut::CutList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_288_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjMCParticleListCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_288_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleListCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_288_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjMCParticleListCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_288_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjMCParticleListCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_288_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMCParticleListCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_288_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleListCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_288_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleListCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_288_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleListCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_288_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleListCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_288_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjMCParticleListCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjMCParticleListCut(*(StjMCParticleListCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListCut);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjMCParticleListCut G__TStjMCParticleListCut;
static int G__BaseDict_288_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjMCParticleListCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjMCParticleListCut*) (soff+(sizeof(StjMCParticleListCut)*i)))->~G__TStjMCParticleListCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjMCParticleListCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjMCParticleListCut*) (soff))->~G__TStjMCParticleListCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_288_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleListCut* dest = (StjMCParticleListCut*) G__getstructoffset();
   *dest = *(StjMCParticleListCut*) libp->para[0].ref;
   const StjMCParticleListCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjMCParticleListToFourVecList */
static int G__BaseDict_293_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjFourVecList* pobj;
         StjFourVecList xobj = ((StjMCParticleListToFourVecList*) G__getstructoffset())->operator()(*(StjMCParticleList*) libp->para[0].ref);
         pobj = new StjFourVecList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_293_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjMCParticleListToFourVecList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_293_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleListToFourVecList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_293_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjMCParticleListToFourVecList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_293_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjMCParticleListToFourVecList::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_293_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMCParticleListToFourVecList*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_293_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleListToFourVecList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_293_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleListToFourVecList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_293_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleListToFourVecList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_293_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleListToFourVecList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__BaseDict_293_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleListToFourVecList *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticleListToFourVecList[n];
     } else {
       p = new((void*) gvp) StjMCParticleListToFourVecList[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticleListToFourVecList;
     } else {
       p = new((void*) gvp) StjMCParticleListToFourVecList;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListToFourVecList);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_293_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjMCParticleListToFourVecList* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjMCParticleListToFourVecList(*(StjMCParticleListToFourVecList*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListToFourVecList);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjMCParticleListToFourVecList G__TStjMCParticleListToFourVecList;
static int G__BaseDict_293_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjMCParticleListToFourVecList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjMCParticleListToFourVecList*) (soff+(sizeof(StjMCParticleListToFourVecList)*i)))->~G__TStjMCParticleListToFourVecList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjMCParticleListToFourVecList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjMCParticleListToFourVecList*) (soff))->~G__TStjMCParticleListToFourVecList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_293_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleListToFourVecList* dest = (StjMCParticleListToFourVecList*) G__getstructoffset();
   *dest = *(StjMCParticleListToFourVecList*) libp->para[0].ref;
   const StjMCParticleListToFourVecList& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjMCParticlePrint */
static int G__BaseDict_294_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticlePrint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticlePrint[n];
     } else {
       p = new((void*) gvp) StjMCParticlePrint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticlePrint;
     } else {
       p = new((void*) gvp) StjMCParticlePrint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticlePrint);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_294_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMCParticlePrint*) G__getstructoffset())->operator()(*(StjMCParticleList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_294_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjMCParticlePrint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_294_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticlePrint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_294_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjMCParticlePrint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_294_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjMCParticlePrint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_294_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMCParticlePrint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_294_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticlePrint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_294_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticlePrint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_294_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticlePrint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_294_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticlePrint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_294_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjMCParticlePrint* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjMCParticlePrint(*(StjMCParticlePrint*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticlePrint);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjMCParticlePrint G__TStjMCParticlePrint;
static int G__BaseDict_294_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjMCParticlePrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjMCParticlePrint*) (soff+(sizeof(StjMCParticlePrint)*i)))->~G__TStjMCParticlePrint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjMCParticlePrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjMCParticlePrint*) (soff))->~G__TStjMCParticlePrint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_294_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticlePrint* dest = (StjMCParticlePrint*) G__getstructoffset();
   *dest = *(StjMCParticlePrint*) libp->para[0].ref;
   const StjMCParticlePrint& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjMCParticleToFourVec */
static int G__BaseDict_295_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleToFourVec* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticleToFourVec[n];
     } else {
       p = new((void*) gvp) StjMCParticleToFourVec[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjMCParticleToFourVec;
     } else {
       p = new((void*) gvp) StjMCParticleToFourVec;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleToFourVec);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_295_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjFourVec* pobj;
         StjFourVec xobj = ((StjMCParticleToFourVec*) G__getstructoffset())->operator()(*(StjMCParticle*) libp->para[0].ref);
         pobj = new StjFourVec(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_295_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjMCParticleToFourVec::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_295_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleToFourVec::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_295_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjMCParticleToFourVec::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_295_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjMCParticleToFourVec::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_295_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMCParticleToFourVec*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_295_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleToFourVec::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_295_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleToFourVec::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_295_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCParticleToFourVec::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_295_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCParticleToFourVec::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_295_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjMCParticleToFourVec* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjMCParticleToFourVec(*(StjMCParticleToFourVec*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleToFourVec);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjMCParticleToFourVec G__TStjMCParticleToFourVec;
static int G__BaseDict_295_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjMCParticleToFourVec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjMCParticleToFourVec*) (soff+(sizeof(StjMCParticleToFourVec)*i)))->~G__TStjMCParticleToFourVec();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjMCParticleToFourVec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjMCParticleToFourVec*) (soff))->~G__TStjMCParticleToFourVec();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_295_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCParticleToFourVec* dest = (StjMCParticleToFourVec*) G__getstructoffset();
   *dest = *(StjMCParticleToFourVec*) libp->para[0].ref;
   const StjMCParticleToFourVec& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjMCTree */
static int G__BaseDict_297_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjMCTree((StjMCParticleListReader*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StjMCTree((StjMCParticleListReader*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCTree);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_297_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjMCTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_297_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_297_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjMCTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_297_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjMCTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_297_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjMCTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_297_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_297_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_297_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjMCTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_297_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjMCTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_297_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjMCTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjMCTree(*(StjMCTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjMCTree);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjMCTree G__TStjMCTree;
static int G__BaseDict_297_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjMCTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjMCTree*) (soff+(sizeof(StjMCTree)*i)))->~G__TStjMCTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjMCTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjMCTree*) (soff))->~G__TStjMCTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_297_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjMCTree* dest = (StjMCTree*) G__getstructoffset();
   *dest = *(StjMCTree*) libp->para[0].ref;
   const StjMCTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTrack */
static int G__BaseDict_298_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_298_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_298_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_298_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_298_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_298_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_298_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_298_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_298_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__BaseDict_298_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrack *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrack[n];
     } else {
       p = new((void*) gvp) StjTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrack;
     } else {
       p = new((void*) gvp) StjTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrack);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_298_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTrack(*(StjTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrack);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTrack G__TStjTrack;
static int G__BaseDict_298_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTrack*) (soff+(sizeof(StjTrack)*i)))->~G__TStjTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTrack*) (soff))->~G__TStjTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_298_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrack* dest = (StjTrack*) G__getstructoffset();
   *dest = *(StjTrack*) libp->para[0].ref;
   const StjTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<StjTrack,allocator<StjTrack> > */
static int G__BaseDict_300_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjTrack& obj = ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->at((vector<StjTrack,allocator<StjTrack> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjTrack,allocator<StjTrack> >::iterator* pobj;
         vector<StjTrack,allocator<StjTrack> >::iterator xobj = ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->begin();
         pobj = new vector<StjTrack,allocator<StjTrack> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjTrack,allocator<StjTrack> >::iterator* pobj;
         vector<StjTrack,allocator<StjTrack> >::iterator xobj = ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->end();
         pobj = new vector<StjTrack,allocator<StjTrack> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjTrack,allocator<StjTrack> >::reverse_iterator* pobj;
         vector<StjTrack,allocator<StjTrack> >::reverse_iterator xobj = ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->rbegin();
         pobj = new vector<StjTrack,allocator<StjTrack> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjTrack,allocator<StjTrack> >::reverse_iterator* pobj;
         vector<StjTrack,allocator<StjTrack> >::reverse_iterator xobj = ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->rend();
         pobj = new vector<StjTrack,allocator<StjTrack> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->resize((vector<StjTrack,allocator<StjTrack> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->resize((vector<StjTrack,allocator<StjTrack> >::size_type) G__int(libp->para[0]), *((StjTrack*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjTrack& obj = ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->operator[]((vector<StjTrack,allocator<StjTrack> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjTrack,allocator<StjTrack> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjTrack,allocator<StjTrack> >[n];
     } else {
       p = new((void*) gvp) vector<StjTrack,allocator<StjTrack> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjTrack,allocator<StjTrack> >;
     } else {
       p = new((void*) gvp) vector<StjTrack,allocator<StjTrack> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjTrack,allocator<StjTrack> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjTrack,allocator<StjTrack> >((vector<StjTrack,allocator<StjTrack> >::size_type) G__int(libp->para[0]), *(StjTrack*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<StjTrack,allocator<StjTrack> >((vector<StjTrack,allocator<StjTrack> >::size_type) G__int(libp->para[0]), *(StjTrack*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<StjTrack,allocator<StjTrack> >((vector<StjTrack,allocator<StjTrack> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<StjTrack,allocator<StjTrack> >((vector<StjTrack,allocator<StjTrack> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjTrack,allocator<StjTrack> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<StjTrack,allocator<StjTrack> >(*(vector<StjTrack,allocator<StjTrack> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<StjTrack,allocator<StjTrack> >(*(vector<StjTrack,allocator<StjTrack> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<StjTrack,allocator<StjTrack> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<StjTrack,allocator<StjTrack> >(*((vector<StjTrack,allocator<StjTrack> >::const_iterator*) G__int(libp->para[0])), *((vector<StjTrack,allocator<StjTrack> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<StjTrack,allocator<StjTrack> >(*((vector<StjTrack,allocator<StjTrack> >::const_iterator*) G__int(libp->para[0])), *((vector<StjTrack,allocator<StjTrack> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StjTrack,allocator<StjTrack> >& obj = ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->operator=(*(vector<StjTrack,allocator<StjTrack> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->reserve((vector<StjTrack,allocator<StjTrack> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjTrack& obj = ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StjTrack& obj = ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->push_back(*(StjTrack*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->swap(*(vector<StjTrack,allocator<StjTrack> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<StjTrack,allocator<StjTrack> >::iterator* pobj;
         vector<StjTrack,allocator<StjTrack> >::iterator xobj = ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->insert(*((vector<StjTrack,allocator<StjTrack> >::iterator*) G__int(libp->para[0])), *(StjTrack*) libp->para[1].ref);
         pobj = new vector<StjTrack,allocator<StjTrack> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->insert(*((vector<StjTrack,allocator<StjTrack> >::iterator*) G__int(libp->para[0])), *((vector<StjTrack,allocator<StjTrack> >::const_iterator*) G__int(libp->para[1]))
, *((vector<StjTrack,allocator<StjTrack> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->insert(*((vector<StjTrack,allocator<StjTrack> >::iterator*) G__int(libp->para[0])), (vector<StjTrack,allocator<StjTrack> >::size_type) G__int(libp->para[1])
, *(StjTrack*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->erase(*((vector<StjTrack,allocator<StjTrack> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->erase(*((vector<StjTrack,allocator<StjTrack> >::iterator*) G__int(libp->para[0])), *((vector<StjTrack,allocator<StjTrack> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_300_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<StjTrack,allocator<StjTrack> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<StjTrack,allocator<StjTrack> > G__TvectorlEStjTrackcOallocatorlEStjTrackgRsPgR;
static int G__BaseDict_300_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<StjTrack,allocator<StjTrack> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<StjTrack,allocator<StjTrack> >*) (soff+(sizeof(vector<StjTrack,allocator<StjTrack> >)*i)))->~G__TvectorlEStjTrackcOallocatorlEStjTrackgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<StjTrack,allocator<StjTrack> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<StjTrack,allocator<StjTrack> >*) (soff))->~G__TvectorlEStjTrackcOallocatorlEStjTrackgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTPC */
static int G__BaseDict_303_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTPC*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_303_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjTrackList* pobj;
         StjTrackList xobj = ((StjTPC*) G__getstructoffset())->getTrackList();
         pobj = new StjTrackList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_303_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTPC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_303_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTPC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_303_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTPC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_303_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTPC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_303_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTPC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_303_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTPC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_303_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTPC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_303_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTPC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_303_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTPC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTPC G__TStjTPC;
static int G__BaseDict_303_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTPC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTPC*) (soff+(sizeof(StjTPC)*i)))->~G__TStjTPC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTPC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTPC*) (soff))->~G__TStjTPC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_303_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTPC* dest = (StjTPC*) G__getstructoffset();
   *dest = *(StjTPC*) libp->para[0].ref;
   const StjTPC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTPCNull */
static int G__BaseDict_304_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTPCNull* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTPCNull[n];
     } else {
       p = new((void*) gvp) StjTPCNull[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTPCNull;
     } else {
       p = new((void*) gvp) StjTPCNull;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTPCNull);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_304_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTPCNull::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_304_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTPCNull::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_304_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTPCNull::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_304_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTPCNull::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_304_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTPCNull*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_304_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTPCNull::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_304_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTPCNull::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_304_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTPCNull::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_304_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTPCNull::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_304_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTPCNull* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTPCNull(*(StjTPCNull*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTPCNull);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTPCNull G__TStjTPCNull;
static int G__BaseDict_304_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTPCNull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTPCNull*) (soff+(sizeof(StjTPCNull)*i)))->~G__TStjTPCNull();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTPCNull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTPCNull*) (soff))->~G__TStjTPCNull();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_304_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTPCNull* dest = (StjTPCNull*) G__getstructoffset();
   *dest = *(StjTPCNull*) libp->para[0].ref;
   const StjTPCNull& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTPCTree */
static int G__BaseDict_306_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTPCTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjTPCTree((StjTrackListReader*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StjTPCTree((StjTrackListReader*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTPCTree);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_306_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTPCTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_306_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTPCTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_306_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTPCTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_306_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTPCTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_306_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTPCTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_306_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTPCTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_306_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTPCTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_306_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTPCTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_306_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTPCTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_306_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTPCTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTPCTree(*(StjTPCTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTPCTree);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTPCTree G__TStjTPCTree;
static int G__BaseDict_306_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTPCTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTPCTree*) (soff+(sizeof(StjTPCTree)*i)))->~G__TStjTPCTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTPCTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTPCTree*) (soff))->~G__TStjTPCTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_306_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTPCTree* dest = (StjTPCTree*) G__getstructoffset();
   *dest = *(StjTPCTree*) libp->para[0].ref;
   const StjTPCTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTPCTxt */
static int G__BaseDict_307_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTPCTxt* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjTPCTxt((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StjTPCTxt((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTPCTxt);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_307_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTPCTxt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_307_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTPCTxt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_307_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTPCTxt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_307_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTPCTxt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_307_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTPCTxt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_307_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTPCTxt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_307_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTPCTxt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_307_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTPCTxt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_307_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTPCTxt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTPCTxt G__TStjTPCTxt;
static int G__BaseDict_307_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTPCTxt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTPCTxt*) (soff+(sizeof(StjTPCTxt)*i)))->~G__TStjTPCTxt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTPCTxt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTPCTxt*) (soff))->~G__TStjTPCTxt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyCorrectionForTracks */
static int G__BaseDict_308_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCorrectionForTracks* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyCorrectionForTracks[n];
     } else {
       p = new((void*) gvp) StjTowerEnergyCorrectionForTracks[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyCorrectionForTracks;
     } else {
       p = new((void*) gvp) StjTowerEnergyCorrectionForTracks;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCorrectionForTracks);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_308_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjTowerEnergyList* pobj;
         StjTowerEnergyList xobj = ((StjTowerEnergyCorrectionForTracks*) G__getstructoffset())->operator()(*(StjTowerEnergyList*) libp->para[0].ref, *(StjTrackList*) libp->para[1].ref);
         pobj = new StjTowerEnergyList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_308_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjTowerEnergyList* pobj;
         StjTowerEnergyList xobj = ((StjTowerEnergyCorrectionForTracks*) G__getstructoffset())->Do(*(StjTowerEnergyList*) libp->para[0].ref, *(StjTrackList*) libp->para[1].ref);
         pobj = new StjTowerEnergyList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_308_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyCorrectionForTracks::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_308_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCorrectionForTracks::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_308_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyCorrectionForTracks::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_308_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyCorrectionForTracks::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_308_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyCorrectionForTracks*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_308_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCorrectionForTracks::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_308_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCorrectionForTracks::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_308_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCorrectionForTracks::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_308_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCorrectionForTracks::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_308_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergyCorrectionForTracks* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergyCorrectionForTracks(*(StjTowerEnergyCorrectionForTracks*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCorrectionForTracks);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyCorrectionForTracks G__TStjTowerEnergyCorrectionForTracks;
static int G__BaseDict_308_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyCorrectionForTracks*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyCorrectionForTracks*) (soff+(sizeof(StjTowerEnergyCorrectionForTracks)*i)))->~G__TStjTowerEnergyCorrectionForTracks();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyCorrectionForTracks*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyCorrectionForTracks*) (soff))->~G__TStjTowerEnergyCorrectionForTracks();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_308_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCorrectionForTracks* dest = (StjTowerEnergyCorrectionForTracks*) G__getstructoffset();
   *dest = *(StjTowerEnergyCorrectionForTracks*) libp->para[0].ref;
   const StjTowerEnergyCorrectionForTracks& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyCut */
static int G__BaseDict_309_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StjTowerEnergyCut*) G__getstructoffset())->operator()(*(StjTowerEnergy*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_309_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_309_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_309_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_309_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_309_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_309_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_309_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_309_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_309_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyCut G__TStjTowerEnergyCut;
static int G__BaseDict_309_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyCut*) (soff+(sizeof(StjTowerEnergyCut)*i)))->~G__TStjTowerEnergyCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyCut*) (soff))->~G__TStjTowerEnergyCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_309_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCut* dest = (StjTowerEnergyCut*) G__getstructoffset();
   *dest = *(StjTowerEnergyCut*) libp->para[0].ref;
   const StjTowerEnergyCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyCut2003BemcTower */
static int G__BaseDict_310_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCut2003BemcTower* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyCut2003BemcTower[n];
     } else {
       p = new((void*) gvp) StjTowerEnergyCut2003BemcTower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyCut2003BemcTower;
     } else {
       p = new((void*) gvp) StjTowerEnergyCut2003BemcTower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut2003BemcTower);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_310_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyCut2003BemcTower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_310_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCut2003BemcTower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_310_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyCut2003BemcTower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_310_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyCut2003BemcTower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_310_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyCut2003BemcTower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_310_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCut2003BemcTower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_310_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCut2003BemcTower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_310_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCut2003BemcTower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_310_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCut2003BemcTower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_310_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergyCut2003BemcTower* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergyCut2003BemcTower(*(StjTowerEnergyCut2003BemcTower*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut2003BemcTower);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyCut2003BemcTower G__TStjTowerEnergyCut2003BemcTower;
static int G__BaseDict_310_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyCut2003BemcTower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyCut2003BemcTower*) (soff+(sizeof(StjTowerEnergyCut2003BemcTower)*i)))->~G__TStjTowerEnergyCut2003BemcTower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyCut2003BemcTower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyCut2003BemcTower*) (soff))->~G__TStjTowerEnergyCut2003BemcTower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_310_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCut2003BemcTower* dest = (StjTowerEnergyCut2003BemcTower*) G__getstructoffset();
   *dest = *(StjTowerEnergyCut2003BemcTower*) libp->para[0].ref;
   const StjTowerEnergyCut2003BemcTower& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyCutAdc */
static int G__BaseDict_311_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCutAdc* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyCutAdc((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjTowerEnergyCutAdc((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyCutAdc((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTowerEnergyCutAdc((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyCutAdc[n];
       } else {
         p = new((void*) gvp) StjTowerEnergyCutAdc[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyCutAdc;
       } else {
         p = new((void*) gvp) StjTowerEnergyCutAdc;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutAdc);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_311_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyCutAdc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_311_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutAdc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_311_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyCutAdc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_311_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyCutAdc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_311_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyCutAdc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_311_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutAdc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_311_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCutAdc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_311_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutAdc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_311_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCutAdc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_311_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergyCutAdc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergyCutAdc(*(StjTowerEnergyCutAdc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutAdc);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyCutAdc G__TStjTowerEnergyCutAdc;
static int G__BaseDict_311_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyCutAdc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyCutAdc*) (soff+(sizeof(StjTowerEnergyCutAdc)*i)))->~G__TStjTowerEnergyCutAdc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyCutAdc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyCutAdc*) (soff))->~G__TStjTowerEnergyCutAdc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_311_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCutAdc* dest = (StjTowerEnergyCutAdc*) G__getstructoffset();
   *dest = *(StjTowerEnergyCutAdc*) libp->para[0].ref;
   const StjTowerEnergyCutAdc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyCutBemcStatus */
static int G__BaseDict_312_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCutBemcStatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyCutBemcStatus((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTowerEnergyCutBemcStatus((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyCutBemcStatus[n];
       } else {
         p = new((void*) gvp) StjTowerEnergyCutBemcStatus[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyCutBemcStatus;
       } else {
         p = new((void*) gvp) StjTowerEnergyCutBemcStatus;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcStatus);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_312_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyCutBemcStatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_312_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutBemcStatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_312_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyCutBemcStatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_312_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyCutBemcStatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_312_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyCutBemcStatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_312_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutBemcStatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_312_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCutBemcStatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_312_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutBemcStatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_312_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCutBemcStatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_312_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergyCutBemcStatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergyCutBemcStatus(*(StjTowerEnergyCutBemcStatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcStatus);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyCutBemcStatus G__TStjTowerEnergyCutBemcStatus;
static int G__BaseDict_312_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyCutBemcStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyCutBemcStatus*) (soff+(sizeof(StjTowerEnergyCutBemcStatus)*i)))->~G__TStjTowerEnergyCutBemcStatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyCutBemcStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyCutBemcStatus*) (soff))->~G__TStjTowerEnergyCutBemcStatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_312_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCutBemcStatus* dest = (StjTowerEnergyCutBemcStatus*) G__getstructoffset();
   *dest = *(StjTowerEnergyCutBemcStatus*) libp->para[0].ref;
   const StjTowerEnergyCutBemcStatus& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyCutBemcWestOnly */
static int G__BaseDict_313_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCutBemcWestOnly* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyCutBemcWestOnly[n];
     } else {
       p = new((void*) gvp) StjTowerEnergyCutBemcWestOnly[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyCutBemcWestOnly;
     } else {
       p = new((void*) gvp) StjTowerEnergyCutBemcWestOnly;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcWestOnly);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_313_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyCutBemcWestOnly::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_313_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutBemcWestOnly::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_313_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyCutBemcWestOnly::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_313_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyCutBemcWestOnly::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_313_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyCutBemcWestOnly*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_313_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutBemcWestOnly::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_313_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCutBemcWestOnly::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_313_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutBemcWestOnly::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_313_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCutBemcWestOnly::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_313_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergyCutBemcWestOnly* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergyCutBemcWestOnly(*(StjTowerEnergyCutBemcWestOnly*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcWestOnly);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyCutBemcWestOnly G__TStjTowerEnergyCutBemcWestOnly;
static int G__BaseDict_313_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyCutBemcWestOnly*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyCutBemcWestOnly*) (soff+(sizeof(StjTowerEnergyCutBemcWestOnly)*i)))->~G__TStjTowerEnergyCutBemcWestOnly();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyCutBemcWestOnly*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyCutBemcWestOnly*) (soff))->~G__TStjTowerEnergyCutBemcWestOnly();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_313_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCutBemcWestOnly* dest = (StjTowerEnergyCutBemcWestOnly*) G__getstructoffset();
   *dest = *(StjTowerEnergyCutBemcWestOnly*) libp->para[0].ref;
   const StjTowerEnergyCutBemcWestOnly& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyCutEnergy */
static int G__BaseDict_314_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCutEnergy* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyCutEnergy((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjTowerEnergyCutEnergy((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyCutEnergy((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTowerEnergyCutEnergy((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyCutEnergy[n];
       } else {
         p = new((void*) gvp) StjTowerEnergyCutEnergy[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyCutEnergy;
       } else {
         p = new((void*) gvp) StjTowerEnergyCutEnergy;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEnergy);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_314_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyCutEnergy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_314_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutEnergy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_314_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyCutEnergy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_314_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyCutEnergy::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_314_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyCutEnergy*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_314_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutEnergy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_314_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCutEnergy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_314_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutEnergy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_314_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCutEnergy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_314_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergyCutEnergy* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergyCutEnergy(*(StjTowerEnergyCutEnergy*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEnergy);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyCutEnergy G__TStjTowerEnergyCutEnergy;
static int G__BaseDict_314_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyCutEnergy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyCutEnergy*) (soff+(sizeof(StjTowerEnergyCutEnergy)*i)))->~G__TStjTowerEnergyCutEnergy();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyCutEnergy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyCutEnergy*) (soff))->~G__TStjTowerEnergyCutEnergy();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_314_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCutEnergy* dest = (StjTowerEnergyCutEnergy*) G__getstructoffset();
   *dest = *(StjTowerEnergyCutEnergy*) libp->para[0].ref;
   const StjTowerEnergyCutEnergy& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyCutEt */
static int G__BaseDict_363_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCutEt* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyCutEt((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjTowerEnergyCutEt((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyCutEt((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTowerEnergyCutEt((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyCutEt[n];
       } else {
         p = new((void*) gvp) StjTowerEnergyCutEt[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyCutEt;
       } else {
         p = new((void*) gvp) StjTowerEnergyCutEt;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEt);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyCutEt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutEt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyCutEt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyCutEt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyCutEt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutEt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCutEt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyCutEt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyCutEt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_363_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergyCutEt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergyCutEt(*(StjTowerEnergyCutEt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEt);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyCutEt G__TStjTowerEnergyCutEt;
static int G__BaseDict_363_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyCutEt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyCutEt*) (soff+(sizeof(StjTowerEnergyCutEt)*i)))->~G__TStjTowerEnergyCutEt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyCutEt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyCutEt*) (soff))->~G__TStjTowerEnergyCutEt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_363_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyCutEt* dest = (StjTowerEnergyCutEt*) G__getstructoffset();
   *dest = *(StjTowerEnergyCutEt*) libp->para[0].ref;
   const StjTowerEnergyCutEt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyListCut */
static int G__BaseDict_364_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyListCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyListCut[n];
     } else {
       p = new((void*) gvp) StjTowerEnergyListCut[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyListCut;
     } else {
       p = new((void*) gvp) StjTowerEnergyListCut;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListCut);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjTowerEnergyList* pobj;
         StjTowerEnergyList xobj = ((StjTowerEnergyListCut*) G__getstructoffset())->operator()(*(StjTowerEnergyList*) libp->para[0].ref);
         pobj = new StjTowerEnergyList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyListCut*) G__getstructoffset())->addCut((StjTowerEnergyCut*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjTowerEnergyListCut::CutList* pobj;
         StjTowerEnergyListCut::CutList xobj = ((StjTowerEnergyListCut*) G__getstructoffset())->getCutList();
         pobj = new StjTowerEnergyListCut::CutList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyListCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyListCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyListCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyListCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyListCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyListCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyListCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyListCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyListCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_364_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergyListCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergyListCut(*(StjTowerEnergyListCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListCut);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyListCut G__TStjTowerEnergyListCut;
static int G__BaseDict_364_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyListCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyListCut*) (soff+(sizeof(StjTowerEnergyListCut)*i)))->~G__TStjTowerEnergyListCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyListCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyListCut*) (soff))->~G__TStjTowerEnergyListCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_364_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyListCut* dest = (StjTowerEnergyListCut*) G__getstructoffset();
   *dest = *(StjTowerEnergyListCut*) libp->para[0].ref;
   const StjTowerEnergyListCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyVariation */
static int G__BaseDict_369_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjTowerEnergy* pobj;
         StjTowerEnergy xobj = ((StjTowerEnergyVariation*) G__getstructoffset())->operator()(*(StjTowerEnergy*) libp->para[0].ref);
         pobj = new StjTowerEnergy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_369_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyVariation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_369_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyVariation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_369_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyVariation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_369_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyVariation::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_369_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyVariation*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_369_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyVariation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_369_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyVariation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_369_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyVariation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_369_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyVariation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyVariation G__TStjTowerEnergyVariation;
static int G__BaseDict_369_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyVariation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyVariation*) (soff+(sizeof(StjTowerEnergyVariation)*i)))->~G__TStjTowerEnergyVariation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyVariation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyVariation*) (soff))->~G__TStjTowerEnergyVariation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_369_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyVariation* dest = (StjTowerEnergyVariation*) G__getstructoffset();
   *dest = *(StjTowerEnergyVariation*) libp->para[0].ref;
   const StjTowerEnergyVariation& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyListVariation */
static int G__BaseDict_370_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyListVariation* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyListVariation[n];
     } else {
       p = new((void*) gvp) StjTowerEnergyListVariation[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyListVariation;
     } else {
       p = new((void*) gvp) StjTowerEnergyListVariation;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListVariation);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_370_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjTowerEnergyList* pobj;
         StjTowerEnergyList xobj = ((StjTowerEnergyListVariation*) G__getstructoffset())->operator()(*(StjTowerEnergyList*) libp->para[0].ref);
         pobj = new StjTowerEnergyList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_370_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyListVariation*) G__getstructoffset())->addVariation((StjTowerEnergyVariation*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_370_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjTowerEnergyListVariation::VarList* pobj;
         StjTowerEnergyListVariation::VarList xobj = ((StjTowerEnergyListVariation*) G__getstructoffset())->getVariationList();
         pobj = new StjTowerEnergyListVariation::VarList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_370_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyListVariation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_370_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyListVariation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_370_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyListVariation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_370_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyListVariation::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_370_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyListVariation*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_370_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyListVariation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_370_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyListVariation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_370_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyListVariation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_370_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyListVariation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_370_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergyListVariation* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergyListVariation(*(StjTowerEnergyListVariation*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListVariation);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyListVariation G__TStjTowerEnergyListVariation;
static int G__BaseDict_370_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyListVariation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyListVariation*) (soff+(sizeof(StjTowerEnergyListVariation)*i)))->~G__TStjTowerEnergyListVariation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyListVariation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyListVariation*) (soff))->~G__TStjTowerEnergyListVariation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_370_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyListVariation* dest = (StjTowerEnergyListVariation*) G__getstructoffset();
   *dest = *(StjTowerEnergyListVariation*) libp->para[0].ref;
   const StjTowerEnergyListVariation& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyPrint */
static int G__BaseDict_375_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyPrint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyPrint[n];
     } else {
       p = new((void*) gvp) StjTowerEnergyPrint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyPrint;
     } else {
       p = new((void*) gvp) StjTowerEnergyPrint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyPrint);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyPrint*) G__getstructoffset())->operator()(*(StjTowerEnergyList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyPrint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyPrint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyPrint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyPrint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyPrint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyPrint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyPrint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyPrint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyPrint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_375_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergyPrint* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergyPrint(*(StjTowerEnergyPrint*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyPrint);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyPrint G__TStjTowerEnergyPrint;
static int G__BaseDict_375_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyPrint*) (soff+(sizeof(StjTowerEnergyPrint)*i)))->~G__TStjTowerEnergyPrint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyPrint*) (soff))->~G__TStjTowerEnergyPrint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_375_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyPrint* dest = (StjTowerEnergyPrint*) G__getstructoffset();
   *dest = *(StjTowerEnergyPrint*) libp->para[0].ref;
   const StjTowerEnergyPrint& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyToTLorentzVector */
static int G__BaseDict_381_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyToTLorentzVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyToTLorentzVector((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTowerEnergyToTLorentzVector((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyToTLorentzVector[n];
       } else {
         p = new((void*) gvp) StjTowerEnergyToTLorentzVector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyToTLorentzVector;
       } else {
         p = new((void*) gvp) StjTowerEnergyToTLorentzVector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToTLorentzVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((StjTowerEnergyToTLorentzVector*) G__getstructoffset())->operator()(*(StjTowerEnergy*) libp->para[0].ref);
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyToTLorentzVector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyToTLorentzVector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyToTLorentzVector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyToTLorentzVector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyToTLorentzVector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyToTLorentzVector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyToTLorentzVector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyToTLorentzVector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyToTLorentzVector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_381_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergyToTLorentzVector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergyToTLorentzVector(*(StjTowerEnergyToTLorentzVector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToTLorentzVector);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyToTLorentzVector G__TStjTowerEnergyToTLorentzVector;
static int G__BaseDict_381_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyToTLorentzVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyToTLorentzVector*) (soff+(sizeof(StjTowerEnergyToTLorentzVector)*i)))->~G__TStjTowerEnergyToTLorentzVector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyToTLorentzVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyToTLorentzVector*) (soff))->~G__TStjTowerEnergyToTLorentzVector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_381_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyToTLorentzVector* dest = (StjTowerEnergyToTLorentzVector*) G__getstructoffset();
   *dest = *(StjTowerEnergyToTLorentzVector*) libp->para[0].ref;
   const StjTowerEnergyToTLorentzVector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyToFourVec */
static int G__BaseDict_382_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyToFourVec* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyToFourVec((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTowerEnergyToFourVec((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyToFourVec[n];
       } else {
         p = new((void*) gvp) StjTowerEnergyToFourVec[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyToFourVec;
       } else {
         p = new((void*) gvp) StjTowerEnergyToFourVec;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToFourVec);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjFourVec* pobj;
         StjFourVec xobj = ((StjTowerEnergyToFourVec*) G__getstructoffset())->operator()(*(StjTowerEnergy*) libp->para[0].ref);
         pobj = new StjFourVec(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyToFourVec::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyToFourVec::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyToFourVec::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyToFourVec::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyToFourVec*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyToFourVec::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyToFourVec::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyToFourVec::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyToFourVec::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_382_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergyToFourVec* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergyToFourVec(*(StjTowerEnergyToFourVec*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToFourVec);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyToFourVec G__TStjTowerEnergyToFourVec;
static int G__BaseDict_382_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyToFourVec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyToFourVec*) (soff+(sizeof(StjTowerEnergyToFourVec)*i)))->~G__TStjTowerEnergyToFourVec();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyToFourVec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyToFourVec*) (soff))->~G__TStjTowerEnergyToFourVec();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTowerEnergyVariationEnergy */
static int G__BaseDict_383_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyVariationEnergy* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTowerEnergyVariationEnergy((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTowerEnergyVariationEnergy((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyVariationEnergy[n];
       } else {
         p = new((void*) gvp) StjTowerEnergyVariationEnergy[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTowerEnergyVariationEnergy;
       } else {
         p = new((void*) gvp) StjTowerEnergyVariationEnergy;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariationEnergy);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTowerEnergyVariationEnergy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyVariationEnergy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTowerEnergyVariationEnergy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTowerEnergyVariationEnergy::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTowerEnergyVariationEnergy*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyVariationEnergy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyVariationEnergy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTowerEnergyVariationEnergy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTowerEnergyVariationEnergy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_383_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTowerEnergyVariationEnergy* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTowerEnergyVariationEnergy(*(StjTowerEnergyVariationEnergy*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariationEnergy);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTowerEnergyVariationEnergy G__TStjTowerEnergyVariationEnergy;
static int G__BaseDict_383_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTowerEnergyVariationEnergy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTowerEnergyVariationEnergy*) (soff+(sizeof(StjTowerEnergyVariationEnergy)*i)))->~G__TStjTowerEnergyVariationEnergy();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTowerEnergyVariationEnergy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTowerEnergyVariationEnergy*) (soff))->~G__TStjTowerEnergyVariationEnergy();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_383_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTowerEnergyVariationEnergy* dest = (StjTowerEnergyVariationEnergy*) G__getstructoffset();
   *dest = *(StjTowerEnergyVariationEnergy*) libp->para[0].ref;
   const StjTowerEnergyVariationEnergy& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTrackCut */
static int G__BaseDict_384_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StjTrackCut*) G__getstructoffset())->operator()(*(StjTrack*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTrackCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTrackCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTrackCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTrackCut G__TStjTrackCut;
static int G__BaseDict_384_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTrackCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTrackCut*) (soff+(sizeof(StjTrackCut)*i)))->~G__TStjTrackCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTrackCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTrackCut*) (soff))->~G__TStjTrackCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_384_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackCut* dest = (StjTrackCut*) G__getstructoffset();
   *dest = *(StjTrackCut*) libp->para[0].ref;
   const StjTrackCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTrackCutDca */
static int G__BaseDict_385_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackCutDca* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackCutDca((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjTrackCutDca((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackCutDca((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTrackCutDca((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackCutDca[n];
       } else {
         p = new((void*) gvp) StjTrackCutDca[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackCutDca;
       } else {
         p = new((void*) gvp) StjTrackCutDca;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDca);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTrackCutDca::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutDca::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTrackCutDca::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTrackCutDca::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackCutDca*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutDca::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCutDca::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutDca::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCutDca::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_385_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTrackCutDca* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTrackCutDca(*(StjTrackCutDca*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDca);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTrackCutDca G__TStjTrackCutDca;
static int G__BaseDict_385_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTrackCutDca*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTrackCutDca*) (soff+(sizeof(StjTrackCutDca)*i)))->~G__TStjTrackCutDca();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTrackCutDca*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTrackCutDca*) (soff))->~G__TStjTrackCutDca();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_385_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackCutDca* dest = (StjTrackCutDca*) G__getstructoffset();
   *dest = *(StjTrackCutDca*) libp->para[0].ref;
   const StjTrackCutDca& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTrackCutDcaPtDependent */
static int G__BaseDict_386_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackCutDcaPtDependent* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackCutDcaPtDependent(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) StjTrackCutDcaPtDependent(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackCutDcaPtDependent(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) StjTrackCutDcaPtDependent(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackCutDcaPtDependent((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjTrackCutDcaPtDependent((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackCutDcaPtDependent((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTrackCutDcaPtDependent((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackCutDcaPtDependent[n];
       } else {
         p = new((void*) gvp) StjTrackCutDcaPtDependent[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackCutDcaPtDependent;
       } else {
         p = new((void*) gvp) StjTrackCutDcaPtDependent;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDcaPtDependent);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTrackCutDcaPtDependent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutDcaPtDependent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTrackCutDcaPtDependent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTrackCutDcaPtDependent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackCutDcaPtDependent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutDcaPtDependent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCutDcaPtDependent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutDcaPtDependent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCutDcaPtDependent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_386_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTrackCutDcaPtDependent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTrackCutDcaPtDependent(*(StjTrackCutDcaPtDependent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDcaPtDependent);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTrackCutDcaPtDependent G__TStjTrackCutDcaPtDependent;
static int G__BaseDict_386_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTrackCutDcaPtDependent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTrackCutDcaPtDependent*) (soff+(sizeof(StjTrackCutDcaPtDependent)*i)))->~G__TStjTrackCutDcaPtDependent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTrackCutDcaPtDependent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTrackCutDcaPtDependent*) (soff))->~G__TStjTrackCutDcaPtDependent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_386_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackCutDcaPtDependent* dest = (StjTrackCutDcaPtDependent*) G__getstructoffset();
   *dest = *(StjTrackCutDcaPtDependent*) libp->para[0].ref;
   const StjTrackCutDcaPtDependent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTrackCutEta */
static int G__BaseDict_387_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackCutEta* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackCutEta((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StjTrackCutEta((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackCutEta((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTrackCutEta((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackCutEta[n];
       } else {
         p = new((void*) gvp) StjTrackCutEta[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackCutEta;
       } else {
         p = new((void*) gvp) StjTrackCutEta;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutEta);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTrackCutEta::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutEta::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTrackCutEta::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTrackCutEta::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackCutEta*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutEta::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCutEta::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutEta::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCutEta::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_387_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTrackCutEta* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTrackCutEta(*(StjTrackCutEta*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutEta);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTrackCutEta G__TStjTrackCutEta;
static int G__BaseDict_387_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTrackCutEta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTrackCutEta*) (soff+(sizeof(StjTrackCutEta)*i)))->~G__TStjTrackCutEta();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTrackCutEta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTrackCutEta*) (soff))->~G__TStjTrackCutEta();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_387_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackCutEta* dest = (StjTrackCutEta*) G__getstructoffset();
   *dest = *(StjTrackCutEta*) libp->para[0].ref;
   const StjTrackCutEta& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTrackCutFlag */
static int G__BaseDict_388_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackCutFlag* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackCutFlag((Short_t) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) StjTrackCutFlag((Short_t) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackCutFlag((Short_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTrackCutFlag((Short_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackCutFlag[n];
       } else {
         p = new((void*) gvp) StjTrackCutFlag[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackCutFlag;
       } else {
         p = new((void*) gvp) StjTrackCutFlag;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutFlag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTrackCutFlag::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutFlag::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTrackCutFlag::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTrackCutFlag::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackCutFlag*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutFlag::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCutFlag::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutFlag::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCutFlag::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_388_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTrackCutFlag* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTrackCutFlag(*(StjTrackCutFlag*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutFlag);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTrackCutFlag G__TStjTrackCutFlag;
static int G__BaseDict_388_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTrackCutFlag*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTrackCutFlag*) (soff+(sizeof(StjTrackCutFlag)*i)))->~G__TStjTrackCutFlag();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTrackCutFlag*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTrackCutFlag*) (soff))->~G__TStjTrackCutFlag();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_388_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackCutFlag* dest = (StjTrackCutFlag*) G__getstructoffset();
   *dest = *(StjTrackCutFlag*) libp->para[0].ref;
   const StjTrackCutFlag& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTrackCutNHits */
static int G__BaseDict_389_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackCutNHits* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackCutNHits((UShort_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) StjTrackCutNHits((UShort_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackCutNHits((UShort_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTrackCutNHits((UShort_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackCutNHits[n];
       } else {
         p = new((void*) gvp) StjTrackCutNHits[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackCutNHits;
       } else {
         p = new((void*) gvp) StjTrackCutNHits;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutNHits);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTrackCutNHits::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutNHits::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTrackCutNHits::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTrackCutNHits::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackCutNHits*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutNHits::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCutNHits::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutNHits::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCutNHits::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_389_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTrackCutNHits* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTrackCutNHits(*(StjTrackCutNHits*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutNHits);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTrackCutNHits G__TStjTrackCutNHits;
static int G__BaseDict_389_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTrackCutNHits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTrackCutNHits*) (soff+(sizeof(StjTrackCutNHits)*i)))->~G__TStjTrackCutNHits();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTrackCutNHits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTrackCutNHits*) (soff))->~G__TStjTrackCutNHits();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_389_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackCutNHits* dest = (StjTrackCutNHits*) G__getstructoffset();
   *dest = *(StjTrackCutNHits*) libp->para[0].ref;
   const StjTrackCutNHits& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTrackCutPossibleHitRatio */
static int G__BaseDict_390_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackCutPossibleHitRatio* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackCutPossibleHitRatio((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTrackCutPossibleHitRatio((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackCutPossibleHitRatio[n];
       } else {
         p = new((void*) gvp) StjTrackCutPossibleHitRatio[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackCutPossibleHitRatio;
       } else {
         p = new((void*) gvp) StjTrackCutPossibleHitRatio;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutPossibleHitRatio);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTrackCutPossibleHitRatio::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutPossibleHitRatio::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTrackCutPossibleHitRatio::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTrackCutPossibleHitRatio::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackCutPossibleHitRatio*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutPossibleHitRatio::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCutPossibleHitRatio::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackCutPossibleHitRatio::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackCutPossibleHitRatio::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_390_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTrackCutPossibleHitRatio* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTrackCutPossibleHitRatio(*(StjTrackCutPossibleHitRatio*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutPossibleHitRatio);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTrackCutPossibleHitRatio G__TStjTrackCutPossibleHitRatio;
static int G__BaseDict_390_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTrackCutPossibleHitRatio*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTrackCutPossibleHitRatio*) (soff+(sizeof(StjTrackCutPossibleHitRatio)*i)))->~G__TStjTrackCutPossibleHitRatio();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTrackCutPossibleHitRatio*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTrackCutPossibleHitRatio*) (soff))->~G__TStjTrackCutPossibleHitRatio();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_390_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackCutPossibleHitRatio* dest = (StjTrackCutPossibleHitRatio*) G__getstructoffset();
   *dest = *(StjTrackCutPossibleHitRatio*) libp->para[0].ref;
   const StjTrackCutPossibleHitRatio& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTrackListCut */
static int G__BaseDict_391_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackListCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackListCut[n];
     } else {
       p = new((void*) gvp) StjTrackListCut[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackListCut;
     } else {
       p = new((void*) gvp) StjTrackListCut;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackListCut);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjTrackList* pobj;
         StjTrackList xobj = ((StjTrackListCut*) G__getstructoffset())->operator()(*(StjTrackList*) libp->para[0].ref);
         pobj = new StjTrackList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackListCut*) G__getstructoffset())->addCut((StjTrackCut*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjTrackListCut::CutList* pobj;
         StjTrackListCut::CutList xobj = ((StjTrackListCut*) G__getstructoffset())->getCutList();
         pobj = new StjTrackListCut::CutList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTrackListCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackListCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTrackListCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTrackListCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackListCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackListCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackListCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackListCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackListCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_391_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTrackListCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTrackListCut(*(StjTrackListCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackListCut);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTrackListCut G__TStjTrackListCut;
static int G__BaseDict_391_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTrackListCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTrackListCut*) (soff+(sizeof(StjTrackListCut)*i)))->~G__TStjTrackListCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTrackListCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTrackListCut*) (soff))->~G__TStjTrackListCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_391_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackListCut* dest = (StjTrackListCut*) G__getstructoffset();
   *dest = *(StjTrackListCut*) libp->para[0].ref;
   const StjTrackListCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTrackPrint */
static int G__BaseDict_396_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackPrint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackPrint[n];
     } else {
       p = new((void*) gvp) StjTrackPrint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackPrint;
     } else {
       p = new((void*) gvp) StjTrackPrint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackPrint);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_396_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackPrint*) G__getstructoffset())->operator()(*(StjTrackList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_396_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTrackPrint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_396_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackPrint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_396_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTrackPrint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_396_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTrackPrint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_396_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackPrint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_396_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackPrint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_396_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackPrint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_396_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackPrint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_396_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackPrint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_396_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTrackPrint* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTrackPrint(*(StjTrackPrint*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackPrint);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTrackPrint G__TStjTrackPrint;
static int G__BaseDict_396_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTrackPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTrackPrint*) (soff+(sizeof(StjTrackPrint)*i)))->~G__TStjTrackPrint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTrackPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTrackPrint*) (soff))->~G__TStjTrackPrint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_396_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackPrint* dest = (StjTrackPrint*) G__getstructoffset();
   *dest = *(StjTrackPrint*) libp->para[0].ref;
   const StjTrackPrint& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTrackToTLorentzVector */
static int G__BaseDict_397_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackToTLorentzVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackToTLorentzVector((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTrackToTLorentzVector((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackToTLorentzVector[n];
       } else {
         p = new((void*) gvp) StjTrackToTLorentzVector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackToTLorentzVector;
       } else {
         p = new((void*) gvp) StjTrackToTLorentzVector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackToTLorentzVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_397_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((StjTrackToTLorentzVector*) G__getstructoffset())->operator()(*(StjTrack*) libp->para[0].ref);
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_397_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTrackToTLorentzVector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_397_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackToTLorentzVector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_397_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTrackToTLorentzVector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_397_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTrackToTLorentzVector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_397_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackToTLorentzVector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_397_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackToTLorentzVector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_397_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackToTLorentzVector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_397_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackToTLorentzVector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_397_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackToTLorentzVector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_397_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTrackToTLorentzVector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTrackToTLorentzVector(*(StjTrackToTLorentzVector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackToTLorentzVector);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTrackToTLorentzVector G__TStjTrackToTLorentzVector;
static int G__BaseDict_397_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTrackToTLorentzVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTrackToTLorentzVector*) (soff+(sizeof(StjTrackToTLorentzVector)*i)))->~G__TStjTrackToTLorentzVector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTrackToTLorentzVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTrackToTLorentzVector*) (soff))->~G__TStjTrackToTLorentzVector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_397_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackToTLorentzVector* dest = (StjTrackToTLorentzVector*) G__getstructoffset();
   *dest = *(StjTrackToTLorentzVector*) libp->para[0].ref;
   const StjTrackToTLorentzVector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTrackToFourVec */
static int G__BaseDict_398_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackToFourVec* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackToFourVec((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StjTrackToFourVec((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackToFourVec[n];
       } else {
         p = new((void*) gvp) StjTrackToFourVec[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StjTrackToFourVec;
       } else {
         p = new((void*) gvp) StjTrackToFourVec;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackToFourVec);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_398_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjFourVec* pobj;
         StjFourVec xobj = ((StjTrackToFourVec*) G__getstructoffset())->operator()(*(StjTrack*) libp->para[0].ref);
         pobj = new StjFourVec(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_398_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTrackToFourVec::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_398_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackToFourVec::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_398_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTrackToFourVec::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_398_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTrackToFourVec::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_398_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackToFourVec*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_398_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackToFourVec::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_398_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackToFourVec::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_398_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackToFourVec::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_398_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackToFourVec::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_398_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTrackToFourVec* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTrackToFourVec(*(StjTrackToFourVec*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackToFourVec);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTrackToFourVec G__TStjTrackToFourVec;
static int G__BaseDict_398_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTrackToFourVec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTrackToFourVec*) (soff+(sizeof(StjTrackToFourVec)*i)))->~G__TStjTrackToFourVec();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTrackToFourVec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTrackToFourVec*) (soff))->~G__TStjTrackToFourVec();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjTrackTowerEnergyListToFourVecList */
static int G__BaseDict_399_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjFourVecList* pobj;
         StjFourVecList xobj = ((StjTrackTowerEnergyListToFourVecList*) G__getstructoffset())->operator()(*(pair<StjTrackList,StjTowerEnergyList>*) libp->para[0].ref);
         pobj = new StjFourVecList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_399_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjFourVecList* pobj;
         StjFourVecList xobj = ((StjTrackTowerEnergyListToFourVecList*) G__getstructoffset())->operator()(*(StjTrackList*) libp->para[0].ref, *(StjTowerEnergyList*) libp->para[1].ref);
         pobj = new StjFourVecList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_399_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjTrackTowerEnergyListToFourVecList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_399_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackTowerEnergyListToFourVecList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_399_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjTrackTowerEnergyListToFourVecList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_399_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjTrackTowerEnergyListToFourVecList::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_399_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjTrackTowerEnergyListToFourVecList*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_399_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackTowerEnergyListToFourVecList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_399_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackTowerEnergyListToFourVecList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_399_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjTrackTowerEnergyListToFourVecList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_399_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjTrackTowerEnergyListToFourVecList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__BaseDict_399_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackTowerEnergyListToFourVecList *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackTowerEnergyListToFourVecList[n];
     } else {
       p = new((void*) gvp) StjTrackTowerEnergyListToFourVecList[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StjTrackTowerEnergyListToFourVecList;
     } else {
       p = new((void*) gvp) StjTrackTowerEnergyListToFourVecList;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackTowerEnergyListToFourVecList);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_399_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjTrackTowerEnergyListToFourVecList* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjTrackTowerEnergyListToFourVecList(*(StjTrackTowerEnergyListToFourVecList*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjTrackTowerEnergyListToFourVecList);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjTrackTowerEnergyListToFourVecList G__TStjTrackTowerEnergyListToFourVecList;
static int G__BaseDict_399_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjTrackTowerEnergyListToFourVecList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjTrackTowerEnergyListToFourVecList*) (soff+(sizeof(StjTrackTowerEnergyListToFourVecList)*i)))->~G__TStjTrackTowerEnergyListToFourVecList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjTrackTowerEnergyListToFourVecList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjTrackTowerEnergyListToFourVecList*) (soff))->~G__TStjTrackTowerEnergyListToFourVecList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_399_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjTrackTowerEnergyListToFourVecList* dest = (StjTrackTowerEnergyListToFourVecList*) G__getstructoffset();
   *dest = *(StjTrackTowerEnergyListToFourVecList*) libp->para[0].ref;
   const StjTrackTowerEnergyListToFourVecList& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjDijetListTrigger */
static int G__BaseDict_401_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StjDijetList* pobj;
         StjDijetList xobj = ((StjDijetListTrigger*) G__getstructoffset())->operator()(*(StjDijetList*) libp->para[0].ref);
         pobj = new StjDijetList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_401_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjDijetListTrigger::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_401_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetListTrigger::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_401_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjDijetListTrigger::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_401_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjDijetListTrigger::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_401_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetListTrigger*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_401_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetListTrigger::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_401_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetListTrigger::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_401_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetListTrigger::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_401_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetListTrigger::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjDijetListTrigger G__TStjDijetListTrigger;
static int G__BaseDict_401_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjDijetListTrigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjDijetListTrigger*) (soff+(sizeof(StjDijetListTrigger)*i)))->~G__TStjDijetListTrigger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjDijetListTrigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjDijetListTrigger*) (soff))->~G__TStjDijetListTrigger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_401_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetListTrigger* dest = (StjDijetListTrigger*) G__getstructoffset();
   *dest = *(StjDijetListTrigger*) libp->para[0].ref;
   const StjDijetListTrigger& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjDijetListTriggerBJP */
static int G__BaseDict_402_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjDijetListTriggerBJP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_402_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetListTriggerBJP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_402_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjDijetListTriggerBJP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_402_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjDijetListTriggerBJP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_402_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetListTriggerBJP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_402_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetListTriggerBJP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_402_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetListTriggerBJP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_402_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetListTriggerBJP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_402_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetListTriggerBJP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjDijetListTriggerBJP G__TStjDijetListTriggerBJP;
static int G__BaseDict_402_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjDijetListTriggerBJP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjDijetListTriggerBJP*) (soff+(sizeof(StjDijetListTriggerBJP)*i)))->~G__TStjDijetListTriggerBJP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjDijetListTriggerBJP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjDijetListTriggerBJP*) (soff))->~G__TStjDijetListTriggerBJP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_402_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetListTriggerBJP* dest = (StjDijetListTriggerBJP*) G__getstructoffset();
   *dest = *(StjDijetListTriggerBJP*) libp->para[0].ref;
   const StjDijetListTriggerBJP& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StjDijetListTriggerBHT */
static int G__BaseDict_403_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetListTriggerBHT* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StjDijetListTriggerBHT((StjTrg*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StjDijetListTriggerBHT((StjTrg*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBHT);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_403_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StjDijetListTriggerBHT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_403_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetListTriggerBHT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_403_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StjDijetListTriggerBHT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_403_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StjDijetListTriggerBHT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_403_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StjDijetListTriggerBHT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_403_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetListTriggerBHT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_403_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetListTriggerBHT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_403_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StjDijetListTriggerBHT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_403_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StjDijetListTriggerBHT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_403_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StjDijetListTriggerBHT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StjDijetListTriggerBHT(*(StjDijetListTriggerBHT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBHT);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StjDijetListTriggerBHT G__TStjDijetListTriggerBHT;
static int G__BaseDict_403_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StjDijetListTriggerBHT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StjDijetListTriggerBHT*) (soff+(sizeof(StjDijetListTriggerBHT)*i)))->~G__TStjDijetListTriggerBHT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StjDijetListTriggerBHT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StjDijetListTriggerBHT*) (soff))->~G__TStjDijetListTriggerBHT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseDict_403_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StjDijetListTriggerBHT* dest = (StjDijetListTriggerBHT*) G__getstructoffset();
   *dest = *(StjDijetListTriggerBHT*) libp->para[0].ref;
   const StjDijetListTriggerBHT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StjTowerEnergy */

/* vector<StjTowerEnergy,allocator<StjTowerEnergy> > */

/* StjBEMC */

/* StjBEMCNull */

/* StjBEMCTree */

/* StjBEMCTxt */

/* StjFourVec */

/* vector<StjFourVec,allocator<StjFourVec> > */

/* StjJet */

/* vector<StjJet,allocator<StjJet> > */

/* StjDijet */

/* vector<StjDijet,allocator<StjDijet> > */

/* StjDijetCut */

/* StjDijetCutAsymmetricPt */

/* StjDijetCutDPhi */

/* StjJetCut */

/* StjJetCutEta */

/* StjDijetCutEta */

/* StjDijetCutEta3MinusEta4 */

/* StjFourVecCut */

/* StjFourVecListCut */

/* StjJetCutTrgBHT */

/* StjDijetCutTrgBHT */

/* StjJetCutTrgBJP */

/* StjDijetCutTrgBJP */

/* StjDijetListCut */

/* StjDijetPrint */

/* StjEEMC */

/* StjEEMCNull */

/* StjEEMCTxt */

/* StjFormDijet */

/* StjFourVecCutPt */

/* StjFourVecCutTrgBHT */

/* StjFourVecCutTrgBJP */

/* StjFourVecPrint */

/* StjJetCutDetectorEta */

/* StjJetCutNFourVecs */

/* StjJetCutPt */

/* StjJetListCut */

/* StjJetPrint */

/* StjMCParticle */

/* vector<StjMCParticle,allocator<StjMCParticle> > */

/* StjMC */

/* StjMCNull */

/* StjMCParticleCut */

/* StjMCParticleCutEta */

/* StjMCParticleCutEtaForStatus */

/* StjMCParticleCutStatus */

/* StjMCParticleListCut */

/* StjMCParticleListToFourVecList */

/* StjMCParticlePrint */

/* StjMCParticleToFourVec */

/* StjMCTree */

/* StjTrack */

/* vector<StjTrack,allocator<StjTrack> > */

/* StjTPC */

/* StjTPCNull */

/* StjTPCTree */

/* StjTPCTxt */

/* StjTowerEnergyCorrectionForTracks */

/* StjTowerEnergyCut */

/* StjTowerEnergyCut2003BemcTower */

/* StjTowerEnergyCutAdc */

/* StjTowerEnergyCutBemcStatus */

/* StjTowerEnergyCutBemcWestOnly */

/* StjTowerEnergyCutEnergy */

/* StjTowerEnergyCutEt */

/* StjTowerEnergyListCut */

/* StjTowerEnergyVariation */

/* StjTowerEnergyListVariation */

/* StjTowerEnergyPrint */

/* StjTowerEnergyToTLorentzVector */

/* StjTowerEnergyToFourVec */

/* StjTowerEnergyVariationEnergy */

/* StjTrackCut */

/* StjTrackCutDca */

/* StjTrackCutDcaPtDependent */

/* StjTrackCutEta */

/* StjTrackCutFlag */

/* StjTrackCutNHits */

/* StjTrackCutPossibleHitRatio */

/* StjTrackListCut */

/* StjTrackPrint */

/* StjTrackToTLorentzVector */

/* StjTrackToFourVec */

/* StjTrackTowerEnergyListToFourVecList */

/* StjDijetListTrigger */

/* StjDijetListTriggerBJP */

/* StjDijetListTriggerBHT */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBaseDict {
 public:
  G__Sizep2memfuncBaseDict(): p(&G__Sizep2memfuncBaseDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBaseDict::*p)();
};

size_t G__get_sizep2memfuncBaseDict()
{
  G__Sizep2memfuncBaseDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBaseDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy))) {
     StjTowerEnergy *G__Lderived;
     G__Lderived=(StjTowerEnergy*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjBEMC))) {
     StjBEMC *G__Lderived;
     G__Lderived=(StjBEMC*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMC),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCNull))) {
     StjBEMCNull *G__Lderived;
     G__Lderived=(StjBEMCNull*)0x1000;
     {
       StjBEMC *G__Lpbase=(StjBEMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCNull),G__get_linked_tagnum(&G__BaseDictLN_StjBEMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCNull),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTree))) {
     StjBEMCTree *G__Lderived;
     G__Lderived=(StjBEMCTree*)0x1000;
     {
       StjBEMC *G__Lpbase=(StjBEMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTree),G__get_linked_tagnum(&G__BaseDictLN_StjBEMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTree),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTxt))) {
     StjBEMCTxt *G__Lderived;
     G__Lderived=(StjBEMCTxt*)0x1000;
     {
       StjBEMC *G__Lpbase=(StjBEMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTxt),G__get_linked_tagnum(&G__BaseDictLN_StjBEMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTxt),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjFourVec))) {
     StjFourVec *G__Lderived;
     G__Lderived=(StjFourVec*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVec),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjJet))) {
     StjJet *G__Lderived;
     G__Lderived=(StjJet*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJet),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjDijet))) {
     StjDijet *G__Lderived;
     G__Lderived=(StjDijet*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijet),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCut))) {
     StjDijetCut *G__Lderived;
     G__Lderived=(StjDijetCut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCut),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutAsymmetricPt))) {
     StjDijetCutAsymmetricPt *G__Lderived;
     G__Lderived=(StjDijetCutAsymmetricPt*)0x1000;
     {
       StjDijetCut *G__Lpbase=(StjDijetCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutAsymmetricPt),G__get_linked_tagnum(&G__BaseDictLN_StjDijetCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutAsymmetricPt),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutDPhi))) {
     StjDijetCutDPhi *G__Lderived;
     G__Lderived=(StjDijetCutDPhi*)0x1000;
     {
       StjDijetCut *G__Lpbase=(StjDijetCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutDPhi),G__get_linked_tagnum(&G__BaseDictLN_StjDijetCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutDPhi),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjJetCut))) {
     StjJetCut *G__Lderived;
     G__Lderived=(StjJetCut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCut),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutEta))) {
     StjJetCutEta *G__Lderived;
     G__Lderived=(StjJetCutEta*)0x1000;
     {
       StjJetCut *G__Lpbase=(StjJetCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutEta),G__get_linked_tagnum(&G__BaseDictLN_StjJetCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutEta),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta))) {
     StjDijetCutEta *G__Lderived;
     G__Lderived=(StjDijetCutEta*)0x1000;
     {
       StjDijetCut *G__Lpbase=(StjDijetCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta),G__get_linked_tagnum(&G__BaseDictLN_StjDijetCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta3MinusEta4))) {
     StjDijetCutEta3MinusEta4 *G__Lderived;
     G__Lderived=(StjDijetCutEta3MinusEta4*)0x1000;
     {
       StjDijetCut *G__Lpbase=(StjDijetCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta3MinusEta4),G__get_linked_tagnum(&G__BaseDictLN_StjDijetCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta3MinusEta4),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCut))) {
     StjFourVecCut *G__Lderived;
     G__Lderived=(StjFourVecCut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCut),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecListCut))) {
     StjFourVecListCut *G__Lderived;
     G__Lderived=(StjFourVecListCut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecListCut),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBHT))) {
     StjJetCutTrgBHT *G__Lderived;
     G__Lderived=(StjJetCutTrgBHT*)0x1000;
     {
       StjJetCut *G__Lpbase=(StjJetCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBHT),G__get_linked_tagnum(&G__BaseDictLN_StjJetCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBHT),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBHT))) {
     StjDijetCutTrgBHT *G__Lderived;
     G__Lderived=(StjDijetCutTrgBHT*)0x1000;
     {
       StjDijetCut *G__Lpbase=(StjDijetCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBHT),G__get_linked_tagnum(&G__BaseDictLN_StjDijetCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBHT),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBJP))) {
     StjJetCutTrgBJP *G__Lderived;
     G__Lderived=(StjJetCutTrgBJP*)0x1000;
     {
       StjJetCut *G__Lpbase=(StjJetCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBJP),G__get_linked_tagnum(&G__BaseDictLN_StjJetCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBJP),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBJP))) {
     StjDijetCutTrgBJP *G__Lderived;
     G__Lderived=(StjDijetCutTrgBJP*)0x1000;
     {
       StjDijetCut *G__Lpbase=(StjDijetCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBJP),G__get_linked_tagnum(&G__BaseDictLN_StjDijetCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBJP),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListCut))) {
     StjDijetListCut *G__Lderived;
     G__Lderived=(StjDijetListCut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListCut),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjDijetPrint))) {
     StjDijetPrint *G__Lderived;
     G__Lderived=(StjDijetPrint*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetPrint),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjEEMC))) {
     StjEEMC *G__Lderived;
     G__Lderived=(StjEEMC*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMC),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjEEMCNull))) {
     StjEEMCNull *G__Lderived;
     G__Lderived=(StjEEMCNull*)0x1000;
     {
       StjEEMC *G__Lpbase=(StjEEMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMCNull),G__get_linked_tagnum(&G__BaseDictLN_StjEEMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMCNull),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjEEMCTxt))) {
     StjEEMCTxt *G__Lderived;
     G__Lderived=(StjEEMCTxt*)0x1000;
     {
       StjEEMC *G__Lpbase=(StjEEMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMCTxt),G__get_linked_tagnum(&G__BaseDictLN_StjEEMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMCTxt),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjFormDijet))) {
     StjFormDijet *G__Lderived;
     G__Lderived=(StjFormDijet*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFormDijet),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutPt))) {
     StjFourVecCutPt *G__Lderived;
     G__Lderived=(StjFourVecCutPt*)0x1000;
     {
       StjFourVecCut *G__Lpbase=(StjFourVecCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutPt),G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutPt),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBHT))) {
     StjFourVecCutTrgBHT *G__Lderived;
     G__Lderived=(StjFourVecCutTrgBHT*)0x1000;
     {
       StjFourVecCut *G__Lpbase=(StjFourVecCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBHT),G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBHT),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBJP))) {
     StjFourVecCutTrgBJP *G__Lderived;
     G__Lderived=(StjFourVecCutTrgBJP*)0x1000;
     {
       StjFourVecCut *G__Lpbase=(StjFourVecCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBJP),G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBJP),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecPrint))) {
     StjFourVecPrint *G__Lderived;
     G__Lderived=(StjFourVecPrint*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecPrint),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutDetectorEta))) {
     StjJetCutDetectorEta *G__Lderived;
     G__Lderived=(StjJetCutDetectorEta*)0x1000;
     {
       StjJetCut *G__Lpbase=(StjJetCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutDetectorEta),G__get_linked_tagnum(&G__BaseDictLN_StjJetCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutDetectorEta),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutNFourVecs))) {
     StjJetCutNFourVecs *G__Lderived;
     G__Lderived=(StjJetCutNFourVecs*)0x1000;
     {
       StjJetCut *G__Lpbase=(StjJetCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutNFourVecs),G__get_linked_tagnum(&G__BaseDictLN_StjJetCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutNFourVecs),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutPt))) {
     StjJetCutPt *G__Lderived;
     G__Lderived=(StjJetCutPt*)0x1000;
     {
       StjJetCut *G__Lpbase=(StjJetCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutPt),G__get_linked_tagnum(&G__BaseDictLN_StjJetCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutPt),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjJetListCut))) {
     StjJetListCut *G__Lderived;
     G__Lderived=(StjJetListCut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetListCut),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjJetPrint))) {
     StjJetPrint *G__Lderived;
     G__Lderived=(StjJetPrint*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetPrint),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle))) {
     StjMCParticle *G__Lderived;
     G__Lderived=(StjMCParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjMC))) {
     StjMC *G__Lderived;
     G__Lderived=(StjMC*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMC),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjMCNull))) {
     StjMCNull *G__Lderived;
     G__Lderived=(StjMCNull*)0x1000;
     {
       StjMC *G__Lpbase=(StjMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCNull),G__get_linked_tagnum(&G__BaseDictLN_StjMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCNull),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCut))) {
     StjMCParticleCut *G__Lderived;
     G__Lderived=(StjMCParticleCut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCut),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEta))) {
     StjMCParticleCutEta *G__Lderived;
     G__Lderived=(StjMCParticleCutEta*)0x1000;
     {
       StjMCParticleCut *G__Lpbase=(StjMCParticleCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEta),G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEta),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEtaForStatus))) {
     StjMCParticleCutEtaForStatus *G__Lderived;
     G__Lderived=(StjMCParticleCutEtaForStatus*)0x1000;
     {
       StjMCParticleCut *G__Lpbase=(StjMCParticleCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEtaForStatus),G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEtaForStatus),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutStatus))) {
     StjMCParticleCutStatus *G__Lderived;
     G__Lderived=(StjMCParticleCutStatus*)0x1000;
     {
       StjMCParticleCut *G__Lpbase=(StjMCParticleCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutStatus),G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutStatus),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListCut))) {
     StjMCParticleListCut *G__Lderived;
     G__Lderived=(StjMCParticleListCut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListCut),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListToFourVecList))) {
     StjMCParticleListToFourVecList *G__Lderived;
     G__Lderived=(StjMCParticleListToFourVecList*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListToFourVecList),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticlePrint))) {
     StjMCParticlePrint *G__Lderived;
     G__Lderived=(StjMCParticlePrint*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticlePrint),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleToFourVec))) {
     StjMCParticleToFourVec *G__Lderived;
     G__Lderived=(StjMCParticleToFourVec*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleToFourVec),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjMCTree))) {
     StjMCTree *G__Lderived;
     G__Lderived=(StjMCTree*)0x1000;
     {
       StjMC *G__Lpbase=(StjMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCTree),G__get_linked_tagnum(&G__BaseDictLN_StjMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCTree),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTrack))) {
     StjTrack *G__Lderived;
     G__Lderived=(StjTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrack),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTPC))) {
     StjTPC *G__Lderived;
     G__Lderived=(StjTPC*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPC),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTPCNull))) {
     StjTPCNull *G__Lderived;
     G__Lderived=(StjTPCNull*)0x1000;
     {
       StjTPC *G__Lpbase=(StjTPC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCNull),G__get_linked_tagnum(&G__BaseDictLN_StjTPC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCNull),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTPCTree))) {
     StjTPCTree *G__Lderived;
     G__Lderived=(StjTPCTree*)0x1000;
     {
       StjTPC *G__Lpbase=(StjTPC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCTree),G__get_linked_tagnum(&G__BaseDictLN_StjTPC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCTree),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTPCTxt))) {
     StjTPCTxt *G__Lderived;
     G__Lderived=(StjTPCTxt*)0x1000;
     {
       StjTPC *G__Lpbase=(StjTPC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCTxt),G__get_linked_tagnum(&G__BaseDictLN_StjTPC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCTxt),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCorrectionForTracks))) {
     StjTowerEnergyCorrectionForTracks *G__Lderived;
     G__Lderived=(StjTowerEnergyCorrectionForTracks*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCorrectionForTracks),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut))) {
     StjTowerEnergyCut *G__Lderived;
     G__Lderived=(StjTowerEnergyCut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut2003BemcTower))) {
     StjTowerEnergyCut2003BemcTower *G__Lderived;
     G__Lderived=(StjTowerEnergyCut2003BemcTower*)0x1000;
     {
       StjTowerEnergyCut *G__Lpbase=(StjTowerEnergyCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut2003BemcTower),G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut2003BemcTower),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutAdc))) {
     StjTowerEnergyCutAdc *G__Lderived;
     G__Lderived=(StjTowerEnergyCutAdc*)0x1000;
     {
       StjTowerEnergyCut *G__Lpbase=(StjTowerEnergyCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutAdc),G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutAdc),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcStatus))) {
     StjTowerEnergyCutBemcStatus *G__Lderived;
     G__Lderived=(StjTowerEnergyCutBemcStatus*)0x1000;
     {
       StjTowerEnergyCut *G__Lpbase=(StjTowerEnergyCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcStatus),G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcStatus),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcWestOnly))) {
     StjTowerEnergyCutBemcWestOnly *G__Lderived;
     G__Lderived=(StjTowerEnergyCutBemcWestOnly*)0x1000;
     {
       StjTowerEnergyCut *G__Lpbase=(StjTowerEnergyCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcWestOnly),G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcWestOnly),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEnergy))) {
     StjTowerEnergyCutEnergy *G__Lderived;
     G__Lderived=(StjTowerEnergyCutEnergy*)0x1000;
     {
       StjTowerEnergyCut *G__Lpbase=(StjTowerEnergyCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEnergy),G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEnergy),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEt))) {
     StjTowerEnergyCutEt *G__Lderived;
     G__Lderived=(StjTowerEnergyCutEt*)0x1000;
     {
       StjTowerEnergyCut *G__Lpbase=(StjTowerEnergyCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEt),G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEt),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListCut))) {
     StjTowerEnergyListCut *G__Lderived;
     G__Lderived=(StjTowerEnergyListCut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListCut),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariation))) {
     StjTowerEnergyVariation *G__Lderived;
     G__Lderived=(StjTowerEnergyVariation*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariation),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListVariation))) {
     StjTowerEnergyListVariation *G__Lderived;
     G__Lderived=(StjTowerEnergyListVariation*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListVariation),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyPrint))) {
     StjTowerEnergyPrint *G__Lderived;
     G__Lderived=(StjTowerEnergyPrint*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyPrint),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToTLorentzVector))) {
     StjTowerEnergyToTLorentzVector *G__Lderived;
     G__Lderived=(StjTowerEnergyToTLorentzVector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToTLorentzVector),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToFourVec))) {
     StjTowerEnergyToFourVec *G__Lderived;
     G__Lderived=(StjTowerEnergyToFourVec*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToFourVec),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariationEnergy))) {
     StjTowerEnergyVariationEnergy *G__Lderived;
     G__Lderived=(StjTowerEnergyVariationEnergy*)0x1000;
     {
       StjTowerEnergyVariation *G__Lpbase=(StjTowerEnergyVariation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariationEnergy),G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariation),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariationEnergy),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCut))) {
     StjTrackCut *G__Lderived;
     G__Lderived=(StjTrackCut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCut),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDca))) {
     StjTrackCutDca *G__Lderived;
     G__Lderived=(StjTrackCutDca*)0x1000;
     {
       StjTrackCut *G__Lpbase=(StjTrackCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDca),G__get_linked_tagnum(&G__BaseDictLN_StjTrackCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDca),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDcaPtDependent))) {
     StjTrackCutDcaPtDependent *G__Lderived;
     G__Lderived=(StjTrackCutDcaPtDependent*)0x1000;
     {
       StjTrackCut *G__Lpbase=(StjTrackCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDcaPtDependent),G__get_linked_tagnum(&G__BaseDictLN_StjTrackCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDcaPtDependent),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutEta))) {
     StjTrackCutEta *G__Lderived;
     G__Lderived=(StjTrackCutEta*)0x1000;
     {
       StjTrackCut *G__Lpbase=(StjTrackCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutEta),G__get_linked_tagnum(&G__BaseDictLN_StjTrackCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutEta),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutFlag))) {
     StjTrackCutFlag *G__Lderived;
     G__Lderived=(StjTrackCutFlag*)0x1000;
     {
       StjTrackCut *G__Lpbase=(StjTrackCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutFlag),G__get_linked_tagnum(&G__BaseDictLN_StjTrackCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutFlag),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutNHits))) {
     StjTrackCutNHits *G__Lderived;
     G__Lderived=(StjTrackCutNHits*)0x1000;
     {
       StjTrackCut *G__Lpbase=(StjTrackCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutNHits),G__get_linked_tagnum(&G__BaseDictLN_StjTrackCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutNHits),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutPossibleHitRatio))) {
     StjTrackCutPossibleHitRatio *G__Lderived;
     G__Lderived=(StjTrackCutPossibleHitRatio*)0x1000;
     {
       StjTrackCut *G__Lpbase=(StjTrackCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutPossibleHitRatio),G__get_linked_tagnum(&G__BaseDictLN_StjTrackCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutPossibleHitRatio),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTrackListCut))) {
     StjTrackListCut *G__Lderived;
     G__Lderived=(StjTrackListCut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackListCut),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTrackPrint))) {
     StjTrackPrint *G__Lderived;
     G__Lderived=(StjTrackPrint*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackPrint),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTrackToTLorentzVector))) {
     StjTrackToTLorentzVector *G__Lderived;
     G__Lderived=(StjTrackToTLorentzVector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackToTLorentzVector),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTrackToFourVec))) {
     StjTrackToFourVec *G__Lderived;
     G__Lderived=(StjTrackToFourVec*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackToFourVec),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjTrackTowerEnergyListToFourVecList))) {
     StjTrackTowerEnergyListToFourVecList *G__Lderived;
     G__Lderived=(StjTrackTowerEnergyListToFourVecList*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackTowerEnergyListToFourVecList),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTrigger))) {
     StjDijetListTrigger *G__Lderived;
     G__Lderived=(StjDijetListTrigger*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTrigger),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBJP))) {
     StjDijetListTriggerBJP *G__Lderived;
     G__Lderived=(StjDijetListTriggerBJP*)0x1000;
     {
       StjDijetListTrigger *G__Lpbase=(StjDijetListTrigger*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBJP),G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTrigger),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBJP),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBHT))) {
     StjDijetListTriggerBHT *G__Lderived;
     G__Lderived=(StjDijetListTriggerBHT*)0x1000;
     {
       StjDijetListTrigger *G__Lpbase=(StjDijetListTrigger*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBHT),G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTrigger),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBHT),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBaseDict() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<StjTowerEnergy>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy),256,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy),1,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy),257,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StjTowerEnergyList",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StjFourVec>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__BaseDictLN_StjFourVec),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__BaseDictLN_StjFourVec),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__BaseDictLN_StjFourVec),256,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__BaseDictLN_StjFourVec),1,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__BaseDictLN_StjFourVec),257,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StjFourVecList",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StjJet>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__BaseDictLN_StjJet),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__BaseDictLN_StjJet),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__BaseDictLN_StjJet),256,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__BaseDictLN_StjJet),1,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__BaseDictLN_StjJet),257,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StjJetList",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StjDijet>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__BaseDictLN_StjDijet),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__BaseDictLN_StjDijet),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__BaseDictLN_StjDijet),256,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__BaseDictLN_StjDijet),1,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__BaseDictLN_StjDijet),257,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StjDijetList",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StjFourVecCut*>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CutList",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgR),0,G__get_linked_tagnum(&G__BaseDictLN_StjFourVecListCut));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StjDijetCut*>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CutList",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgR),0,G__get_linked_tagnum(&G__BaseDictLN_StjDijetListCut));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StjJetCut*>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CutList",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgR),0,G__get_linked_tagnum(&G__BaseDictLN_StjJetListCut));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StjMCParticle>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle),256,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle),1,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle),257,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StjMCParticleList",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StjMCParticleCut*>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CutList",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgR),0,G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListCut));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StjTrack>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__BaseDictLN_StjTrack),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__BaseDictLN_StjTrack),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__BaseDictLN_StjTrack),256,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__BaseDictLN_StjTrack),1,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__BaseDictLN_StjTrack),257,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StjTrackList",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__BaseDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StjTowerEnergyCut*>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CutList",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgR),0,G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListCut));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StjTowerEnergyVariation*>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("VarList",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgR),0,G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListVariation));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StjTrackCut*>",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CutList",117,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgR),0,G__get_linked_tagnum(&G__BaseDictLN_StjTrackListCut));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<StjTrackList,StjTowerEnergyList>",117,G__get_linked_tagnum(&G__BaseDictLN_pairlEvectorlEStjTrackcOallocatorlEStjTrackgRsPgRcOvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StjTowerEnergy */
static void G__setup_memvarStjTowerEnergy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy));
   { StjTowerEnergy *p; p=(StjTowerEnergy*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->runNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"runNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventId)-(long)(p)),105,0,0,-1,-1,-1,1,"eventId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detectorId)-(long)(p)),105,0,0,-1,-1,-1,1,"detectorId=",0,"9: BEMC, 13: EEMC");
   G__memvar_setup((void*)((long)(&p->towerId)-(long)(p)),105,0,0,-1,-1,-1,1,"towerId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->towerR)-(long)(p)),100,0,0,-1,-1,-1,1,"towerR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->towerEta)-(long)(p)),100,0,0,-1,-1,-1,1,"towerEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->towerPhi)-(long)(p)),100,0,0,-1,-1,-1,1,"towerPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexX)-(long)(p)),100,0,0,-1,-1,-1,1,"vertexX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexY)-(long)(p)),100,0,0,-1,-1,-1,1,"vertexY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexZ)-(long)(p)),100,0,0,-1,-1,-1,1,"vertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->adc)-(long)(p)),104,0,0,-1,-1,-1,1,"adc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pedestal)-(long)(p)),102,0,0,-1,-1,-1,1,"pedestal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rms)-(long)(p)),102,0,0,-1,-1,-1,1,"rms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->status)-(long)(p)),105,0,0,-1,-1,-1,1,"status=",0,"1 is good for BEMC. 0 is good for EEMC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<StjTowerEnergy,allocator<StjTowerEnergy> > */
static void G__setup_memvarvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   { vector<StjTowerEnergy,allocator<StjTowerEnergy> > *p; p=(vector<StjTowerEnergy,allocator<StjTowerEnergy> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* StjBEMC */
static void G__setup_memvarStjBEMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMC));
   { StjBEMC *p; p=(StjBEMC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjBEMCNull */
static void G__setup_memvarStjBEMCNull(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCNull));
   { StjBEMCNull *p; p=(StjBEMCNull*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjBEMCTree */
static void G__setup_memvarStjBEMCTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTree));
   { StjBEMCTree *p; p=(StjBEMCTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListReader),-1,-1,4,"_reader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjBEMCTxt */
static void G__setup_memvarStjBEMCTxt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTxt));
   { StjBEMCTxt *p; p=(StjBEMCTxt*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"_dataFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"_currentEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_string),-1,-1,4,"_oldLine=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjFourVec */
static void G__setup_memvarStjFourVec(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVec));
   { StjFourVec *p; p=(StjFourVec*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->runNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"runNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventId)-(long)(p)),105,0,0,-1,-1,-1,1,"eventId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fourvecId)-(long)(p)),105,0,0,-1,-1,-1,1,"fourvecId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),105,0,0,-1,-1,-1,1,"type=",0,"0: mc, 1: track, 2: tower energy");
   G__memvar_setup((void*)((long)(&p->detectorId)-(long)(p)),105,0,0,-1,-1,-1,1,"detectorId=",0,"1: TPC, 9: BEMC, 13: EEMC");
   G__memvar_setup((void*)((long)(&p->trackId)-(long)(p)),115,0,0,-1,-1,-1,1,"trackId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->towerId)-(long)(p)),105,0,0,-1,-1,-1,1,"towerId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcparticleId)-(long)(p)),105,0,0,-1,-1,-1,1,"mcparticleId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),100,0,0,-1,-1,-1,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexZ)-(long)(p)),100,0,0,-1,-1,-1,1,"vertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<StjFourVec,allocator<StjFourVec> > */
static void G__setup_memvarvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   { vector<StjFourVec,allocator<StjFourVec> > *p; p=(vector<StjFourVec,allocator<StjFourVec> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* StjJet */
static void G__setup_memvarStjJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJet));
   { StjJet *p; p=(StjJet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->runNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"runNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventId)-(long)(p)),105,0,0,-1,-1,-1,1,"eventId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jetId)-(long)(p)),105,0,0,-1,-1,-1,1,"jetId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),100,0,0,-1,-1,-1,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neuRt)-(long)(p)),100,0,0,-1,-1,-1,1,"neuRt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexZ)-(long)(p)),100,0,0,-1,-1,-1,1,"vertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detectorEta)-(long)(p)),100,0,0,-1,-1,-1,1,"detectorEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fourVecList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR),G__defined_typename("StjFourVecList"),-1,1,"fourVecList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<StjJet,allocator<StjJet> > */
static void G__setup_memvarvectorlEStjJetcOallocatorlEStjJetgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   { vector<StjJet,allocator<StjJet> > *p; p=(vector<StjJet,allocator<StjJet> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* StjDijet */
static void G__setup_memvarStjDijet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijet));
   { StjDijet *p; p=(StjDijet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->runNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"runNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventId)-(long)(p)),105,0,0,-1,-1,-1,1,"eventId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dijetId)-(long)(p)),105,0,0,-1,-1,-1,1,"dijetId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),100,0,0,-1,-1,-1,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->costh)-(long)(p)),100,0,0,-1,-1,-1,1,"costh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dphi)-(long)(p)),100,0,0,-1,-1,-1,1,"dphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexZ)-(long)(p)),100,0,0,-1,-1,-1,1,"vertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jet3)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjJet),-1,-1,1,"jet3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jet4)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjJet),-1,-1,1,"jet4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jetSame)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjJet),-1,-1,1,"jetSame=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jetAway)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjJet),-1,-1,1,"jetAway=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<StjDijet,allocator<StjDijet> > */
static void G__setup_memvarvectorlEStjDijetcOallocatorlEStjDijetgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   { vector<StjDijet,allocator<StjDijet> > *p; p=(vector<StjDijet,allocator<StjDijet> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* StjDijetCut */
static void G__setup_memvarStjDijetCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCut));
   { StjDijetCut *p; p=(StjDijetCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjDijetCutAsymmetricPt */
static void G__setup_memvarStjDijetCutAsymmetricPt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutAsymmetricPt));
   { StjDijetCutAsymmetricPt *p; p=(StjDijetCutAsymmetricPt*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_minMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_maxMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjDijetCutDPhi */
static void G__setup_memvarStjDijetCutDPhi(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutDPhi));
   { StjDijetCutDPhi *p; p=(StjDijetCutDPhi*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjJetCut */
static void G__setup_memvarStjJetCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCut));
   { StjJetCut *p; p=(StjJetCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjJetCutEta */
static void G__setup_memvarStjJetCutEta(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutEta));
   { StjJetCutEta *p; p=(StjJetCutEta*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjDijetCutEta */
static void G__setup_memvarStjDijetCutEta(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta));
   { StjDijetCutEta *p; p=(StjDijetCutEta*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjJetCutEta),-1,-1,4,"_jetcut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjDijetCutEta3MinusEta4 */
static void G__setup_memvarStjDijetCutEta3MinusEta4(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta3MinusEta4));
   { StjDijetCutEta3MinusEta4 *p; p=(StjDijetCutEta3MinusEta4*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjFourVecCut */
static void G__setup_memvarStjFourVecCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCut));
   { StjFourVecCut *p; p=(StjFourVecCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjFourVecListCut */
static void G__setup_memvarStjFourVecListCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecListCut));
   { StjFourVecListCut *p; p=(StjFourVecListCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgR),G__defined_typename("CutList"),-1,4,"_cutList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjJetCutTrgBHT */
static void G__setup_memvarStjJetCutTrgBHT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBHT));
   { StjJetCutTrgBHT *p; p=(StjJetCutTrgBHT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjTrg),-1,-1,4,"_trg=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjFourVecListCut),-1,-1,4,"_fourVecListCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjDijetCutTrgBHT */
static void G__setup_memvarStjDijetCutTrgBHT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBHT));
   { StjDijetCutTrgBHT *p; p=(StjDijetCutTrgBHT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBHT),-1,-1,4,"_jetCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjJetCutTrgBJP */
static void G__setup_memvarStjJetCutTrgBJP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBJP));
   { StjJetCutTrgBJP *p; p=(StjJetCutTrgBJP*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjTrg),-1,-1,4,"_trg=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjFourVecListCut),-1,-1,4,"_fourVecListCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjDijetCutTrgBJP */
static void G__setup_memvarStjDijetCutTrgBJP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBJP));
   { StjDijetCutTrgBJP *p; p=(StjDijetCutTrgBJP*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBJP),-1,-1,4,"_jetCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjDijetListCut */
static void G__setup_memvarStjDijetListCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListCut));
   { StjDijetListCut *p; p=(StjDijetListCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgR),G__defined_typename("CutList"),-1,4,"_cutList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjDijetPrint */
static void G__setup_memvarStjDijetPrint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetPrint));
   { StjDijetPrint *p; p=(StjDijetPrint*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjEEMC */
static void G__setup_memvarStjEEMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMC));
   { StjEEMC *p; p=(StjEEMC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjEEMCNull */
static void G__setup_memvarStjEEMCNull(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMCNull));
   { StjEEMCNull *p; p=(StjEEMCNull*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjEEMCTxt */
static void G__setup_memvarStjEEMCTxt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMCTxt));
   { StjEEMCTxt *p; p=(StjEEMCTxt*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"_dataFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"_currentEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_string),-1,-1,4,"_oldLine=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjFormDijet */
static void G__setup_memvarStjFormDijet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFormDijet));
   { StjFormDijet *p; p=(StjFormDijet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjFourVecCutPt */
static void G__setup_memvarStjFourVecCutPt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutPt));
   { StjFourVecCutPt *p; p=(StjFourVecCutPt*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjFourVecCutTrgBHT */
static void G__setup_memvarStjFourVecCutTrgBHT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBHT));
   { StjFourVecCutTrgBHT *p; p=(StjFourVecCutTrgBHT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjTrg),-1,-1,4,"_trg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjFourVecCutTrgBJP */
static void G__setup_memvarStjFourVecCutTrgBJP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBJP));
   { StjFourVecCutTrgBJP *p; p=(StjFourVecCutTrgBJP*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjTrg),-1,-1,4,"_trg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjTrgBEMCJetPatchTowerIdMap),-1,-1,4,"_jetPatchTowerMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjFourVecPrint */
static void G__setup_memvarStjFourVecPrint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecPrint));
   { StjFourVecPrint *p; p=(StjFourVecPrint*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjJetCutDetectorEta */
static void G__setup_memvarStjJetCutDetectorEta(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutDetectorEta));
   { StjJetCutDetectorEta *p; p=(StjJetCutDetectorEta*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjJetCutNFourVecs */
static void G__setup_memvarStjJetCutNFourVecs(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutNFourVecs));
   { StjJetCutNFourVecs *p; p=(StjJetCutNFourVecs*)0x1000; if (p) { }
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("size_t"),-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("size_t"),-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjJetCutPt */
static void G__setup_memvarStjJetCutPt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutPt));
   { StjJetCutPt *p; p=(StjJetCutPt*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjJetListCut */
static void G__setup_memvarStjJetListCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetListCut));
   { StjJetListCut *p; p=(StjJetListCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgR),G__defined_typename("CutList"),-1,4,"_cutList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjJetPrint */
static void G__setup_memvarStjJetPrint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetPrint));
   { StjJetPrint *p; p=(StjJetPrint*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjMCParticle */
static void G__setup_memvarStjMCParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle));
   { StjMCParticle *p; p=(StjMCParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->runNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"runNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventId)-(long)(p)),105,0,0,-1,-1,-1,1,"eventId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcparticleId)-(long)(p)),105,0,0,-1,-1,-1,1,"mcparticleId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdg)-(long)(p)),105,0,0,-1,-1,-1,1,"pdg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->firstMotherId)-(long)(p)),105,0,0,-1,-1,-1,1,"firstMotherId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lastMotherId)-(long)(p)),105,0,0,-1,-1,-1,1,"lastMotherId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->firstDaughterId)-(long)(p)),105,0,0,-1,-1,-1,1,"firstDaughterId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lastDaughterId)-(long)(p)),105,0,0,-1,-1,-1,1,"lastDaughterId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),100,0,0,-1,-1,-1,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->e)-(long)(p)),100,0,0,-1,-1,-1,1,"e=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->status)-(long)(p)),105,0,0,-1,-1,-1,1,"status=",0,"1: stable  2: unstable  3: incoming and parton");
   G__memvar_setup((void*)((long)(&p->vertexZ)-(long)(p)),100,0,0,-1,-1,-1,1,"vertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<StjMCParticle,allocator<StjMCParticle> > */
static void G__setup_memvarvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   { vector<StjMCParticle,allocator<StjMCParticle> > *p; p=(vector<StjMCParticle,allocator<StjMCParticle> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* StjMC */
static void G__setup_memvarStjMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMC));
   { StjMC *p; p=(StjMC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjMCNull */
static void G__setup_memvarStjMCNull(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCNull));
   { StjMCNull *p; p=(StjMCNull*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjMCParticleCut */
static void G__setup_memvarStjMCParticleCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCut));
   { StjMCParticleCut *p; p=(StjMCParticleCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjMCParticleCutEta */
static void G__setup_memvarStjMCParticleCutEta(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEta));
   { StjMCParticleCutEta *p; p=(StjMCParticleCutEta*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjMCParticleCutEtaForStatus */
static void G__setup_memvarStjMCParticleCutEtaForStatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEtaForStatus));
   { StjMCParticleCutEtaForStatus *p; p=(StjMCParticleCutEtaForStatus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_status=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjMCParticleCutStatus */
static void G__setup_memvarStjMCParticleCutStatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutStatus));
   { StjMCParticleCutStatus *p; p=(StjMCParticleCutStatus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<int>"),-1,4,"_goodStatusSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjMCParticleListCut */
static void G__setup_memvarStjMCParticleListCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListCut));
   { StjMCParticleListCut *p; p=(StjMCParticleListCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgR),G__defined_typename("CutList"),-1,4,"_cutList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjMCParticleListToFourVecList */
static void G__setup_memvarStjMCParticleListToFourVecList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListToFourVecList));
   { StjMCParticleListToFourVecList *p; p=(StjMCParticleListToFourVecList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjMCParticlePrint */
static void G__setup_memvarStjMCParticlePrint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticlePrint));
   { StjMCParticlePrint *p; p=(StjMCParticlePrint*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjMCParticleToFourVec */
static void G__setup_memvarStjMCParticleToFourVec(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleToFourVec));
   { StjMCParticleToFourVec *p; p=(StjMCParticleToFourVec*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjMCTree */
static void G__setup_memvarStjMCTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCTree));
   { StjMCTree *p; p=(StjMCTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListReader),-1,-1,4,"_reader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTrack */
static void G__setup_memvarStjTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrack));
   { StjTrack *p; p=(StjTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->runNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"runNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventId)-(long)(p)),105,0,0,-1,-1,-1,1,"eventId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detectorId)-(long)(p)),105,0,0,-1,-1,-1,1,"detectorId=",0,"1: TPC");
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->flag)-(long)(p)),115,0,0,-1,-1,-1,1,"flag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nHits)-(long)(p)),114,0,0,-1,-1,-1,1,"nHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),115,0,0,-1,-1,-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nHitsPoss)-(long)(p)),114,0,0,-1,-1,-1,1,"nHitsPoss=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nHitsDedx)-(long)(p)),114,0,0,-1,-1,-1,1,"nHitsDedx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nHitsFit)-(long)(p)),114,0,0,-1,-1,-1,1,"nHitsFit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nSigmaPion)-(long)(p)),100,0,0,-1,-1,-1,1,"nSigmaPion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tdca)-(long)(p)),100,0,0,-1,-1,-1,1,"Tdca=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dcaZ)-(long)(p)),102,0,0,-1,-1,-1,1,"dcaZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dcaD)-(long)(p)),102,0,0,-1,-1,-1,1,"dcaD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BField)-(long)(p)),100,0,0,-1,-1,-1,1,"BField=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bemcRadius)-(long)(p)),100,0,0,-1,-1,-1,1,"bemcRadius=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexZ)-(long)(p)),100,0,0,-1,-1,-1,1,"vertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->exitDetectorId)-(long)(p)),105,0,0,-1,-1,-1,1,"exitDetectorId=",0,"9: BEMC, 13: EEMC");
   G__memvar_setup((void*)((long)(&p->exitTowerId)-(long)(p)),105,0,0,-1,-1,-1,1,"exitTowerId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->exitEta)-(long)(p)),100,0,0,-1,-1,-1,1,"exitEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->exitPhi)-(long)(p)),100,0,0,-1,-1,-1,1,"exitPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dEdx)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackIndex)-(long)(p)),105,0,0,-1,-1,-1,1,"trackIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),115,0,0,-1,-1,-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<StjTrack,allocator<StjTrack> > */
static void G__setup_memvarvectorlEStjTrackcOallocatorlEStjTrackgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   { vector<StjTrack,allocator<StjTrack> > *p; p=(vector<StjTrack,allocator<StjTrack> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* StjTPC */
static void G__setup_memvarStjTPC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPC));
   { StjTPC *p; p=(StjTPC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTPCNull */
static void G__setup_memvarStjTPCNull(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCNull));
   { StjTPCNull *p; p=(StjTPCNull*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTPCTree */
static void G__setup_memvarStjTPCTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCTree));
   { StjTPCTree *p; p=(StjTPCTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_StjTrackListReader),-1,-1,4,"_reader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTPCTxt */
static void G__setup_memvarStjTPCTxt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCTxt));
   { StjTPCTxt *p; p=(StjTPCTxt*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"_dataFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"_currentEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_string),-1,-1,4,"_oldLine=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyCorrectionForTracks */
static void G__setup_memvarStjTowerEnergyCorrectionForTracks(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCorrectionForTracks));
   { StjTowerEnergyCorrectionForTracks *p; p=(StjTowerEnergyCorrectionForTracks*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"mNOfBemcTowers=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mNtracksOnTower[4801]=",0,"indexed form [1,4800] (number of tracks incident on this tower)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyCut */
static void G__setup_memvarStjTowerEnergyCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut));
   { StjTowerEnergyCut *p; p=(StjTowerEnergyCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyCut2003BemcTower */
static void G__setup_memvarStjTowerEnergyCut2003BemcTower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut2003BemcTower));
   { StjTowerEnergyCut2003BemcTower *p; p=(StjTowerEnergyCut2003BemcTower*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyCutAdc */
static void G__setup_memvarStjTowerEnergyCutAdc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutAdc));
   { StjTowerEnergyCutAdc *p; p=(StjTowerEnergyCutAdc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_factor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyCutBemcStatus */
static void G__setup_memvarStjTowerEnergyCutBemcStatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcStatus));
   { StjTowerEnergyCutBemcStatus *p; p=(StjTowerEnergyCutBemcStatus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_goodStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyCutBemcWestOnly */
static void G__setup_memvarStjTowerEnergyCutBemcWestOnly(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcWestOnly));
   { StjTowerEnergyCutBemcWestOnly *p; p=(StjTowerEnergyCutBemcWestOnly*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyCutEnergy */
static void G__setup_memvarStjTowerEnergyCutEnergy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEnergy));
   { StjTowerEnergyCutEnergy *p; p=(StjTowerEnergyCutEnergy*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyCutEt */
static void G__setup_memvarStjTowerEnergyCutEt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEt));
   { StjTowerEnergyCutEt *p; p=(StjTowerEnergyCutEt*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyListCut */
static void G__setup_memvarStjTowerEnergyListCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListCut));
   { StjTowerEnergyListCut *p; p=(StjTowerEnergyListCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgR),G__defined_typename("CutList"),-1,4,"_cutList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyVariation */
static void G__setup_memvarStjTowerEnergyVariation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariation));
   { StjTowerEnergyVariation *p; p=(StjTowerEnergyVariation*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyListVariation */
static void G__setup_memvarStjTowerEnergyListVariation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListVariation));
   { StjTowerEnergyListVariation *p; p=(StjTowerEnergyListVariation*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgR),G__defined_typename("VarList"),-1,4,"_varList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyPrint */
static void G__setup_memvarStjTowerEnergyPrint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyPrint));
   { StjTowerEnergyPrint *p; p=(StjTowerEnergyPrint*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyToTLorentzVector */
static void G__setup_memvarStjTowerEnergyToTLorentzVector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToTLorentzVector));
   { StjTowerEnergyToTLorentzVector *p; p=(StjTowerEnergyToTLorentzVector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_mass=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyToFourVec */
static void G__setup_memvarStjTowerEnergyToFourVec(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToFourVec));
   { StjTowerEnergyToFourVec *p; p=(StjTowerEnergyToFourVec*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,0,G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToTLorentzVector),-1,-1,4,"_towerenergy2tlorentzvector=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTowerEnergyVariationEnergy */
static void G__setup_memvarStjTowerEnergyVariationEnergy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariationEnergy));
   { StjTowerEnergyVariationEnergy *p; p=(StjTowerEnergyVariationEnergy*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_ratio=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTrackCut */
static void G__setup_memvarStjTrackCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCut));
   { StjTrackCut *p; p=(StjTrackCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTrackCutDca */
static void G__setup_memvarStjTrackCutDca(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDca));
   { StjTrackCutDca *p; p=(StjTrackCutDca*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTrackCutDcaPtDependent */
static void G__setup_memvarStjTrackCutDcaPtDependent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDcaPtDependent));
   { StjTrackCutDcaPtDependent *p; p=(StjTrackCutDcaPtDependent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_pt1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_dcaMax1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_pt2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_dcaMax2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTrackCutEta */
static void G__setup_memvarStjTrackCutEta(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutEta));
   { StjTrackCutEta *p; p=(StjTrackCutEta*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTrackCutFlag */
static void G__setup_memvarStjTrackCutFlag(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutFlag));
   { StjTrackCutFlag *p; p=(StjTrackCutFlag*)0x1000; if (p) { }
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTrackCutNHits */
static void G__setup_memvarStjTrackCutNHits(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutNHits));
   { StjTrackCutNHits *p; p=(StjTrackCutNHits*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTrackCutPossibleHitRatio */
static void G__setup_memvarStjTrackCutPossibleHitRatio(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutPossibleHitRatio));
   { StjTrackCutPossibleHitRatio *p; p=(StjTrackCutPossibleHitRatio*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_minRatio=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTrackListCut */
static void G__setup_memvarStjTrackListCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackListCut));
   { StjTrackListCut *p; p=(StjTrackListCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgR),G__defined_typename("CutList"),-1,4,"_cutList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTrackPrint */
static void G__setup_memvarStjTrackPrint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackPrint));
   { StjTrackPrint *p; p=(StjTrackPrint*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTrackToTLorentzVector */
static void G__setup_memvarStjTrackToTLorentzVector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackToTLorentzVector));
   { StjTrackToTLorentzVector *p; p=(StjTrackToTLorentzVector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_mass=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTrackToFourVec */
static void G__setup_memvarStjTrackToFourVec(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackToFourVec));
   { StjTrackToFourVec *p; p=(StjTrackToFourVec*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,0,G__get_linked_tagnum(&G__BaseDictLN_StjTrackToTLorentzVector),-1,-1,4,"_track2tlorentzvector=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjTrackTowerEnergyListToFourVecList */
static void G__setup_memvarStjTrackTowerEnergyListToFourVecList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackTowerEnergyListToFourVecList));
   { StjTrackTowerEnergyListToFourVecList *p; p=(StjTrackTowerEnergyListToFourVecList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjDijetListTrigger */
static void G__setup_memvarStjDijetListTrigger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTrigger));
   { StjDijetListTrigger *p; p=(StjDijetListTrigger*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjDijetListTriggerBJP */
static void G__setup_memvarStjDijetListTriggerBJP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBJP));
   { StjDijetListTriggerBJP *p; p=(StjDijetListTriggerBJP*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StjDijetListTriggerBHT */
static void G__setup_memvarStjDijetListTriggerBHT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBHT));
   { StjDijetListTriggerBHT *p; p=(StjDijetListTriggerBHT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBaseDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStjTowerEnergy(void) {
   /* StjTowerEnergy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy));
   G__memfunc_setup("Class",502,G__BaseDict_139_0_1, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergy::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_139_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergy::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_139_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergy::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_139_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergy::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_139_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_139_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergy::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_139_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergy::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_139_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergy::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_139_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergy::DeclFileLine), 0);
   // automatic default constructor
   G__memfunc_setup("StjTowerEnergy", 1452, G__BaseDict_139_0_13, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergy", 1452, G__BaseDict_139_0_14, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergy", 1578, G__BaseDict_139_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_139_0_16, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR(void) {
   /* vector<StjTowerEnergy,allocator<StjTowerEnergy> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR));
   G__memfunc_setup("at",213,G__BaseDict_141_0_1, 117, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy), -1, 1, 1, 1, 1, 0, "k - 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__BaseDict_141_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__BaseDict_141_0_3, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__BaseDict_141_0_4, 117, G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiteratorgR), G__defined_typename("vector<StjTowerEnergy,allocator<StjTowerEnergy> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__BaseDict_141_0_5, 117, G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiteratorgR), G__defined_typename("vector<StjTowerEnergy,allocator<StjTowerEnergy> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__BaseDict_141_0_6, 107, -1, G__defined_typename("vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__BaseDict_141_0_7, 107, -1, G__defined_typename("vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BaseDict_141_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BaseDict_141_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type' 0 - sz u 'StjTowerEnergy' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__BaseDict_141_0_10, 107, -1, G__defined_typename("vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__BaseDict_141_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseDict_141_0_12, 117, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy), -1, 1, 1, 1, 1, 0, "k - 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjTowerEnergy,allocator<StjTowerEnergy> >",4844,G__BaseDict_141_0_13, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjTowerEnergy,allocator<StjTowerEnergy> >",4844,G__BaseDict_141_0_14, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type' 0 - n u 'StjTowerEnergy' - 11 'StjTowerEnergy()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjTowerEnergy,allocator<StjTowerEnergy> >",4844,G__BaseDict_141_0_15, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjTowerEnergy,allocator<StjTowerEnergy> >",4844,G__BaseDict_141_0_16, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator' 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::const_iterator' 10 - first u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator' 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseDict_141_0_17, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__BaseDict_141_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__BaseDict_141_0_19, 117, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__BaseDict_141_0_20, 117, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__BaseDict_141_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__BaseDict_141_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_141_0_23, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator' - 0 - position u 'StjTowerEnergy' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_141_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator' - 0 - position u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator' 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::const_iterator' 10 - first "
"u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator' 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_141_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator' - 0 - position k - 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::size_type' 0 - n "
"u 'StjTowerEnergy' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__BaseDict_141_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BaseDict_141_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BaseDict_141_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator' - 0 - first u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__BaseDict_141_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<StjTowerEnergy,allocator<StjTowerEnergy> >", 4970, G__BaseDict_141_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjBEMC(void) {
   /* StjBEMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMC));
   G__memfunc_setup("Init",404,G__BaseDict_144_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getEnergyList",1350,G__BaseDict_144_0_3, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), G__defined_typename("StjTowerEnergyList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseDict_144_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjBEMC::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_144_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjBEMC::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_144_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjBEMC::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_144_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjBEMC::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_144_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_144_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjBEMC::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_144_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjBEMC::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_144_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjBEMC::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_144_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjBEMC::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjBEMC", 710, G__BaseDict_144_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_144_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjBEMC), -1, 1, 1, 1, 1, 0, "u 'StjBEMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjBEMCNull(void) {
   /* StjBEMCNull */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCNull));
   G__memfunc_setup("StjBEMCNull",995,G__BaseDict_145_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjBEMCNull), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergyList",1350,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), G__defined_typename("StjTowerEnergyList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_145_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjBEMCNull::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_145_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjBEMCNull::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_145_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjBEMCNull::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_145_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjBEMCNull::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_145_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_145_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjBEMCNull::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_145_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjBEMCNull::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_145_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjBEMCNull::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_145_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjBEMCNull::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjBEMCNull", 995, G__BaseDict_145_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjBEMCNull), -1, 0, 1, 1, 1, 0, "u 'StjBEMCNull' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjBEMCNull", 1121, G__BaseDict_145_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_145_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjBEMCNull), -1, 1, 1, 1, 1, 0, "u 'StjBEMCNull' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjBEMCTree(void) {
   /* StjBEMCTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTree));
   G__memfunc_setup("StjBEMCTree",984,G__BaseDict_147_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTree), -1, 0, 1, 1, 1, 0, "U 'StjTowerEnergyListReader' - 0 - reader", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergyList",1350,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), G__defined_typename("StjTowerEnergyList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_147_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjBEMCTree::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_147_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjBEMCTree::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_147_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjBEMCTree::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_147_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjBEMCTree::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_147_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_147_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjBEMCTree::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_147_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjBEMCTree::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_147_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjBEMCTree::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_147_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjBEMCTree::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjBEMCTree", 984, G__BaseDict_147_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTree), -1, 0, 1, 1, 1, 0, "u 'StjBEMCTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjBEMCTree", 1110, G__BaseDict_147_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_147_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTree), -1, 1, 1, 1, 1, 0, "u 'StjBEMCTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjBEMCTxt(void) {
   /* StjBEMCTxt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTxt));
   G__memfunc_setup("StjBEMCTxt",904,G__BaseDict_150_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTxt), -1, 0, 1, 1, 1, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergyList",1350,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), G__defined_typename("StjTowerEnergyList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_150_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjBEMCTxt::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_150_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjBEMCTxt::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_150_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjBEMCTxt::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_150_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjBEMCTxt::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_150_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_150_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjBEMCTxt::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_150_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjBEMCTxt::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_150_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjBEMCTxt::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_150_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjBEMCTxt::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjBEMCTxt", 1030, G__BaseDict_150_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjFourVec(void) {
   /* StjFourVec */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVec));
   G__memfunc_setup("Class",502,G__BaseDict_151_0_1, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjFourVec::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_151_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVec::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_151_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjFourVec::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_151_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjFourVec::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_151_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_151_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVec::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_151_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVec::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_151_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVec::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_151_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVec::DeclFileLine), 0);
   // automatic default constructor
   G__memfunc_setup("StjFourVec", 1003, G__BaseDict_151_0_13, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVec), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("StjFourVec", 1003, G__BaseDict_151_0_14, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVec), -1, 0, 1, 1, 1, 0, "u 'StjFourVec' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjFourVec", 1129, G__BaseDict_151_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_151_0_16, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVec), -1, 1, 1, 1, 1, 0, "u 'StjFourVec' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR(void) {
   /* vector<StjFourVec,allocator<StjFourVec> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR));
   G__memfunc_setup("at",213,G__BaseDict_153_0_1, 117, G__get_linked_tagnum(&G__BaseDictLN_StjFourVec), -1, 1, 1, 1, 1, 0, "k - 'vector<StjFourVec,allocator<StjFourVec> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__BaseDict_153_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__BaseDict_153_0_3, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__BaseDict_153_0_4, 117, G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiteratorgR), G__defined_typename("vector<StjFourVec,allocator<StjFourVec> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__BaseDict_153_0_5, 117, G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiteratorgR), G__defined_typename("vector<StjFourVec,allocator<StjFourVec> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__BaseDict_153_0_6, 107, -1, G__defined_typename("vector<StjFourVec,allocator<StjFourVec> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__BaseDict_153_0_7, 107, -1, G__defined_typename("vector<StjFourVec,allocator<StjFourVec> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BaseDict_153_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<StjFourVec,allocator<StjFourVec> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BaseDict_153_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<StjFourVec,allocator<StjFourVec> >::size_type' 0 - sz u 'StjFourVec' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__BaseDict_153_0_10, 107, -1, G__defined_typename("vector<StjFourVec,allocator<StjFourVec> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__BaseDict_153_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseDict_153_0_12, 117, G__get_linked_tagnum(&G__BaseDictLN_StjFourVec), -1, 1, 1, 1, 1, 0, "k - 'vector<StjFourVec,allocator<StjFourVec> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjFourVec,allocator<StjFourVec> >",3946,G__BaseDict_153_0_13, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjFourVec,allocator<StjFourVec> >",3946,G__BaseDict_153_0_14, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<StjFourVec,allocator<StjFourVec> >::size_type' 0 - n u 'StjFourVec' - 11 'StjFourVec()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjFourVec,allocator<StjFourVec> >",3946,G__BaseDict_153_0_15, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<StjFourVec,allocator<StjFourVec> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjFourVec,allocator<StjFourVec> >",3946,G__BaseDict_153_0_16, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<StjFourVec,allocator<StjFourVec> >::iterator' 'vector<StjFourVec,allocator<StjFourVec> >::const_iterator' 10 - first u 'vector<StjFourVec,allocator<StjFourVec> >::iterator' 'vector<StjFourVec,allocator<StjFourVec> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseDict_153_0_17, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<StjFourVec,allocator<StjFourVec> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__BaseDict_153_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<StjFourVec,allocator<StjFourVec> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__BaseDict_153_0_19, 117, G__get_linked_tagnum(&G__BaseDictLN_StjFourVec), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__BaseDict_153_0_20, 117, G__get_linked_tagnum(&G__BaseDictLN_StjFourVec), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__BaseDict_153_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StjFourVec' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__BaseDict_153_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjFourVec,allocator<StjFourVec> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_153_0_23, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<StjFourVec,allocator<StjFourVec> >::iterator' - 0 - position u 'StjFourVec' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_153_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<StjFourVec,allocator<StjFourVec> >::iterator' - 0 - position u 'vector<StjFourVec,allocator<StjFourVec> >::iterator' 'vector<StjFourVec,allocator<StjFourVec> >::const_iterator' 10 - first "
"u 'vector<StjFourVec,allocator<StjFourVec> >::iterator' 'vector<StjFourVec,allocator<StjFourVec> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_153_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<StjFourVec,allocator<StjFourVec> >::iterator' - 0 - position k - 'vector<StjFourVec,allocator<StjFourVec> >::size_type' 0 - n "
"u 'StjFourVec' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__BaseDict_153_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BaseDict_153_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjFourVec,allocator<StjFourVec> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BaseDict_153_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<StjFourVec,allocator<StjFourVec> >::iterator' - 0 - first u 'vector<StjFourVec,allocator<StjFourVec> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__BaseDict_153_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<StjFourVec,allocator<StjFourVec> >", 4072, G__BaseDict_153_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjJet(void) {
   /* StjJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJet));
   G__memfunc_setup("Class",502,G__BaseDict_156_0_1, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjJet::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_156_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJet::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_156_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjJet::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_156_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjJet::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_156_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_156_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJet::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_156_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJet::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_156_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJet::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_156_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJet::DeclFileLine), 0);
   // automatic default constructor
   G__memfunc_setup("StjJet", 596, G__BaseDict_156_0_13, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjJet), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("StjJet", 596, G__BaseDict_156_0_14, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjJet), -1, 0, 1, 1, 1, 0, "u 'StjJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjJet", 722, G__BaseDict_156_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_156_0_16, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjJet), -1, 1, 1, 1, 1, 0, "u 'StjJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEStjJetcOallocatorlEStjJetgRsPgR(void) {
   /* vector<StjJet,allocator<StjJet> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR));
   G__memfunc_setup("at",213,G__BaseDict_158_0_1, 117, G__get_linked_tagnum(&G__BaseDictLN_StjJet), -1, 1, 1, 1, 1, 0, "k - 'vector<StjJet,allocator<StjJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__BaseDict_158_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__BaseDict_158_0_3, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__BaseDict_158_0_4, 117, G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<StjJet,allocator<StjJet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__BaseDict_158_0_5, 117, G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<StjJet,allocator<StjJet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__BaseDict_158_0_6, 107, -1, G__defined_typename("vector<StjJet,allocator<StjJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__BaseDict_158_0_7, 107, -1, G__defined_typename("vector<StjJet,allocator<StjJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BaseDict_158_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<StjJet,allocator<StjJet> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BaseDict_158_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<StjJet,allocator<StjJet> >::size_type' 0 - sz u 'StjJet' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__BaseDict_158_0_10, 107, -1, G__defined_typename("vector<StjJet,allocator<StjJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__BaseDict_158_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseDict_158_0_12, 117, G__get_linked_tagnum(&G__BaseDictLN_StjJet), -1, 1, 1, 1, 1, 0, "k - 'vector<StjJet,allocator<StjJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjJet,allocator<StjJet> >",3132,G__BaseDict_158_0_13, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjJet,allocator<StjJet> >",3132,G__BaseDict_158_0_14, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<StjJet,allocator<StjJet> >::size_type' 0 - n u 'StjJet' - 11 'StjJet()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjJet,allocator<StjJet> >",3132,G__BaseDict_158_0_15, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<StjJet,allocator<StjJet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjJet,allocator<StjJet> >",3132,G__BaseDict_158_0_16, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<StjJet,allocator<StjJet> >::iterator' 'vector<StjJet,allocator<StjJet> >::const_iterator' 10 - first u 'vector<StjJet,allocator<StjJet> >::iterator' 'vector<StjJet,allocator<StjJet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseDict_158_0_17, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<StjJet,allocator<StjJet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__BaseDict_158_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<StjJet,allocator<StjJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__BaseDict_158_0_19, 117, G__get_linked_tagnum(&G__BaseDictLN_StjJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__BaseDict_158_0_20, 117, G__get_linked_tagnum(&G__BaseDictLN_StjJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__BaseDict_158_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StjJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__BaseDict_158_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjJet,allocator<StjJet> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_158_0_23, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<StjJet,allocator<StjJet> >::iterator' - 0 - position u 'StjJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_158_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<StjJet,allocator<StjJet> >::iterator' - 0 - position u 'vector<StjJet,allocator<StjJet> >::iterator' 'vector<StjJet,allocator<StjJet> >::const_iterator' 10 - first "
"u 'vector<StjJet,allocator<StjJet> >::iterator' 'vector<StjJet,allocator<StjJet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_158_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<StjJet,allocator<StjJet> >::iterator' - 0 - position k - 'vector<StjJet,allocator<StjJet> >::size_type' 0 - n "
"u 'StjJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__BaseDict_158_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BaseDict_158_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjJet,allocator<StjJet> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BaseDict_158_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<StjJet,allocator<StjJet> >::iterator' - 0 - first u 'vector<StjJet,allocator<StjJet> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__BaseDict_158_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<StjJet,allocator<StjJet> >", 3258, G__BaseDict_158_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjDijet(void) {
   /* StjDijet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijet));
   G__memfunc_setup("Class",502,G__BaseDict_161_0_1, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjDijet::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_161_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijet::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_161_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjDijet::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_161_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjDijet::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_161_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_161_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijet::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_161_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijet::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_161_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijet::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_161_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijet::DeclFileLine), 0);
   // automatic default constructor
   G__memfunc_setup("StjDijet", 801, G__BaseDict_161_0_13, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjDijet), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("StjDijet", 801, G__BaseDict_161_0_14, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjDijet), -1, 0, 1, 1, 1, 0, "u 'StjDijet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjDijet", 927, G__BaseDict_161_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_161_0_16, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjDijet), -1, 1, 1, 1, 1, 0, "u 'StjDijet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEStjDijetcOallocatorlEStjDijetgRsPgR(void) {
   /* vector<StjDijet,allocator<StjDijet> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR));
   G__memfunc_setup("at",213,G__BaseDict_163_0_1, 117, G__get_linked_tagnum(&G__BaseDictLN_StjDijet), -1, 1, 1, 1, 1, 0, "k - 'vector<StjDijet,allocator<StjDijet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__BaseDict_163_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__BaseDict_163_0_3, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__BaseDict_163_0_4, 117, G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiteratorgR), G__defined_typename("vector<StjDijet,allocator<StjDijet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__BaseDict_163_0_5, 117, G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiteratorgR), G__defined_typename("vector<StjDijet,allocator<StjDijet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__BaseDict_163_0_6, 107, -1, G__defined_typename("vector<StjDijet,allocator<StjDijet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__BaseDict_163_0_7, 107, -1, G__defined_typename("vector<StjDijet,allocator<StjDijet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BaseDict_163_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<StjDijet,allocator<StjDijet> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BaseDict_163_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<StjDijet,allocator<StjDijet> >::size_type' 0 - sz u 'StjDijet' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__BaseDict_163_0_10, 107, -1, G__defined_typename("vector<StjDijet,allocator<StjDijet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__BaseDict_163_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseDict_163_0_12, 117, G__get_linked_tagnum(&G__BaseDictLN_StjDijet), -1, 1, 1, 1, 1, 0, "k - 'vector<StjDijet,allocator<StjDijet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjDijet,allocator<StjDijet> >",3542,G__BaseDict_163_0_13, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjDijet,allocator<StjDijet> >",3542,G__BaseDict_163_0_14, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<StjDijet,allocator<StjDijet> >::size_type' 0 - n u 'StjDijet' - 11 'StjDijet()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjDijet,allocator<StjDijet> >",3542,G__BaseDict_163_0_15, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<StjDijet,allocator<StjDijet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjDijet,allocator<StjDijet> >",3542,G__BaseDict_163_0_16, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<StjDijet,allocator<StjDijet> >::iterator' 'vector<StjDijet,allocator<StjDijet> >::const_iterator' 10 - first u 'vector<StjDijet,allocator<StjDijet> >::iterator' 'vector<StjDijet,allocator<StjDijet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseDict_163_0_17, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<StjDijet,allocator<StjDijet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__BaseDict_163_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<StjDijet,allocator<StjDijet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__BaseDict_163_0_19, 117, G__get_linked_tagnum(&G__BaseDictLN_StjDijet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__BaseDict_163_0_20, 117, G__get_linked_tagnum(&G__BaseDictLN_StjDijet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__BaseDict_163_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StjDijet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__BaseDict_163_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjDijet,allocator<StjDijet> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_163_0_23, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<StjDijet,allocator<StjDijet> >::iterator' - 0 - position u 'StjDijet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_163_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<StjDijet,allocator<StjDijet> >::iterator' - 0 - position u 'vector<StjDijet,allocator<StjDijet> >::iterator' 'vector<StjDijet,allocator<StjDijet> >::const_iterator' 10 - first "
"u 'vector<StjDijet,allocator<StjDijet> >::iterator' 'vector<StjDijet,allocator<StjDijet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_163_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<StjDijet,allocator<StjDijet> >::iterator' - 0 - position k - 'vector<StjDijet,allocator<StjDijet> >::size_type' 0 - n "
"u 'StjDijet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__BaseDict_163_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BaseDict_163_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjDijet,allocator<StjDijet> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BaseDict_163_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<StjDijet,allocator<StjDijet> >::iterator' - 0 - first u 'vector<StjDijet,allocator<StjDijet> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__BaseDict_163_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<StjDijet,allocator<StjDijet> >", 3668, G__BaseDict_163_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjDijetCut(void) {
   /* StjDijetCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCut));
   G__memfunc_setup("operator()",957,G__BaseDict_166_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "u 'StjDijet' - 11 - dijet", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseDict_166_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjDijetCut::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_166_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCut::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_166_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjDijetCut::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_166_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjDijetCut::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_166_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_166_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCut::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_166_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCut::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_166_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCut::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_166_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCut::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjDijetCut", 1227, G__BaseDict_166_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_166_0_16, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetCut), -1, 1, 1, 1, 1, 0, "u 'StjDijetCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjDijetCutAsymmetricPt(void) {
   /* StjDijetCutAsymmetricPt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutAsymmetricPt));
   G__memfunc_setup("StjDijetCutAsymmetricPt",2351,G__BaseDict_167_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutAsymmetricPt), -1, 0, 2, 1, 1, 0, 
"d - - 0 - minMin d - - 0 - maxMin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjDijet' - 11 - dijet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_167_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjDijetCutAsymmetricPt::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_167_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutAsymmetricPt::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_167_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjDijetCutAsymmetricPt::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_167_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjDijetCutAsymmetricPt::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_167_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_167_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutAsymmetricPt::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_167_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCutAsymmetricPt::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_167_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutAsymmetricPt::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_167_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCutAsymmetricPt::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjDijetCutAsymmetricPt", 2351, G__BaseDict_167_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutAsymmetricPt), -1, 0, 1, 1, 1, 0, "u 'StjDijetCutAsymmetricPt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjDijetCutAsymmetricPt", 2477, G__BaseDict_167_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_167_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutAsymmetricPt), -1, 1, 1, 1, 1, 0, "u 'StjDijetCutAsymmetricPt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjDijetCutDPhi(void) {
   /* StjDijetCutDPhi */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutDPhi));
   G__memfunc_setup("StjDijetCutDPhi",1458,G__BaseDict_168_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutDPhi), -1, 0, 2, 1, 1, 0, 
"d - - 0 '2.0' min d - - 0 '10.0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjDijet' - 11 - dijet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_168_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjDijetCutDPhi::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_168_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutDPhi::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_168_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjDijetCutDPhi::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_168_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjDijetCutDPhi::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_168_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_168_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutDPhi::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_168_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCutDPhi::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_168_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutDPhi::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_168_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCutDPhi::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjDijetCutDPhi", 1458, G__BaseDict_168_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutDPhi), -1, 0, 1, 1, 1, 0, "u 'StjDijetCutDPhi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjDijetCutDPhi", 1584, G__BaseDict_168_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_168_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutDPhi), -1, 1, 1, 1, 1, 0, "u 'StjDijetCutDPhi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjJetCut(void) {
   /* StjJetCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCut));
   G__memfunc_setup("operator()",957,G__BaseDict_169_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "u 'StjJet' - 11 - jet", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseDict_169_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjJetCut::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_169_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCut::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_169_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjJetCut::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_169_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjJetCut::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_169_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_169_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCut::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_169_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCut::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_169_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCut::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_169_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCut::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjJetCut", 1022, G__BaseDict_169_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_169_0_16, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjJetCut), -1, 1, 1, 1, 1, 0, "u 'StjJetCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjJetCutEta(void) {
   /* StjJetCutEta */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutEta));
   G__memfunc_setup("StjJetCutEta",1178,G__BaseDict_170_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjJetCutEta), -1, 0, 2, 1, 1, 0, 
"d - - 0 '-10.0' min d - - 0 '10.0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjJet' - 11 - jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_170_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjJetCutEta::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_170_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutEta::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_170_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjJetCutEta::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_170_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjJetCutEta::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_170_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_170_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutEta::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_170_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCutEta::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_170_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutEta::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_170_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCutEta::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjJetCutEta", 1178, G__BaseDict_170_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjJetCutEta), -1, 0, 1, 1, 1, 0, "u 'StjJetCutEta' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjJetCutEta", 1304, G__BaseDict_170_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_170_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjJetCutEta), -1, 1, 1, 1, 1, 0, "u 'StjJetCutEta' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjDijetCutEta(void) {
   /* StjDijetCutEta */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta));
   G__memfunc_setup("StjDijetCutEta",1383,G__BaseDict_171_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta), -1, 0, 2, 1, 1, 0, 
"d - - 0 '-10.0' min d - - 0 '10.0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjDijet' - 11 - dijet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_171_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjDijetCutEta::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_171_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutEta::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_171_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjDijetCutEta::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_171_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjDijetCutEta::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_171_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_171_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutEta::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_171_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCutEta::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_171_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutEta::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_171_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCutEta::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjDijetCutEta", 1383, G__BaseDict_171_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta), -1, 0, 1, 1, 1, 0, "u 'StjDijetCutEta' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjDijetCutEta", 1509, G__BaseDict_171_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_171_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta), -1, 1, 1, 1, 1, 0, "u 'StjDijetCutEta' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjDijetCutEta3MinusEta4(void) {
   /* StjDijetCutEta3MinusEta4 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta3MinusEta4));
   G__memfunc_setup("StjDijetCutEta3MinusEta4",2292,G__BaseDict_172_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta3MinusEta4), -1, 0, 2, 1, 1, 0, 
"d - - 0 '0.5' max d - - 0 '0.0' min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjDijet' - 11 - dijet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_172_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjDijetCutEta3MinusEta4::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_172_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutEta3MinusEta4::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_172_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjDijetCutEta3MinusEta4::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_172_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjDijetCutEta3MinusEta4::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_172_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_172_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutEta3MinusEta4::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_172_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCutEta3MinusEta4::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_172_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutEta3MinusEta4::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_172_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCutEta3MinusEta4::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjDijetCutEta3MinusEta4", 2292, G__BaseDict_172_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta3MinusEta4), -1, 0, 1, 1, 1, 0, "u 'StjDijetCutEta3MinusEta4' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjDijetCutEta3MinusEta4", 2418, G__BaseDict_172_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_172_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta3MinusEta4), -1, 1, 1, 1, 1, 0, "u 'StjDijetCutEta3MinusEta4' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjFourVecCut(void) {
   /* StjFourVecCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCut));
   G__memfunc_setup("operator()",957,G__BaseDict_173_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "u 'StjFourVec' - 11 - p4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseDict_173_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjFourVecCut::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_173_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecCut::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_173_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjFourVecCut::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_173_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjFourVecCut::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_173_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_173_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecCut::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_173_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVecCut::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_173_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecCut::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_173_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVecCut::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjFourVecCut", 1429, G__BaseDict_173_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_173_0_16, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCut), -1, 1, 1, 1, 1, 0, "u 'StjFourVecCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjFourVecListCut(void) {
   /* StjFourVecListCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecListCut));
   G__memfunc_setup("StjFourVecListCut",1715,G__BaseDict_174_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjFourVecListCut), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_174_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR), G__defined_typename("StjFourVecList"), 0, 1, 1, 1, 0, "u 'vector<StjFourVec,allocator<StjFourVec> >' 'StjFourVecList' 11 - fourList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCut",597,G__BaseDict_174_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StjFourVecCut' - 0 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCutList",1032,G__BaseDict_174_0_4, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgR), G__defined_typename("StjFourVecListCut::CutList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("shouldNotKeep",1349,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'StjFourVec' - 11 - p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_174_0_6, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjFourVecListCut::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_174_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecListCut::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_174_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjFourVecListCut::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_174_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjFourVecListCut::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_174_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_174_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecListCut::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_174_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVecListCut::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_174_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecListCut::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_174_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVecListCut::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjFourVecListCut", 1715, G__BaseDict_174_0_18, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVecListCut), -1, 0, 1, 1, 1, 0, "u 'StjFourVecListCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjFourVecListCut", 1841, G__BaseDict_174_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_174_0_20, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVecListCut), -1, 1, 1, 1, 1, 0, "u 'StjFourVecListCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjJetCutTrgBHT(void) {
   /* StjJetCutTrgBHT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBHT));
   G__memfunc_setup("StjJetCutTrgBHT",1419,G__BaseDict_180_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBHT), -1, 0, 1, 1, 1, 0, "U 'StjTrg' - 0 - trg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjJet' - 11 - jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_180_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjJetCutTrgBHT::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_180_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutTrgBHT::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_180_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjJetCutTrgBHT::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_180_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjJetCutTrgBHT::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_180_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_180_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutTrgBHT::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_180_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCutTrgBHT::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_180_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutTrgBHT::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_180_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCutTrgBHT::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjJetCutTrgBHT", 1419, G__BaseDict_180_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBHT), -1, 0, 1, 1, 1, 0, "u 'StjJetCutTrgBHT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjJetCutTrgBHT", 1545, G__BaseDict_180_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_180_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBHT), -1, 1, 1, 1, 1, 0, "u 'StjJetCutTrgBHT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjDijetCutTrgBHT(void) {
   /* StjDijetCutTrgBHT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBHT));
   G__memfunc_setup("StjDijetCutTrgBHT",1624,G__BaseDict_181_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBHT), -1, 0, 1, 1, 1, 0, "U 'StjTrg' - 0 - trg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjDijet' - 11 - dijet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_181_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjDijetCutTrgBHT::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_181_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutTrgBHT::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_181_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjDijetCutTrgBHT::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_181_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjDijetCutTrgBHT::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_181_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_181_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutTrgBHT::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_181_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCutTrgBHT::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_181_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutTrgBHT::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_181_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCutTrgBHT::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjDijetCutTrgBHT", 1624, G__BaseDict_181_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBHT), -1, 0, 1, 1, 1, 0, "u 'StjDijetCutTrgBHT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjDijetCutTrgBHT", 1750, G__BaseDict_181_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_181_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBHT), -1, 1, 1, 1, 1, 0, "u 'StjDijetCutTrgBHT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjJetCutTrgBJP(void) {
   /* StjJetCutTrgBJP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBJP));
   G__memfunc_setup("StjJetCutTrgBJP",1417,G__BaseDict_183_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBJP), -1, 0, 2, 1, 1, 0, 
"U 'StjTrg' - 0 - trg U 'StjTrgBEMCJetPatchTowerIdMap' - 0 - jetPatchTowerMap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjJet' - 11 - jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_183_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjJetCutTrgBJP::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_183_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutTrgBJP::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_183_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjJetCutTrgBJP::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_183_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjJetCutTrgBJP::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_183_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_183_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutTrgBJP::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_183_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCutTrgBJP::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_183_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutTrgBJP::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_183_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCutTrgBJP::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjJetCutTrgBJP", 1417, G__BaseDict_183_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBJP), -1, 0, 1, 1, 1, 0, "u 'StjJetCutTrgBJP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjJetCutTrgBJP", 1543, G__BaseDict_183_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_183_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBJP), -1, 1, 1, 1, 1, 0, "u 'StjJetCutTrgBJP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjDijetCutTrgBJP(void) {
   /* StjDijetCutTrgBJP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBJP));
   G__memfunc_setup("StjDijetCutTrgBJP",1622,G__BaseDict_184_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBJP), -1, 0, 2, 1, 1, 0, 
"U 'StjTrg' - 0 - trg U 'StjTrgBEMCJetPatchTowerIdMap' - 0 - jetPatchTowerMap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjDijet' - 11 - dijet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_184_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjDijetCutTrgBJP::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_184_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutTrgBJP::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_184_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjDijetCutTrgBJP::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_184_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjDijetCutTrgBJP::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_184_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_184_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutTrgBJP::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_184_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCutTrgBJP::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_184_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetCutTrgBJP::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_184_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetCutTrgBJP::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjDijetCutTrgBJP", 1622, G__BaseDict_184_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBJP), -1, 0, 1, 1, 1, 0, "u 'StjDijetCutTrgBJP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjDijetCutTrgBJP", 1748, G__BaseDict_184_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_184_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBJP), -1, 1, 1, 1, 1, 0, "u 'StjDijetCutTrgBJP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjDijetListCut(void) {
   /* StjDijetListCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListCut));
   G__memfunc_setup("StjDijetListCut",1513,G__BaseDict_185_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjDijetListCut), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_185_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR), G__defined_typename("StjDijetList"), 0, 1, 1, 1, 0, "u 'vector<StjDijet,allocator<StjDijet> >' 'StjDijetList' 11 - dijetList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCut",597,G__BaseDict_185_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StjDijetCut' - 0 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCutList",1032,G__BaseDict_185_0_4, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgR), G__defined_typename("StjDijetListCut::CutList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("shouldNotKeep",1349,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'StjDijet' - 11 - p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_185_0_6, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjDijetListCut::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_185_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetListCut::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_185_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjDijetListCut::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_185_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjDijetListCut::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_185_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_185_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetListCut::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_185_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetListCut::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_185_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetListCut::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_185_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetListCut::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjDijetListCut", 1513, G__BaseDict_185_0_18, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetListCut), -1, 0, 1, 1, 1, 0, "u 'StjDijetListCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjDijetListCut", 1639, G__BaseDict_185_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_185_0_20, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetListCut), -1, 1, 1, 1, 1, 0, "u 'StjDijetListCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjDijetPrint(void) {
   /* StjDijetPrint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetPrint));
   G__memfunc_setup("StjDijetPrint",1326,G__BaseDict_190_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjDijetPrint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_190_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjDijet,allocator<StjDijet> >' 'StjDijetList' 11 - dijetList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'StjDijet' - 11 - dijet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_190_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjDijetPrint::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_190_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetPrint::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_190_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjDijetPrint::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_190_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjDijetPrint::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_190_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_190_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetPrint::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_190_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetPrint::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_190_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetPrint::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_190_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetPrint::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjDijetPrint", 1326, G__BaseDict_190_0_16, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetPrint), -1, 0, 1, 1, 1, 0, "u 'StjDijetPrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjDijetPrint", 1452, G__BaseDict_190_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_190_0_18, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetPrint), -1, 1, 1, 1, 1, 0, "u 'StjDijetPrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjEEMC(void) {
   /* StjEEMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMC));
   G__memfunc_setup("Init",404,G__BaseDict_191_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getEnergyList",1350,G__BaseDict_191_0_3, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), G__defined_typename("StjTowerEnergyList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseDict_191_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjEEMC::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_191_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjEEMC::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_191_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjEEMC::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_191_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjEEMC::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_191_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_191_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjEEMC::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_191_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjEEMC::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_191_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjEEMC::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_191_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjEEMC::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjEEMC", 713, G__BaseDict_191_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_191_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjEEMC), -1, 1, 1, 1, 1, 0, "u 'StjEEMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjEEMCNull(void) {
   /* StjEEMCNull */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMCNull));
   G__memfunc_setup("StjEEMCNull",998,G__BaseDict_192_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjEEMCNull), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergyList",1350,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), G__defined_typename("StjTowerEnergyList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_192_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjEEMCNull::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_192_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjEEMCNull::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_192_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjEEMCNull::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_192_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjEEMCNull::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_192_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_192_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjEEMCNull::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_192_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjEEMCNull::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_192_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjEEMCNull::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_192_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjEEMCNull::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjEEMCNull", 998, G__BaseDict_192_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjEEMCNull), -1, 0, 1, 1, 1, 0, "u 'StjEEMCNull' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjEEMCNull", 1124, G__BaseDict_192_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_192_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjEEMCNull), -1, 1, 1, 1, 1, 0, "u 'StjEEMCNull' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjEEMCTxt(void) {
   /* StjEEMCTxt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMCTxt));
   G__memfunc_setup("StjEEMCTxt",907,G__BaseDict_193_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjEEMCTxt), -1, 0, 1, 1, 1, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergyList",1350,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), G__defined_typename("StjTowerEnergyList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_193_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjEEMCTxt::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_193_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjEEMCTxt::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_193_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjEEMCTxt::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_193_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjEEMCTxt::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_193_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_193_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjEEMCTxt::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_193_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjEEMCTxt::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_193_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjEEMCTxt::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_193_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjEEMCTxt::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjEEMCTxt", 1033, G__BaseDict_193_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjFormDijet(void) {
   /* StjFormDijet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFormDijet));
   G__memfunc_setup("StjFormDijet",1205,G__BaseDict_194_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjFormDijet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_194_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR), G__defined_typename("StjDijetList"), 0, 1, 1, 1, 0, "u 'vector<StjJet,allocator<StjJet> >' 'StjJetList' 0 - jetList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_194_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjFormDijet::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_194_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFormDijet::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_194_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjFormDijet::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_194_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjFormDijet::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_194_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_194_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFormDijet::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_194_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFormDijet::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_194_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFormDijet::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_194_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFormDijet::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjFormDijet", 1205, G__BaseDict_194_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjFormDijet), -1, 0, 1, 1, 1, 0, "u 'StjFormDijet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjFormDijet", 1331, G__BaseDict_194_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_194_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjFormDijet), -1, 1, 1, 1, 1, 0, "u 'StjFormDijet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjFourVecCutPt(void) {
   /* StjFourVecCutPt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutPt));
   G__memfunc_setup("StjFourVecCutPt",1499,G__BaseDict_196_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutPt), -1, 0, 2, 1, 1, 0, 
"d - - 0 '0' min d - - 0 '50000.0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjFourVec' - 11 - p4", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_196_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjFourVecCutPt::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_196_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecCutPt::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_196_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjFourVecCutPt::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_196_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjFourVecCutPt::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_196_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_196_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecCutPt::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_196_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVecCutPt::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_196_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecCutPt::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_196_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVecCutPt::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjFourVecCutPt", 1499, G__BaseDict_196_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutPt), -1, 0, 1, 1, 1, 0, "u 'StjFourVecCutPt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjFourVecCutPt", 1625, G__BaseDict_196_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_196_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutPt), -1, 1, 1, 1, 1, 0, "u 'StjFourVecCutPt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjFourVecCutTrgBHT(void) {
   /* StjFourVecCutTrgBHT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBHT));
   G__memfunc_setup("StjFourVecCutTrgBHT",1826,G__BaseDict_197_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBHT), -1, 0, 1, 1, 1, 0, "U 'StjTrg' - 0 - trg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjFourVec' - 11 - p4", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_197_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjFourVecCutTrgBHT::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_197_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecCutTrgBHT::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_197_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjFourVecCutTrgBHT::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_197_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjFourVecCutTrgBHT::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_197_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_197_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecCutTrgBHT::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_197_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVecCutTrgBHT::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_197_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecCutTrgBHT::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_197_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVecCutTrgBHT::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjFourVecCutTrgBHT", 1826, G__BaseDict_197_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBHT), -1, 0, 1, 1, 1, 0, "u 'StjFourVecCutTrgBHT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjFourVecCutTrgBHT", 1952, G__BaseDict_197_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_197_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBHT), -1, 1, 1, 1, 1, 0, "u 'StjFourVecCutTrgBHT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjFourVecCutTrgBJP(void) {
   /* StjFourVecCutTrgBJP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBJP));
   G__memfunc_setup("StjFourVecCutTrgBJP",1824,G__BaseDict_198_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBJP), -1, 0, 2, 1, 1, 0, 
"U 'StjTrg' - 0 - trg U 'StjTrgBEMCJetPatchTowerIdMap' - 0 - jetPatchTowerMap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjFourVec' - 11 - p4", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getTowersFor",1259,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 4, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 11 - jetPatches", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_198_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjFourVecCutTrgBJP::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_198_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecCutTrgBJP::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_198_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjFourVecCutTrgBJP::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_198_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjFourVecCutTrgBJP::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_198_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_198_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecCutTrgBJP::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_198_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVecCutTrgBJP::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_198_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecCutTrgBJP::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_198_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVecCutTrgBJP::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjFourVecCutTrgBJP", 1824, G__BaseDict_198_0_16, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBJP), -1, 0, 1, 1, 1, 0, "u 'StjFourVecCutTrgBJP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjFourVecCutTrgBJP", 1950, G__BaseDict_198_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_198_0_18, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBJP), -1, 1, 1, 1, 1, 0, "u 'StjFourVecCutTrgBJP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjFourVecPrint(void) {
   /* StjFourVecPrint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecPrint));
   G__memfunc_setup("StjFourVecPrint",1528,G__BaseDict_203_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjFourVecPrint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_203_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjFourVec,allocator<StjFourVec> >' 'StjFourVecList' 11 - fourList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'StjFourVec' - 11 - four", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_203_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjFourVecPrint::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_203_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecPrint::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_203_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjFourVecPrint::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_203_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjFourVecPrint::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_203_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_203_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecPrint::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_203_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVecPrint::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_203_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjFourVecPrint::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_203_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjFourVecPrint::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjFourVecPrint", 1528, G__BaseDict_203_0_16, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVecPrint), -1, 0, 1, 1, 1, 0, "u 'StjFourVecPrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjFourVecPrint", 1654, G__BaseDict_203_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_203_0_18, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjFourVecPrint), -1, 1, 1, 1, 1, 0, "u 'StjFourVecPrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjJetCutDetectorEta(void) {
   /* StjJetCutDetectorEta */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutDetectorEta));
   G__memfunc_setup("StjJetCutDetectorEta",2004,G__BaseDict_204_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjJetCutDetectorEta), -1, 0, 2, 1, 1, 0, 
"d - - 0 '-10.0' min d - - 0 '10.0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjJet' - 11 - jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_204_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjJetCutDetectorEta::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_204_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutDetectorEta::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_204_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjJetCutDetectorEta::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_204_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjJetCutDetectorEta::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_204_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_204_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutDetectorEta::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_204_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCutDetectorEta::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_204_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutDetectorEta::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_204_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCutDetectorEta::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjJetCutDetectorEta", 2004, G__BaseDict_204_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjJetCutDetectorEta), -1, 0, 1, 1, 1, 0, "u 'StjJetCutDetectorEta' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjJetCutDetectorEta", 2130, G__BaseDict_204_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_204_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjJetCutDetectorEta), -1, 1, 1, 1, 1, 0, "u 'StjJetCutDetectorEta' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjJetCutNFourVecs(void) {
   /* StjJetCutNFourVecs */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutNFourVecs));
   G__memfunc_setup("StjJetCutNFourVecs",1787,G__BaseDict_205_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjJetCutNFourVecs), -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 '0' min k - 'size_t' 0 '60000' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjJet' - 11 - jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_205_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjJetCutNFourVecs::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_205_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutNFourVecs::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_205_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjJetCutNFourVecs::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_205_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjJetCutNFourVecs::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_205_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_205_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutNFourVecs::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_205_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCutNFourVecs::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_205_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutNFourVecs::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_205_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCutNFourVecs::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjJetCutNFourVecs", 1787, G__BaseDict_205_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjJetCutNFourVecs), -1, 0, 1, 1, 1, 0, "u 'StjJetCutNFourVecs' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjJetCutNFourVecs", 1913, G__BaseDict_205_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_205_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjJetCutNFourVecs), -1, 1, 1, 1, 1, 0, "u 'StjJetCutNFourVecs' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjJetCutPt(void) {
   /* StjJetCutPt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutPt));
   G__memfunc_setup("StjJetCutPt",1092,G__BaseDict_206_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjJetCutPt), -1, 0, 2, 1, 1, 0, 
"d - - 0 '0' min d - - 0 '50000.0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjJet' - 11 - jet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_206_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjJetCutPt::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_206_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutPt::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_206_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjJetCutPt::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_206_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjJetCutPt::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_206_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_206_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutPt::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_206_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCutPt::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_206_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetCutPt::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_206_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetCutPt::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjJetCutPt", 1092, G__BaseDict_206_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjJetCutPt), -1, 0, 1, 1, 1, 0, "u 'StjJetCutPt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjJetCutPt", 1218, G__BaseDict_206_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_206_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjJetCutPt), -1, 1, 1, 1, 1, 0, "u 'StjJetCutPt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjJetListCut(void) {
   /* StjJetListCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetListCut));
   G__memfunc_setup("StjJetListCut",1308,G__BaseDict_207_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjJetListCut), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_207_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR), G__defined_typename("StjJetList"), 0, 1, 1, 1, 0, "u 'vector<StjJet,allocator<StjJet> >' 'StjJetList' 11 - fourList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCut",597,G__BaseDict_207_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StjJetCut' - 0 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCutList",1032,G__BaseDict_207_0_4, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgR), G__defined_typename("StjJetListCut::CutList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("shouldNotKeep",1349,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'StjJet' - 11 - p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_207_0_6, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjJetListCut::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_207_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetListCut::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_207_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjJetListCut::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_207_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjJetListCut::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_207_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_207_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetListCut::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_207_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetListCut::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_207_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetListCut::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_207_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetListCut::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjJetListCut", 1308, G__BaseDict_207_0_18, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjJetListCut), -1, 0, 1, 1, 1, 0, "u 'StjJetListCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjJetListCut", 1434, G__BaseDict_207_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_207_0_20, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjJetListCut), -1, 1, 1, 1, 1, 0, "u 'StjJetListCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjJetPrint(void) {
   /* StjJetPrint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetPrint));
   G__memfunc_setup("StjJetPrint",1121,G__BaseDict_212_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjJetPrint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_212_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjJet,allocator<StjJet> >' 'StjJetList' 11 - jetList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'StjJet' - 11 - jet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_212_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjJetPrint::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_212_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetPrint::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_212_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjJetPrint::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_212_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjJetPrint::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_212_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_212_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetPrint::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_212_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetPrint::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_212_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjJetPrint::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_212_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjJetPrint::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjJetPrint", 1121, G__BaseDict_212_0_16, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjJetPrint), -1, 0, 1, 1, 1, 0, "u 'StjJetPrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjJetPrint", 1247, G__BaseDict_212_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_212_0_18, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjJetPrint), -1, 1, 1, 1, 1, 0, "u 'StjJetPrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjMCParticle(void) {
   /* StjMCParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle));
   G__memfunc_setup("Class",502,G__BaseDict_213_0_1, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjMCParticle::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_213_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticle::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_213_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjMCParticle::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_213_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjMCParticle::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_213_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_213_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticle::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_213_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticle::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_213_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticle::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_213_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticle::DeclFileLine), 0);
   // automatic default constructor
   G__memfunc_setup("StjMCParticle", 1269, G__BaseDict_213_0_13, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("StjMCParticle", 1269, G__BaseDict_213_0_14, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle), -1, 0, 1, 1, 1, 0, "u 'StjMCParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjMCParticle", 1395, G__BaseDict_213_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_213_0_16, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle), -1, 1, 1, 1, 1, 0, "u 'StjMCParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR(void) {
   /* vector<StjMCParticle,allocator<StjMCParticle> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR));
   G__memfunc_setup("at",213,G__BaseDict_215_0_1, 117, G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle), -1, 1, 1, 1, 1, 0, "k - 'vector<StjMCParticle,allocator<StjMCParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__BaseDict_215_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__BaseDict_215_0_3, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__BaseDict_215_0_4, 117, G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiteratorgR), G__defined_typename("vector<StjMCParticle,allocator<StjMCParticle> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__BaseDict_215_0_5, 117, G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiteratorgR), G__defined_typename("vector<StjMCParticle,allocator<StjMCParticle> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__BaseDict_215_0_6, 107, -1, G__defined_typename("vector<StjMCParticle,allocator<StjMCParticle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__BaseDict_215_0_7, 107, -1, G__defined_typename("vector<StjMCParticle,allocator<StjMCParticle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BaseDict_215_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<StjMCParticle,allocator<StjMCParticle> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BaseDict_215_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<StjMCParticle,allocator<StjMCParticle> >::size_type' 0 - sz u 'StjMCParticle' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__BaseDict_215_0_10, 107, -1, G__defined_typename("vector<StjMCParticle,allocator<StjMCParticle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__BaseDict_215_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseDict_215_0_12, 117, G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle), -1, 1, 1, 1, 1, 0, "k - 'vector<StjMCParticle,allocator<StjMCParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjMCParticle,allocator<StjMCParticle> >",4478,G__BaseDict_215_0_13, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjMCParticle,allocator<StjMCParticle> >",4478,G__BaseDict_215_0_14, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<StjMCParticle,allocator<StjMCParticle> >::size_type' 0 - n u 'StjMCParticle' - 11 'StjMCParticle()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjMCParticle,allocator<StjMCParticle> >",4478,G__BaseDict_215_0_15, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<StjMCParticle,allocator<StjMCParticle> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjMCParticle,allocator<StjMCParticle> >",4478,G__BaseDict_215_0_16, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<StjMCParticle,allocator<StjMCParticle> >::iterator' 'vector<StjMCParticle,allocator<StjMCParticle> >::const_iterator' 10 - first u 'vector<StjMCParticle,allocator<StjMCParticle> >::iterator' 'vector<StjMCParticle,allocator<StjMCParticle> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseDict_215_0_17, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<StjMCParticle,allocator<StjMCParticle> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__BaseDict_215_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<StjMCParticle,allocator<StjMCParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__BaseDict_215_0_19, 117, G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__BaseDict_215_0_20, 117, G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__BaseDict_215_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StjMCParticle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__BaseDict_215_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjMCParticle,allocator<StjMCParticle> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_215_0_23, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<StjMCParticle,allocator<StjMCParticle> >::iterator' - 0 - position u 'StjMCParticle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_215_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<StjMCParticle,allocator<StjMCParticle> >::iterator' - 0 - position u 'vector<StjMCParticle,allocator<StjMCParticle> >::iterator' 'vector<StjMCParticle,allocator<StjMCParticle> >::const_iterator' 10 - first "
"u 'vector<StjMCParticle,allocator<StjMCParticle> >::iterator' 'vector<StjMCParticle,allocator<StjMCParticle> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_215_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<StjMCParticle,allocator<StjMCParticle> >::iterator' - 0 - position k - 'vector<StjMCParticle,allocator<StjMCParticle> >::size_type' 0 - n "
"u 'StjMCParticle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__BaseDict_215_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BaseDict_215_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjMCParticle,allocator<StjMCParticle> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BaseDict_215_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<StjMCParticle,allocator<StjMCParticle> >::iterator' - 0 - first u 'vector<StjMCParticle,allocator<StjMCParticle> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__BaseDict_215_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<StjMCParticle,allocator<StjMCParticle> >", 4604, G__BaseDict_215_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjMC(void) {
   /* StjMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMC));
   G__memfunc_setup("Init",404,G__BaseDict_218_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMCParticleList",1696,G__BaseDict_218_0_3, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR), G__defined_typename("StjMCParticleList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseDict_218_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjMC::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_218_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMC::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_218_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjMC::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_218_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjMC::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_218_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_218_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMC::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_218_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMC::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_218_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMC::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_218_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMC::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjMC", 575, G__BaseDict_218_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_218_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjMC), -1, 1, 1, 1, 1, 0, "u 'StjMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjMCNull(void) {
   /* StjMCNull */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCNull));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMCPartilceList",1696,G__BaseDict_219_0_3, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR), G__defined_typename("StjMCParticleList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_219_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjMCNull::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_219_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCNull::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_219_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjMCNull::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_219_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjMCNull::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_219_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_219_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCNull::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_219_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCNull::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_219_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCNull::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_219_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCNull::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjMCNull", 986, G__BaseDict_219_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_219_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjMCNull), -1, 1, 1, 1, 1, 0, "u 'StjMCNull' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjMCParticleCut(void) {
   /* StjMCParticleCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCut));
   G__memfunc_setup("operator()",957,G__BaseDict_220_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "u 'StjMCParticle' - 11 - p4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseDict_220_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjMCParticleCut::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_220_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleCut::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_220_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjMCParticleCut::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_220_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjMCParticleCut::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_220_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_220_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleCut::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_220_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleCut::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_220_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleCut::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_220_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleCut::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjMCParticleCut", 1695, G__BaseDict_220_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_220_0_16, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCut), -1, 1, 1, 1, 1, 0, "u 'StjMCParticleCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjMCParticleCutEta(void) {
   /* StjMCParticleCutEta */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEta));
   G__memfunc_setup("StjMCParticleCutEta",1851,G__BaseDict_221_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEta), -1, 0, 2, 1, 1, 0, 
"d - - 0 '-10.0' min d - - 0 '10.0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjMCParticle' - 11 - p4", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_221_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjMCParticleCutEta::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_221_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleCutEta::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_221_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjMCParticleCutEta::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_221_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjMCParticleCutEta::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_221_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_221_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleCutEta::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_221_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleCutEta::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_221_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleCutEta::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_221_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleCutEta::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjMCParticleCutEta", 1851, G__BaseDict_221_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEta), -1, 0, 1, 1, 1, 0, "u 'StjMCParticleCutEta' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjMCParticleCutEta", 1977, G__BaseDict_221_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_221_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEta), -1, 1, 1, 1, 1, 0, "u 'StjMCParticleCutEta' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjMCParticleCutEtaForStatus(void) {
   /* StjMCParticleCutEtaForStatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEtaForStatus));
   G__memfunc_setup("StjMCParticleCutEtaForStatus",2790,G__BaseDict_222_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEtaForStatus), -1, 0, 3, 1, 1, 0, 
"d - - 0 '-10.0' min d - - 0 '10.0' max "
"i - - 0 '1' status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjMCParticle' - 11 - p4", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_222_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjMCParticleCutEtaForStatus::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_222_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleCutEtaForStatus::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_222_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjMCParticleCutEtaForStatus::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_222_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjMCParticleCutEtaForStatus::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_222_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_222_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleCutEtaForStatus::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_222_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleCutEtaForStatus::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_222_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleCutEtaForStatus::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_222_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleCutEtaForStatus::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjMCParticleCutEtaForStatus", 2790, G__BaseDict_222_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEtaForStatus), -1, 0, 1, 1, 1, 0, "u 'StjMCParticleCutEtaForStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjMCParticleCutEtaForStatus", 2916, G__BaseDict_222_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_222_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEtaForStatus), -1, 1, 1, 1, 1, 0, "u 'StjMCParticleCutEtaForStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjMCParticleCutStatus(void) {
   /* StjMCParticleCutStatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutStatus));
   G__memfunc_setup("StjMCParticleCutStatus",2213,G__BaseDict_287_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutStatus), -1, 0, 1, 1, 1, 0, "i - - 0 '1' goodStatus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StjMCParticleCutStatus",2213,G__BaseDict_287_0_2, 105, G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutStatus), -1, 0, 2, 1, 1, 0, 
"i - - 0 - nGoodStatuses I - - 0 - goodStatuses", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjMCParticle' - 11 - p4", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_287_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjMCParticleCutStatus::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_287_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleCutStatus::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_287_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjMCParticleCutStatus::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_287_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjMCParticleCutStatus::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_287_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_287_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleCutStatus::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_287_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleCutStatus::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_287_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleCutStatus::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_287_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleCutStatus::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjMCParticleCutStatus", 2213, G__BaseDict_287_0_16, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutStatus), -1, 0, 1, 1, 1, 0, "u 'StjMCParticleCutStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjMCParticleCutStatus", 2339, G__BaseDict_287_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_287_0_18, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutStatus), -1, 1, 1, 1, 1, 0, "u 'StjMCParticleCutStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjMCParticleListCut(void) {
   /* StjMCParticleListCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListCut));
   G__memfunc_setup("StjMCParticleListCut",1981,G__BaseDict_288_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListCut), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_288_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR), G__defined_typename("StjMCParticleList"), 0, 1, 1, 1, 0, "u 'vector<StjMCParticle,allocator<StjMCParticle> >' 'StjMCParticleList' 11 - aList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCut",597,G__BaseDict_288_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StjMCParticleCut' - 0 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCutList",1032,G__BaseDict_288_0_4, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgR), G__defined_typename("StjMCParticleListCut::CutList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("shouldNotKeep",1349,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'StjMCParticle' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_288_0_6, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjMCParticleListCut::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_288_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleListCut::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_288_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjMCParticleListCut::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_288_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjMCParticleListCut::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_288_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_288_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleListCut::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_288_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleListCut::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_288_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleListCut::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_288_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleListCut::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjMCParticleListCut", 1981, G__BaseDict_288_0_18, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListCut), -1, 0, 1, 1, 1, 0, "u 'StjMCParticleListCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjMCParticleListCut", 2107, G__BaseDict_288_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_288_0_20, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListCut), -1, 1, 1, 1, 1, 0, "u 'StjMCParticleListCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjMCParticleListToFourVecList(void) {
   /* StjMCParticleListToFourVecList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListToFourVecList));
   G__memfunc_setup("operator()",957,G__BaseDict_293_0_1, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR), G__defined_typename("StjFourVecList"), 0, 1, 1, 1, 0, "u 'vector<StjMCParticle,allocator<StjMCParticle> >' 'StjMCParticleList' 11 - mcparticleList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_293_0_2, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjMCParticleListToFourVecList::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_293_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleListToFourVecList::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_293_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjMCParticleListToFourVecList::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_293_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjMCParticleListToFourVecList::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_293_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_293_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleListToFourVecList::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_293_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleListToFourVecList::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_293_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleListToFourVecList::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_293_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleListToFourVecList::DeclFileLine), 0);
   // automatic default constructor
   G__memfunc_setup("StjMCParticleListToFourVecList", 2986, G__BaseDict_293_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListToFourVecList), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("StjMCParticleListToFourVecList", 2986, G__BaseDict_293_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListToFourVecList), -1, 0, 1, 1, 1, 0, "u 'StjMCParticleListToFourVecList' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjMCParticleListToFourVecList", 3112, G__BaseDict_293_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_293_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListToFourVecList), -1, 1, 1, 1, 1, 0, "u 'StjMCParticleListToFourVecList' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjMCParticlePrint(void) {
   /* StjMCParticlePrint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticlePrint));
   G__memfunc_setup("StjMCParticlePrint",1794,G__BaseDict_294_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjMCParticlePrint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_294_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjMCParticle,allocator<StjMCParticle> >' 'StjMCParticleList' 11 - mcList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'StjMCParticle' - 11 - mc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_294_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjMCParticlePrint::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_294_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticlePrint::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_294_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjMCParticlePrint::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_294_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjMCParticlePrint::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_294_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_294_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticlePrint::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_294_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticlePrint::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_294_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticlePrint::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_294_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticlePrint::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjMCParticlePrint", 1794, G__BaseDict_294_0_16, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticlePrint), -1, 0, 1, 1, 1, 0, "u 'StjMCParticlePrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjMCParticlePrint", 1920, G__BaseDict_294_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_294_0_18, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticlePrint), -1, 1, 1, 1, 1, 0, "u 'StjMCParticlePrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjMCParticleToFourVec(void) {
   /* StjMCParticleToFourVec */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleToFourVec));
   G__memfunc_setup("StjMCParticleToFourVec",2162,G__BaseDict_295_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleToFourVec), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_295_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_StjFourVec), -1, 0, 1, 1, 1, 0, "u 'StjMCParticle' - 11 - mcparticle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_295_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjMCParticleToFourVec::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_295_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleToFourVec::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_295_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjMCParticleToFourVec::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_295_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjMCParticleToFourVec::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_295_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_295_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleToFourVec::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_295_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleToFourVec::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_295_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCParticleToFourVec::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_295_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCParticleToFourVec::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjMCParticleToFourVec", 2162, G__BaseDict_295_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleToFourVec), -1, 0, 1, 1, 1, 0, "u 'StjMCParticleToFourVec' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjMCParticleToFourVec", 2288, G__BaseDict_295_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_295_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleToFourVec), -1, 1, 1, 1, 1, 0, "u 'StjMCParticleToFourVec' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjMCTree(void) {
   /* StjMCTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCTree));
   G__memfunc_setup("StjMCTree",849,G__BaseDict_297_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjMCTree), -1, 0, 1, 1, 1, 0, "U 'StjMCParticleListReader' - 0 - reader", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMCParticleList",1696,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR), G__defined_typename("StjMCParticleList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_297_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjMCTree::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_297_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCTree::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_297_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjMCTree::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_297_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjMCTree::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_297_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_297_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCTree::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_297_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCTree::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_297_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjMCTree::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_297_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjMCTree::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjMCTree", 849, G__BaseDict_297_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjMCTree), -1, 0, 1, 1, 1, 0, "u 'StjMCTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjMCTree", 975, G__BaseDict_297_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_297_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjMCTree), -1, 1, 1, 1, 1, 0, "u 'StjMCTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTrack(void) {
   /* StjTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrack));
   G__memfunc_setup("Class",502,G__BaseDict_298_0_1, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTrack::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_298_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrack::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_298_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTrack::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_298_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTrack::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_298_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_298_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrack::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_298_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrack::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_298_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrack::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_298_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrack::DeclFileLine), 0);
   // automatic default constructor
   G__memfunc_setup("StjTrack", 806, G__BaseDict_298_0_13, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTrack), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("StjTrack", 806, G__BaseDict_298_0_14, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTrack), -1, 0, 1, 1, 1, 0, "u 'StjTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTrack", 932, G__BaseDict_298_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_298_0_16, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTrack), -1, 1, 1, 1, 1, 0, "u 'StjTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEStjTrackcOallocatorlEStjTrackgRsPgR(void) {
   /* vector<StjTrack,allocator<StjTrack> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR));
   G__memfunc_setup("at",213,G__BaseDict_300_0_1, 117, G__get_linked_tagnum(&G__BaseDictLN_StjTrack), -1, 1, 1, 1, 1, 0, "k - 'vector<StjTrack,allocator<StjTrack> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__BaseDict_300_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__BaseDict_300_0_3, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__BaseDict_300_0_4, 117, G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiteratorgR), G__defined_typename("vector<StjTrack,allocator<StjTrack> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__BaseDict_300_0_5, 117, G__get_linked_tagnum(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiteratorgR), G__defined_typename("vector<StjTrack,allocator<StjTrack> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__BaseDict_300_0_6, 107, -1, G__defined_typename("vector<StjTrack,allocator<StjTrack> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__BaseDict_300_0_7, 107, -1, G__defined_typename("vector<StjTrack,allocator<StjTrack> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BaseDict_300_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<StjTrack,allocator<StjTrack> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BaseDict_300_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<StjTrack,allocator<StjTrack> >::size_type' 0 - sz u 'StjTrack' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__BaseDict_300_0_10, 107, -1, G__defined_typename("vector<StjTrack,allocator<StjTrack> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__BaseDict_300_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseDict_300_0_12, 117, G__get_linked_tagnum(&G__BaseDictLN_StjTrack), -1, 1, 1, 1, 1, 0, "k - 'vector<StjTrack,allocator<StjTrack> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjTrack,allocator<StjTrack> >",3552,G__BaseDict_300_0_13, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjTrack,allocator<StjTrack> >",3552,G__BaseDict_300_0_14, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<StjTrack,allocator<StjTrack> >::size_type' 0 - n u 'StjTrack' - 11 'StjTrack()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjTrack,allocator<StjTrack> >",3552,G__BaseDict_300_0_15, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<StjTrack,allocator<StjTrack> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<StjTrack,allocator<StjTrack> >",3552,G__BaseDict_300_0_16, 105, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<StjTrack,allocator<StjTrack> >::iterator' 'vector<StjTrack,allocator<StjTrack> >::const_iterator' 10 - first u 'vector<StjTrack,allocator<StjTrack> >::iterator' 'vector<StjTrack,allocator<StjTrack> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseDict_300_0_17, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<StjTrack,allocator<StjTrack> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__BaseDict_300_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<StjTrack,allocator<StjTrack> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__BaseDict_300_0_19, 117, G__get_linked_tagnum(&G__BaseDictLN_StjTrack), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__BaseDict_300_0_20, 117, G__get_linked_tagnum(&G__BaseDictLN_StjTrack), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__BaseDict_300_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StjTrack' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__BaseDict_300_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjTrack,allocator<StjTrack> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_300_0_23, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<StjTrack,allocator<StjTrack> >::iterator' - 0 - position u 'StjTrack' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_300_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<StjTrack,allocator<StjTrack> >::iterator' - 0 - position u 'vector<StjTrack,allocator<StjTrack> >::iterator' 'vector<StjTrack,allocator<StjTrack> >::const_iterator' 10 - first "
"u 'vector<StjTrack,allocator<StjTrack> >::iterator' 'vector<StjTrack,allocator<StjTrack> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BaseDict_300_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<StjTrack,allocator<StjTrack> >::iterator' - 0 - position k - 'vector<StjTrack,allocator<StjTrack> >::size_type' 0 - n "
"u 'StjTrack' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__BaseDict_300_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BaseDict_300_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjTrack,allocator<StjTrack> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BaseDict_300_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<StjTrack,allocator<StjTrack> >::iterator' - 0 - first u 'vector<StjTrack,allocator<StjTrack> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__BaseDict_300_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<StjTrack,allocator<StjTrack> >", 3678, G__BaseDict_300_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTPC(void) {
   /* StjTPC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPC));
   G__memfunc_setup("Init",404,G__BaseDict_303_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getTrackList",1233,G__BaseDict_303_0_3, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR), G__defined_typename("StjTrackList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseDict_303_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTPC::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_303_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTPC::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_303_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTPC::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_303_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTPC::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_303_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_303_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTPC::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_303_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTPC::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_303_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTPC::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_303_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTPC::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjTPC", 662, G__BaseDict_303_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_303_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTPC), -1, 1, 1, 1, 1, 0, "u 'StjTPC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTPCNull(void) {
   /* StjTPCNull */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCNull));
   G__memfunc_setup("StjTPCNull",947,G__BaseDict_304_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTPCNull), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getTrackList",1233,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR), G__defined_typename("StjTrackList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_304_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTPCNull::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_304_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTPCNull::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_304_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTPCNull::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_304_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTPCNull::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_304_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_304_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTPCNull::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_304_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTPCNull::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_304_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTPCNull::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_304_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTPCNull::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTPCNull", 947, G__BaseDict_304_0_16, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTPCNull), -1, 0, 1, 1, 1, 0, "u 'StjTPCNull' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTPCNull", 1073, G__BaseDict_304_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_304_0_18, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTPCNull), -1, 1, 1, 1, 1, 0, "u 'StjTPCNull' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTPCTree(void) {
   /* StjTPCTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCTree));
   G__memfunc_setup("StjTPCTree",936,G__BaseDict_306_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTPCTree), -1, 0, 1, 1, 1, 0, "U 'StjTrackListReader' - 0 - reader", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackList",1233,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR), G__defined_typename("StjTrackList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_306_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTPCTree::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_306_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTPCTree::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_306_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTPCTree::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_306_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTPCTree::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_306_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_306_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTPCTree::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_306_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTPCTree::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_306_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTPCTree::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_306_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTPCTree::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTPCTree", 936, G__BaseDict_306_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTPCTree), -1, 0, 1, 1, 1, 0, "u 'StjTPCTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTPCTree", 1062, G__BaseDict_306_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_306_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTPCTree), -1, 1, 1, 1, 1, 0, "u 'StjTPCTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTPCTxt(void) {
   /* StjTPCTxt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCTxt));
   G__memfunc_setup("StjTPCTxt",856,G__BaseDict_307_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTPCTxt), -1, 0, 1, 1, 1, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackList",1233,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR), G__defined_typename("StjTrackList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_307_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTPCTxt::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_307_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTPCTxt::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_307_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTPCTxt::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_307_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTPCTxt::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_307_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_307_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTPCTxt::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_307_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTPCTxt::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_307_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTPCTxt::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_307_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTPCTxt::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjTPCTxt", 982, G__BaseDict_307_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyCorrectionForTracks(void) {
   /* StjTowerEnergyCorrectionForTracks */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCorrectionForTracks));
   G__memfunc_setup("StjTowerEnergyCorrectionForTracks",3411,G__BaseDict_308_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCorrectionForTracks), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_308_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), G__defined_typename("StjTowerEnergyList"), 0, 2, 1, 1, 0, 
"u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >' 'StjTowerEnergyList' 11 - energyDepositList u 'vector<StjTrack,allocator<StjTrack> >' 'StjTrackList' 11 - trackList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Do",179,G__BaseDict_308_0_3, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), G__defined_typename("StjTowerEnergyList"), 0, 2, 1, 1, 0, 
"u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >' 'StjTowerEnergyList' 11 - energyDepositList u 'vector<StjTrack,allocator<StjTrack> >' 'StjTrackList' 11 - trackList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("countTracksOnBemcTower",2262,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'StjTrack' - 11 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("correctBemcTowerEnergyForTracks_",3282,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 4, 1, 4, 0, 
"d - - 0 - energy i - - 0 - bemcTowerId "
"f - - 0 - eta f - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_308_0_6, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyCorrectionForTracks::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_308_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCorrectionForTracks::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_308_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyCorrectionForTracks::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_308_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyCorrectionForTracks::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_308_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_308_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCorrectionForTracks::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_308_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCorrectionForTracks::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_308_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCorrectionForTracks::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_308_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCorrectionForTracks::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergyCorrectionForTracks", 3411, G__BaseDict_308_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCorrectionForTracks), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergyCorrectionForTracks' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyCorrectionForTracks", 3537, G__BaseDict_308_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_308_0_20, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCorrectionForTracks), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyCorrectionForTracks' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyCut(void) {
   /* StjTowerEnergyCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut));
   G__memfunc_setup("operator()",957,G__BaseDict_309_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - deposit", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseDict_309_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyCut::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_309_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCut::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_309_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyCut::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_309_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyCut::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_309_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_309_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCut::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_309_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCut::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_309_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCut::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_309_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCut::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyCut", 1878, G__BaseDict_309_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_309_0_16, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyCut2003BemcTower(void) {
   /* StjTowerEnergyCut2003BemcTower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut2003BemcTower));
   G__memfunc_setup("StjTowerEnergyCut2003BemcTower",2853,G__BaseDict_310_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut2003BemcTower), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - tower", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_310_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyCut2003BemcTower::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_310_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCut2003BemcTower::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_310_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyCut2003BemcTower::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_310_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyCut2003BemcTower::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_310_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_310_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCut2003BemcTower::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_310_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCut2003BemcTower::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_310_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCut2003BemcTower::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_310_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCut2003BemcTower::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergyCut2003BemcTower", 2853, G__BaseDict_310_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut2003BemcTower), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergyCut2003BemcTower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyCut2003BemcTower", 2979, G__BaseDict_310_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_310_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut2003BemcTower), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyCut2003BemcTower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyCutAdc(void) {
   /* StjTowerEnergyCutAdc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutAdc));
   G__memfunc_setup("StjTowerEnergyCutAdc",2016,G__BaseDict_311_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutAdc), -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' min d - - 0 '2.0' factor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - tower", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_311_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyCutAdc::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_311_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutAdc::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_311_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyCutAdc::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_311_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyCutAdc::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_311_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_311_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutAdc::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_311_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCutAdc::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_311_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutAdc::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_311_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCutAdc::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergyCutAdc", 2016, G__BaseDict_311_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutAdc), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergyCutAdc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyCutAdc", 2142, G__BaseDict_311_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_311_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutAdc), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyCutAdc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyCutBemcStatus(void) {
   /* StjTowerEnergyCutBemcStatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcStatus));
   G__memfunc_setup("StjTowerEnergyCutBemcStatus",2771,G__BaseDict_312_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcStatus), -1, 0, 1, 1, 1, 0, "i - - 0 '1' goodStatus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - tower", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_312_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyCutBemcStatus::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_312_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutBemcStatus::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_312_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyCutBemcStatus::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_312_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyCutBemcStatus::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_312_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_312_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutBemcStatus::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_312_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCutBemcStatus::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_312_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutBemcStatus::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_312_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCutBemcStatus::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergyCutBemcStatus", 2771, G__BaseDict_312_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcStatus), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergyCutBemcStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyCutBemcStatus", 2897, G__BaseDict_312_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_312_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcStatus), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyCutBemcStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyCutBemcWestOnly(void) {
   /* StjTowerEnergyCutBemcWestOnly */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcWestOnly));
   G__memfunc_setup("StjTowerEnergyCutBemcWestOnly",2964,G__BaseDict_313_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcWestOnly), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - tower", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_313_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyCutBemcWestOnly::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_313_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutBemcWestOnly::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_313_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyCutBemcWestOnly::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_313_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyCutBemcWestOnly::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_313_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_313_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutBemcWestOnly::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_313_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCutBemcWestOnly::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_313_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutBemcWestOnly::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_313_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCutBemcWestOnly::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergyCutBemcWestOnly", 2964, G__BaseDict_313_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcWestOnly), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergyCutBemcWestOnly' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyCutBemcWestOnly", 3090, G__BaseDict_313_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_313_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcWestOnly), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyCutBemcWestOnly' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyCutEnergy(void) {
   /* StjTowerEnergyCutEnergy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEnergy));
   G__memfunc_setup("StjTowerEnergyCutEnergy",2370,G__BaseDict_314_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEnergy), -1, 0, 2, 1, 1, 0, 
"d - - 0 '0' min d - - 0 '50000.0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - deposit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_314_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyCutEnergy::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_314_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutEnergy::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_314_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyCutEnergy::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_314_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyCutEnergy::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_314_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_314_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutEnergy::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_314_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCutEnergy::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_314_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutEnergy::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_314_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCutEnergy::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergyCutEnergy", 2370, G__BaseDict_314_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEnergy), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergyCutEnergy' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyCutEnergy", 2496, G__BaseDict_314_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_314_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEnergy), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyCutEnergy' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyCutEt(void) {
   /* StjTowerEnergyCutEt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEt));
   G__memfunc_setup("StjTowerEnergyCutEt",1937,G__BaseDict_363_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEt), -1, 0, 2, 1, 1, 0, 
"d - - 0 '0' min d - - 0 '50000.0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - deposit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_363_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyCutEt::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_363_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutEt::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_363_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyCutEt::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_363_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyCutEt::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_363_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_363_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutEt::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_363_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCutEt::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_363_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyCutEt::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_363_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyCutEt::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergyCutEt", 1937, G__BaseDict_363_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEt), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergyCutEt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyCutEt", 2063, G__BaseDict_363_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_363_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEt), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyCutEt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyListCut(void) {
   /* StjTowerEnergyListCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListCut));
   G__memfunc_setup("StjTowerEnergyListCut",2164,G__BaseDict_364_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListCut), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_364_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), G__defined_typename("StjTowerEnergyList"), 0, 1, 1, 1, 0, "u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >' 'StjTowerEnergyList' 11 - energyList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCut",597,G__BaseDict_364_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StjTowerEnergyCut' - 0 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCutList",1032,G__BaseDict_364_0_4, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgR), G__defined_typename("StjTowerEnergyListCut::CutList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("shouldNotKeep",1349,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'StjTowerEnergy' - 11 - deposit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_364_0_6, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyListCut::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_364_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyListCut::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_364_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyListCut::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_364_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyListCut::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_364_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_364_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyListCut::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_364_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyListCut::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_364_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyListCut::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_364_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyListCut::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergyListCut", 2164, G__BaseDict_364_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListCut), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergyListCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyListCut", 2290, G__BaseDict_364_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_364_0_20, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListCut), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyListCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyVariation(void) {
   /* StjTowerEnergyVariation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariation));
   G__memfunc_setup("operator()",957,G__BaseDict_369_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - deposit", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseDict_369_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyVariation::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_369_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyVariation::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_369_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyVariation::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_369_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyVariation::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_369_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_369_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyVariation::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_369_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyVariation::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_369_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyVariation::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_369_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyVariation::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyVariation", 2519, G__BaseDict_369_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_369_0_16, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariation), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyVariation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyListVariation(void) {
   /* StjTowerEnergyListVariation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListVariation));
   G__memfunc_setup("StjTowerEnergyListVariation",2805,G__BaseDict_370_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListVariation), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_370_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR), G__defined_typename("StjTowerEnergyList"), 0, 1, 1, 1, 0, "u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >' 'StjTowerEnergyList' 11 - energyList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addVariation",1238,G__BaseDict_370_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StjTowerEnergyVariation' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVariationList",1673,G__BaseDict_370_0_4, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgR), G__defined_typename("StjTowerEnergyListVariation::VarList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vary",450,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy), -1, 0, 1, 1, 4, 0, "u 'StjTowerEnergy' - 11 - deposit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_370_0_6, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyListVariation::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_370_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyListVariation::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_370_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyListVariation::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_370_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyListVariation::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_370_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_370_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyListVariation::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_370_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyListVariation::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_370_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyListVariation::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_370_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyListVariation::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergyListVariation", 2805, G__BaseDict_370_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListVariation), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergyListVariation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyListVariation", 2931, G__BaseDict_370_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_370_0_20, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListVariation), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyListVariation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyPrint(void) {
   /* StjTowerEnergyPrint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyPrint));
   G__memfunc_setup("StjTowerEnergyPrint",1977,G__BaseDict_375_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyPrint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_375_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >' 'StjTowerEnergyList' 11 - energyList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'StjTowerEnergy' - 11 - energyDeposit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_375_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyPrint::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_375_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyPrint::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_375_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyPrint::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_375_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyPrint::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_375_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_375_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyPrint::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_375_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyPrint::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_375_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyPrint::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_375_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyPrint::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergyPrint", 1977, G__BaseDict_375_0_16, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyPrint), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergyPrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyPrint", 2103, G__BaseDict_375_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_375_0_18, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyPrint), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyPrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyToTLorentzVector(void) {
   /* StjTowerEnergyToTLorentzVector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToTLorentzVector));
   G__memfunc_setup("StjTowerEnergyToTLorentzVector",3108,G__BaseDict_381_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToTLorentzVector), -1, 0, 1, 1, 1, 0, "d - - 0 '0' mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_381_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - deposit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_381_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyToTLorentzVector::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_381_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyToTLorentzVector::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_381_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyToTLorentzVector::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_381_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyToTLorentzVector::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_381_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_381_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyToTLorentzVector::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_381_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyToTLorentzVector::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_381_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyToTLorentzVector::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_381_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyToTLorentzVector::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergyToTLorentzVector", 3108, G__BaseDict_381_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToTLorentzVector), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergyToTLorentzVector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyToTLorentzVector", 3234, G__BaseDict_381_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_381_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToTLorentzVector), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyToTLorentzVector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyToFourVec(void) {
   /* StjTowerEnergyToFourVec */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToFourVec));
   G__memfunc_setup("StjTowerEnergyToFourVec",2345,G__BaseDict_382_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToFourVec), -1, 0, 1, 1, 1, 0, "d - - 0 '0' mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_382_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_StjFourVec), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - towerEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_382_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyToFourVec::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_382_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyToFourVec::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_382_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyToFourVec::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_382_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyToFourVec::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_382_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_382_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyToFourVec::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_382_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyToFourVec::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_382_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyToFourVec::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_382_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyToFourVec::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergyToFourVec", 2345, G__BaseDict_382_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToFourVec), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergyToFourVec' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyToFourVec", 2471, G__BaseDict_382_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTowerEnergyVariationEnergy(void) {
   /* StjTowerEnergyVariationEnergy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariationEnergy));
   G__memfunc_setup("StjTowerEnergyVariationEnergy",3011,G__BaseDict_383_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariationEnergy), -1, 0, 1, 1, 1, 0, "d - - 0 '0.1' ratio", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergy' - 11 - deposit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_383_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTowerEnergyVariationEnergy::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_383_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyVariationEnergy::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_383_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTowerEnergyVariationEnergy::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_383_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTowerEnergyVariationEnergy::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_383_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_383_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyVariationEnergy::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_383_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyVariationEnergy::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_383_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTowerEnergyVariationEnergy::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_383_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTowerEnergyVariationEnergy::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTowerEnergyVariationEnergy", 3011, G__BaseDict_383_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariationEnergy), -1, 0, 1, 1, 1, 0, "u 'StjTowerEnergyVariationEnergy' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTowerEnergyVariationEnergy", 3137, G__BaseDict_383_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_383_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariationEnergy), -1, 1, 1, 1, 1, 0, "u 'StjTowerEnergyVariationEnergy' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTrackCut(void) {
   /* StjTrackCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCut));
   G__memfunc_setup("operator()",957,G__BaseDict_384_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTrack' - 11 - track", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseDict_384_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTrackCut::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_384_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCut::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_384_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTrackCut::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_384_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTrackCut::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_384_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_384_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCut::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_384_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCut::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_384_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCut::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_384_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCut::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjTrackCut", 1232, G__BaseDict_384_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_384_0_16, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackCut), -1, 1, 1, 1, 1, 0, "u 'StjTrackCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTrackCutDca(void) {
   /* StjTrackCutDca */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDca));
   G__memfunc_setup("StjTrackCutDca",1370,G__BaseDict_385_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDca), -1, 0, 2, 1, 1, 0, 
"d - - 0 '3.0' max d - - 0 '0.0' min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTrack' - 11 - track", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_385_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTrackCutDca::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_385_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutDca::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_385_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTrackCutDca::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_385_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTrackCutDca::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_385_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_385_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutDca::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_385_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCutDca::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_385_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutDca::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_385_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCutDca::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTrackCutDca", 1370, G__BaseDict_385_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDca), -1, 0, 1, 1, 1, 0, "u 'StjTrackCutDca' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTrackCutDca", 1496, G__BaseDict_385_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_385_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDca), -1, 1, 1, 1, 1, 0, "u 'StjTrackCutDca' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTrackCutDcaPtDependent(void) {
   /* StjTrackCutDcaPtDependent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDcaPtDependent));
   G__memfunc_setup("StjTrackCutDcaPtDependent",2485,G__BaseDict_386_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDcaPtDependent), -1, 0, 4, 1, 1, 0, 
"d - - 0 '0.5' pt1 d - - 0 '2.0' dcaMax1 "
"d - - 0 '1.0' pt2 d - - 0 '1.0' dcaMax2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTrack' - 11 - track", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_386_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTrackCutDcaPtDependent::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_386_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutDcaPtDependent::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_386_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTrackCutDcaPtDependent::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_386_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTrackCutDcaPtDependent::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_386_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_386_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutDcaPtDependent::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_386_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCutDcaPtDependent::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_386_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutDcaPtDependent::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_386_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCutDcaPtDependent::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTrackCutDcaPtDependent", 2485, G__BaseDict_386_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDcaPtDependent), -1, 0, 1, 1, 1, 0, "u 'StjTrackCutDcaPtDependent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTrackCutDcaPtDependent", 2611, G__BaseDict_386_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_386_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDcaPtDependent), -1, 1, 1, 1, 1, 0, "u 'StjTrackCutDcaPtDependent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTrackCutEta(void) {
   /* StjTrackCutEta */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutEta));
   G__memfunc_setup("StjTrackCutEta",1388,G__BaseDict_387_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutEta), -1, 0, 2, 1, 1, 0, 
"d - - 0 '-2.0' min d - - 0 '2.0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTrack' - 11 - track", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_387_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTrackCutEta::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_387_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutEta::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_387_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTrackCutEta::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_387_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTrackCutEta::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_387_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_387_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutEta::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_387_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCutEta::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_387_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutEta::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_387_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCutEta::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTrackCutEta", 1388, G__BaseDict_387_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutEta), -1, 0, 1, 1, 1, 0, "u 'StjTrackCutEta' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTrackCutEta", 1514, G__BaseDict_387_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_387_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutEta), -1, 1, 1, 1, 1, 0, "u 'StjTrackCutEta' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTrackCutFlag(void) {
   /* StjTrackCutFlag */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutFlag));
   G__memfunc_setup("StjTrackCutFlag",1484,G__BaseDict_388_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutFlag), -1, 0, 2, 1, 1, 0, 
"s - 'Short_t' 0 '0' min s - 'Short_t' 0 'kMaxShort' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTrack' - 11 - track", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_388_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTrackCutFlag::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_388_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutFlag::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_388_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTrackCutFlag::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_388_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTrackCutFlag::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_388_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_388_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutFlag::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_388_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCutFlag::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_388_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutFlag::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_388_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCutFlag::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTrackCutFlag", 1484, G__BaseDict_388_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutFlag), -1, 0, 1, 1, 1, 0, "u 'StjTrackCutFlag' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTrackCutFlag", 1610, G__BaseDict_388_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_388_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutFlag), -1, 1, 1, 1, 1, 0, "u 'StjTrackCutFlag' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTrackCutNHits(void) {
   /* StjTrackCutNHits */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutNHits));
   G__memfunc_setup("StjTrackCutNHits",1592,G__BaseDict_389_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutNHits), -1, 0, 2, 1, 1, 0, 
"r - 'UShort_t' 0 '12' min r - 'UShort_t' 0 'kMaxUShort' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTrack' - 11 - track", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_389_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTrackCutNHits::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_389_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutNHits::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_389_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTrackCutNHits::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_389_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTrackCutNHits::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_389_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_389_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutNHits::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_389_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCutNHits::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_389_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutNHits::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_389_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCutNHits::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTrackCutNHits", 1592, G__BaseDict_389_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutNHits), -1, 0, 1, 1, 1, 0, "u 'StjTrackCutNHits' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTrackCutNHits", 1718, G__BaseDict_389_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_389_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutNHits), -1, 1, 1, 1, 1, 0, "u 'StjTrackCutNHits' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTrackCutPossibleHitRatio(void) {
   /* StjTrackCutPossibleHitRatio */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutPossibleHitRatio));
   G__memfunc_setup("StjTrackCutPossibleHitRatio",2743,G__BaseDict_390_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutPossibleHitRatio), -1, 0, 1, 1, 1, 0, "d - - 0 '0.51' minRatio", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'StjTrack' - 11 - track", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_390_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTrackCutPossibleHitRatio::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_390_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutPossibleHitRatio::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_390_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTrackCutPossibleHitRatio::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_390_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTrackCutPossibleHitRatio::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_390_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_390_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutPossibleHitRatio::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_390_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCutPossibleHitRatio::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_390_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackCutPossibleHitRatio::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_390_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackCutPossibleHitRatio::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTrackCutPossibleHitRatio", 2743, G__BaseDict_390_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutPossibleHitRatio), -1, 0, 1, 1, 1, 0, "u 'StjTrackCutPossibleHitRatio' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTrackCutPossibleHitRatio", 2869, G__BaseDict_390_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_390_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutPossibleHitRatio), -1, 1, 1, 1, 1, 0, "u 'StjTrackCutPossibleHitRatio' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTrackListCut(void) {
   /* StjTrackListCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackListCut));
   G__memfunc_setup("StjTrackListCut",1518,G__BaseDict_391_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTrackListCut), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_391_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR), G__defined_typename("StjTrackList"), 0, 1, 1, 1, 0, "u 'vector<StjTrack,allocator<StjTrack> >' 'StjTrackList' 11 - trackList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCut",597,G__BaseDict_391_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StjTrackCut' - 0 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCutList",1032,G__BaseDict_391_0_4, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgR), G__defined_typename("StjTrackListCut::CutList"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("shoudNotPass",1259,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'StjTrack' - 11 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_391_0_6, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTrackListCut::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_391_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackListCut::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_391_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTrackListCut::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_391_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTrackListCut::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_391_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_391_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackListCut::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_391_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackListCut::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_391_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackListCut::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_391_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackListCut::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTrackListCut", 1518, G__BaseDict_391_0_18, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackListCut), -1, 0, 1, 1, 1, 0, "u 'StjTrackListCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTrackListCut", 1644, G__BaseDict_391_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_391_0_20, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackListCut), -1, 1, 1, 1, 1, 0, "u 'StjTrackListCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTrackPrint(void) {
   /* StjTrackPrint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackPrint));
   G__memfunc_setup("StjTrackPrint",1331,G__BaseDict_396_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTrackPrint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_396_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<StjTrack,allocator<StjTrack> >' 'StjTrackList' 11 - trackList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'StjTrack' - 11 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_396_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTrackPrint::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_396_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackPrint::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_396_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTrackPrint::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_396_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTrackPrint::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_396_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_396_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackPrint::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_396_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackPrint::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_396_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackPrint::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_396_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackPrint::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTrackPrint", 1331, G__BaseDict_396_0_16, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackPrint), -1, 0, 1, 1, 1, 0, "u 'StjTrackPrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTrackPrint", 1457, G__BaseDict_396_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_396_0_18, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackPrint), -1, 1, 1, 1, 1, 0, "u 'StjTrackPrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTrackToTLorentzVector(void) {
   /* StjTrackToTLorentzVector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackToTLorentzVector));
   G__memfunc_setup("StjTrackToTLorentzVector",2462,G__BaseDict_397_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTrackToTLorentzVector), -1, 0, 1, 1, 1, 0, "d - - 0 '0.1395700' mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_397_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "u 'StjTrack' - 11 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_397_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTrackToTLorentzVector::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_397_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackToTLorentzVector::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_397_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTrackToTLorentzVector::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_397_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTrackToTLorentzVector::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_397_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_397_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackToTLorentzVector::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_397_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackToTLorentzVector::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_397_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackToTLorentzVector::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_397_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackToTLorentzVector::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTrackToTLorentzVector", 2462, G__BaseDict_397_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTrackToTLorentzVector), -1, 0, 1, 1, 1, 0, "u 'StjTrackToTLorentzVector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTrackToTLorentzVector", 2588, G__BaseDict_397_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_397_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackToTLorentzVector), -1, 1, 1, 1, 1, 0, "u 'StjTrackToTLorentzVector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTrackToFourVec(void) {
   /* StjTrackToFourVec */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackToFourVec));
   G__memfunc_setup("StjTrackToFourVec",1699,G__BaseDict_398_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjTrackToFourVec), -1, 0, 1, 1, 1, 0, "d - - 0 '0.1395700' mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_398_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_StjFourVec), -1, 0, 1, 1, 1, 0, "u 'StjTrack' - 11 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_398_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTrackToFourVec::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_398_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackToFourVec::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_398_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTrackToFourVec::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_398_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTrackToFourVec::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_398_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_398_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackToFourVec::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_398_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackToFourVec::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_398_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackToFourVec::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_398_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackToFourVec::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjTrackToFourVec", 1699, G__BaseDict_398_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackToFourVec), -1, 0, 1, 1, 1, 0, "u 'StjTrackToFourVec' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTrackToFourVec", 1825, G__BaseDict_398_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjTrackTowerEnergyListToFourVecList(void) {
   /* StjTrackTowerEnergyListToFourVecList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackTowerEnergyListToFourVecList));
   G__memfunc_setup("operator()",957,G__BaseDict_399_0_1, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR), G__defined_typename("StjFourVecList"), 0, 1, 1, 1, 0, "u 'pair<vector<StjTrack,allocator<StjTrack> >,vector<StjTowerEnergy,allocator<StjTowerEnergy> > >' 'pair<StjTrackList,StjTowerEnergyList>' 11 - inList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseDict_399_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR), G__defined_typename("StjFourVecList"), 0, 2, 1, 1, 0, 
"u 'vector<StjTrack,allocator<StjTrack> >' 'StjTrackList' 11 - trackList u 'vector<StjTowerEnergy,allocator<StjTowerEnergy> >' 'StjTowerEnergyList' 11 - energyList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseDict_399_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjTrackTowerEnergyListToFourVecList::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_399_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackTowerEnergyListToFourVecList::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_399_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjTrackTowerEnergyListToFourVecList::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_399_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjTrackTowerEnergyListToFourVecList::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_399_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_399_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackTowerEnergyListToFourVecList::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_399_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackTowerEnergyListToFourVecList::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_399_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjTrackTowerEnergyListToFourVecList::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_399_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjTrackTowerEnergyListToFourVecList::DeclFileLine), 0);
   // automatic default constructor
   G__memfunc_setup("StjTrackTowerEnergyListToFourVecList", 3670, G__BaseDict_399_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTrackTowerEnergyListToFourVecList), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("StjTrackTowerEnergyListToFourVecList", 3670, G__BaseDict_399_0_16, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjTrackTowerEnergyListToFourVecList), -1, 0, 1, 1, 1, 0, "u 'StjTrackTowerEnergyListToFourVecList' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjTrackTowerEnergyListToFourVecList", 3796, G__BaseDict_399_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_399_0_18, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjTrackTowerEnergyListToFourVecList), -1, 1, 1, 1, 1, 0, "u 'StjTrackTowerEnergyListToFourVecList' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjDijetListTrigger(void) {
   /* StjDijetListTrigger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTrigger));
   G__memfunc_setup("operator()",957,G__BaseDict_401_0_2, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR), G__defined_typename("StjDijetList"), 0, 1, 1, 1, 0, "u 'vector<StjDijet,allocator<StjDijet> >' 'StjDijetList' 11 - inList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processOneItem",1456,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR), G__defined_typename("StjDijetList"), 0, 1, 1, 4, 0, "u 'StjDijet' 'vector<StjDijet,allocator<StjDijet> >::value_type' 11 - item", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseDict_401_0_4, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjDijetListTrigger::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_401_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetListTrigger::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_401_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjDijetListTrigger::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_401_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjDijetListTrigger::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_401_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_401_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetListTrigger::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_401_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetListTrigger::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_401_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetListTrigger::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_401_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetListTrigger::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjDijetListTrigger", 2063, G__BaseDict_401_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_401_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTrigger), -1, 1, 1, 1, 1, 0, "u 'StjDijetListTrigger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjDijetListTriggerBJP(void) {
   /* StjDijetListTriggerBJP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBJP));
   G__memfunc_setup("Class",502,G__BaseDict_402_0_2, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjDijetListTriggerBJP::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_402_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetListTriggerBJP::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_402_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjDijetListTriggerBJP::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_402_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjDijetListTriggerBJP::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_402_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_402_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetListTriggerBJP::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_402_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetListTriggerBJP::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_402_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetListTriggerBJP::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_402_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetListTriggerBJP::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StjDijetListTriggerBJP", 2283, G__BaseDict_402_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_402_0_15, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBJP), -1, 1, 1, 1, 1, 0, "u 'StjDijetListTriggerBJP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStjDijetListTriggerBHT(void) {
   /* StjDijetListTriggerBHT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBHT));
   G__memfunc_setup("StjDijetListTriggerBHT",2159,G__BaseDict_403_0_1, 105, G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBHT), -1, 0, 1, 1, 1, 0, "U 'StjTrg' - 0 - trg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processOneItem",1456,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR), G__defined_typename("StjDijetList"), 0, 1, 1, 4, 0, "u 'StjDijet' 'vector<StjDijet,allocator<StjDijet> >::value_type' 11 - item", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseDict_403_0_3, 85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StjDijetListTriggerBHT::Class), 0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_403_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetListTriggerBHT::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_403_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StjDijetListTriggerBHT::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_403_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StjDijetListTriggerBHT::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_403_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_403_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetListTriggerBHT::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_403_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetListTriggerBHT::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_403_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StjDijetListTriggerBHT::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_403_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StjDijetListTriggerBHT::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StjDijetListTriggerBHT", 2159, G__BaseDict_403_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBHT), -1, 0, 1, 1, 1, 0, "u 'StjDijetListTriggerBHT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StjDijetListTriggerBHT", 2285, G__BaseDict_403_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseDict_403_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBHT), -1, 1, 1, 1, 1, 0, "u 'StjDijetListTriggerBHT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBaseDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBaseDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBaseDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BaseDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergy = { "StjTowerEnergy" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR = { "vector<StjTowerEnergy,allocator<StjTowerEnergy> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiterator = { "vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StjTowerEnergy,allocator<StjTowerEnergy> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjBEMC = { "StjBEMC" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjBEMCNull = { "StjBEMCNull" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyListReader = { "StjTowerEnergyListReader" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjBEMCTree = { "StjBEMCTree" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjBEMCTxt = { "StjBEMCTxt" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjFourVec = { "StjFourVec" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR = { "vector<StjFourVec,allocator<StjFourVec> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiterator = { "vector<StjFourVec,allocator<StjFourVec> >::iterator" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StjFourVec,allocator<StjFourVec> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjJet = { "StjJet" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR = { "vector<StjJet,allocator<StjJet> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiterator = { "vector<StjJet,allocator<StjJet> >::iterator" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StjJet,allocator<StjJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjDijet = { "StjDijet" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR = { "vector<StjDijet,allocator<StjDijet> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiterator = { "vector<StjDijet,allocator<StjDijet> >::iterator" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StjDijet,allocator<StjDijet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjDijetCut = { "StjDijetCut" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjDijetCutAsymmetricPt = { "StjDijetCutAsymmetricPt" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjDijetCutDPhi = { "StjDijetCutDPhi" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjJetCut = { "StjJetCut" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjJetCutEta = { "StjJetCutEta" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjDijetCutEta = { "StjDijetCutEta" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjDijetCutEta3MinusEta4 = { "StjDijetCutEta3MinusEta4" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjFourVecCut = { "StjFourVecCut" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjFourVecListCut = { "StjFourVecListCut" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgR = { "vector<StjFourVecCut*,allocator<StjFourVecCut*> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StjFourVecCut*,allocator<StjFourVecCut*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrg = { "StjTrg" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjJetCutTrgBHT = { "StjJetCutTrgBHT" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjDijetCutTrgBHT = { "StjDijetCutTrgBHT" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrgBEMCJetPatchTowerIdMap = { "StjTrgBEMCJetPatchTowerIdMap" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjJetCutTrgBJP = { "StjJetCutTrgBJP" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjDijetCutTrgBJP = { "StjDijetCutTrgBJP" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjDijetListCut = { "StjDijetListCut" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgR = { "vector<StjDijetCut*,allocator<StjDijetCut*> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StjDijetCut*,allocator<StjDijetCut*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjDijetPrint = { "StjDijetPrint" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjEEMC = { "StjEEMC" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjEEMCNull = { "StjEEMCNull" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjEEMCTxt = { "StjEEMCTxt" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjFormDijet = { "StjFormDijet" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjFourVecCutPt = { "StjFourVecCutPt" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjFourVecCutTrgBHT = { "StjFourVecCutTrgBHT" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjFourVecCutTrgBJP = { "StjFourVecCutTrgBJP" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjFourVecPrint = { "StjFourVecPrint" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjJetCutDetectorEta = { "StjJetCutDetectorEta" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjJetCutNFourVecs = { "StjJetCutNFourVecs" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjJetCutPt = { "StjJetCutPt" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjJetListCut = { "StjJetListCut" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgR = { "vector<StjJetCut*,allocator<StjJetCut*> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StjJetCut*,allocator<StjJetCut*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjJetPrint = { "StjJetPrint" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjMCParticle = { "StjMCParticle" , 115 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR = { "vector<StjMCParticle,allocator<StjMCParticle> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiterator = { "vector<StjMCParticle,allocator<StjMCParticle> >::iterator" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StjMCParticle,allocator<StjMCParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjMC = { "StjMC" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjMCNull = { "StjMCNull" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjMCParticleCut = { "StjMCParticleCut" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjMCParticleCutEta = { "StjMCParticleCutEta" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjMCParticleCutEtaForStatus = { "StjMCParticleCutEtaForStatus" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR = { "set<int,less<int>,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjMCParticleCutStatus = { "StjMCParticleCutStatus" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjMCParticleListCut = { "StjMCParticleListCut" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgR = { "vector<StjMCParticleCut*,allocator<StjMCParticleCut*> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StjMCParticleCut*,allocator<StjMCParticleCut*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjMCParticleListToFourVecList = { "StjMCParticleListToFourVecList" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjMCParticlePrint = { "StjMCParticlePrint" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjMCParticleToFourVec = { "StjMCParticleToFourVec" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjMCParticleListReader = { "StjMCParticleListReader" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjMCTree = { "StjMCTree" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrack = { "StjTrack" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR = { "vector<StjTrack,allocator<StjTrack> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiterator = { "vector<StjTrack,allocator<StjTrack> >::iterator" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StjTrack,allocator<StjTrack> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTPC = { "StjTPC" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTPCNull = { "StjTPCNull" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrackListReader = { "StjTrackListReader" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTPCTree = { "StjTPCTree" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTPCTxt = { "StjTPCTxt" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyCorrectionForTracks = { "StjTowerEnergyCorrectionForTracks" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyCut = { "StjTowerEnergyCut" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyCut2003BemcTower = { "StjTowerEnergyCut2003BemcTower" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyCutAdc = { "StjTowerEnergyCutAdc" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyCutBemcStatus = { "StjTowerEnergyCutBemcStatus" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyCutBemcWestOnly = { "StjTowerEnergyCutBemcWestOnly" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyCutEnergy = { "StjTowerEnergyCutEnergy" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyCutEt = { "StjTowerEnergyCutEt" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyListCut = { "StjTowerEnergyListCut" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgR = { "vector<StjTowerEnergyCut*,allocator<StjTowerEnergyCut*> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StjTowerEnergyCut*,allocator<StjTowerEnergyCut*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyVariation = { "StjTowerEnergyVariation" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyListVariation = { "StjTowerEnergyListVariation" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgR = { "vector<StjTowerEnergyVariation*,allocator<StjTowerEnergyVariation*> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StjTowerEnergyVariation*,allocator<StjTowerEnergyVariation*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyPrint = { "StjTowerEnergyPrint" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyToTLorentzVector = { "StjTowerEnergyToTLorentzVector" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyToFourVec = { "StjTowerEnergyToFourVec" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTowerEnergyVariationEnergy = { "StjTowerEnergyVariationEnergy" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrackCut = { "StjTrackCut" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrackCutDca = { "StjTrackCutDca" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrackCutDcaPtDependent = { "StjTrackCutDcaPtDependent" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrackCutEta = { "StjTrackCutEta" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrackCutFlag = { "StjTrackCutFlag" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrackCutNHits = { "StjTrackCutNHits" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrackCutPossibleHitRatio = { "StjTrackCutPossibleHitRatio" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrackListCut = { "StjTrackListCut" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_vectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgR = { "vector<StjTrackCut*,allocator<StjTrackCut*> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StjTrackCut*,allocator<StjTrackCut*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrackPrint = { "StjTrackPrint" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrackToTLorentzVector = { "StjTrackToTLorentzVector" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrackToFourVec = { "StjTrackToFourVec" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjTrackTowerEnergyListToFourVecList = { "StjTrackTowerEnergyListToFourVecList" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_pairlEvectorlEStjTrackcOallocatorlEStjTrackgRsPgRcOvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRsPgR = { "pair<vector<StjTrack,allocator<StjTrack> >,vector<StjTowerEnergy,allocator<StjTowerEnergy> > >" , 115 , -1 };
G__linked_taginfo G__BaseDictLN_StjDijetListTrigger = { "StjDijetListTrigger" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjDijetListTriggerBJP = { "StjDijetListTriggerBJP" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_StjDijetListTriggerBHT = { "StjDijetListTriggerBHT" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBaseDict() {
  G__BaseDictLN_TClass.tagnum = -1 ;
  G__BaseDictLN_TBuffer.tagnum = -1 ;
  G__BaseDictLN_TMemberInspector.tagnum = -1 ;
  G__BaseDictLN_TObject.tagnum = -1 ;
  G__BaseDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__BaseDictLN_string.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergy.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiterator.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjBEMC.tagnum = -1 ;
  G__BaseDictLN_StjBEMCNull.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyListReader.tagnum = -1 ;
  G__BaseDictLN_StjBEMCTree.tagnum = -1 ;
  G__BaseDictLN_StjBEMCTxt.tagnum = -1 ;
  G__BaseDictLN_StjFourVec.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiterator.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjJet.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiterator.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjDijet.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiterator.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjDijetCut.tagnum = -1 ;
  G__BaseDictLN_StjDijetCutAsymmetricPt.tagnum = -1 ;
  G__BaseDictLN_StjDijetCutDPhi.tagnum = -1 ;
  G__BaseDictLN_StjJetCut.tagnum = -1 ;
  G__BaseDictLN_StjJetCutEta.tagnum = -1 ;
  G__BaseDictLN_StjDijetCutEta.tagnum = -1 ;
  G__BaseDictLN_StjDijetCutEta3MinusEta4.tagnum = -1 ;
  G__BaseDictLN_StjFourVecCut.tagnum = -1 ;
  G__BaseDictLN_StjFourVecListCut.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgR.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjTrg.tagnum = -1 ;
  G__BaseDictLN_StjJetCutTrgBHT.tagnum = -1 ;
  G__BaseDictLN_StjDijetCutTrgBHT.tagnum = -1 ;
  G__BaseDictLN_StjTrgBEMCJetPatchTowerIdMap.tagnum = -1 ;
  G__BaseDictLN_StjJetCutTrgBJP.tagnum = -1 ;
  G__BaseDictLN_StjDijetCutTrgBJP.tagnum = -1 ;
  G__BaseDictLN_StjDijetListCut.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgR.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjDijetPrint.tagnum = -1 ;
  G__BaseDictLN_StjEEMC.tagnum = -1 ;
  G__BaseDictLN_StjEEMCNull.tagnum = -1 ;
  G__BaseDictLN_StjEEMCTxt.tagnum = -1 ;
  G__BaseDictLN_StjFormDijet.tagnum = -1 ;
  G__BaseDictLN_StjFourVecCutPt.tagnum = -1 ;
  G__BaseDictLN_StjFourVecCutTrgBHT.tagnum = -1 ;
  G__BaseDictLN_StjFourVecCutTrgBJP.tagnum = -1 ;
  G__BaseDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjFourVecPrint.tagnum = -1 ;
  G__BaseDictLN_StjJetCutDetectorEta.tagnum = -1 ;
  G__BaseDictLN_StjJetCutNFourVecs.tagnum = -1 ;
  G__BaseDictLN_StjJetCutPt.tagnum = -1 ;
  G__BaseDictLN_StjJetListCut.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgR.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjJetPrint.tagnum = -1 ;
  G__BaseDictLN_StjMCParticle.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiterator.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjMC.tagnum = -1 ;
  G__BaseDictLN_StjMCNull.tagnum = -1 ;
  G__BaseDictLN_StjMCParticleCut.tagnum = -1 ;
  G__BaseDictLN_StjMCParticleCutEta.tagnum = -1 ;
  G__BaseDictLN_StjMCParticleCutEtaForStatus.tagnum = -1 ;
  G__BaseDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__BaseDictLN_StjMCParticleCutStatus.tagnum = -1 ;
  G__BaseDictLN_StjMCParticleListCut.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgR.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjMCParticleListToFourVecList.tagnum = -1 ;
  G__BaseDictLN_StjMCParticlePrint.tagnum = -1 ;
  G__BaseDictLN_StjMCParticleToFourVec.tagnum = -1 ;
  G__BaseDictLN_StjMCParticleListReader.tagnum = -1 ;
  G__BaseDictLN_StjMCTree.tagnum = -1 ;
  G__BaseDictLN_StjTrack.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiterator.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjTPC.tagnum = -1 ;
  G__BaseDictLN_StjTPCNull.tagnum = -1 ;
  G__BaseDictLN_StjTrackListReader.tagnum = -1 ;
  G__BaseDictLN_StjTPCTree.tagnum = -1 ;
  G__BaseDictLN_StjTPCTxt.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyCorrectionForTracks.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyCut.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyCut2003BemcTower.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyCutAdc.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyCutBemcStatus.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyCutBemcWestOnly.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyCutEnergy.tagnum = -1 ;
  G__BaseDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__BaseDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__BaseDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__BaseDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyCutEt.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyListCut.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgR.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyVariation.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyListVariation.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgR.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyPrint.tagnum = -1 ;
  G__BaseDictLN_TLorentzVector.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyToTLorentzVector.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyToFourVec.tagnum = -1 ;
  G__BaseDictLN_StjTowerEnergyVariationEnergy.tagnum = -1 ;
  G__BaseDictLN_StjTrackCut.tagnum = -1 ;
  G__BaseDictLN_StjTrackCutDca.tagnum = -1 ;
  G__BaseDictLN_StjTrackCutDcaPtDependent.tagnum = -1 ;
  G__BaseDictLN_StjTrackCutEta.tagnum = -1 ;
  G__BaseDictLN_StjTrackCutFlag.tagnum = -1 ;
  G__BaseDictLN_StjTrackCutNHits.tagnum = -1 ;
  G__BaseDictLN_StjTrackCutPossibleHitRatio.tagnum = -1 ;
  G__BaseDictLN_StjTrackListCut.tagnum = -1 ;
  G__BaseDictLN_vectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgR.tagnum = -1 ;
  G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseDictLN_StjTrackPrint.tagnum = -1 ;
  G__BaseDictLN_StjTrackToTLorentzVector.tagnum = -1 ;
  G__BaseDictLN_StjTrackToFourVec.tagnum = -1 ;
  G__BaseDictLN_StjTrackTowerEnergyListToFourVecList.tagnum = -1 ;
  G__BaseDictLN_pairlEvectorlEStjTrackcOallocatorlEStjTrackgRsPgRcOvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRsPgR.tagnum = -1 ;
  G__BaseDictLN_StjDijetListTrigger.tagnum = -1 ;
  G__BaseDictLN_StjDijetListTriggerBJP.tagnum = -1 ;
  G__BaseDictLN_StjDijetListTriggerBHT.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBaseDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_string);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergy),sizeof(StjTowerEnergy),-1,290816,(char*)NULL,G__setup_memvarStjTowerEnergy,G__setup_memfuncStjTowerEnergy);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR),sizeof(vector<StjTowerEnergy,allocator<StjTowerEnergy> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR,G__setup_memfuncvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMC),sizeof(StjBEMC),-1,292097,(char*)NULL,G__setup_memvarStjBEMC,G__setup_memfuncStjBEMC);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCNull),sizeof(StjBEMCNull),-1,292096,(char*)NULL,G__setup_memvarStjBEMCNull,G__setup_memfuncStjBEMCNull);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_StjTowerEnergyListReader);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTree),sizeof(StjBEMCTree),-1,324608,(char*)NULL,G__setup_memvarStjBEMCTree,G__setup_memfuncStjBEMCTree);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjBEMCTxt),sizeof(StjBEMCTxt),-1,324608,(char*)NULL,G__setup_memvarStjBEMCTxt,G__setup_memfuncStjBEMCTxt);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVec),sizeof(StjFourVec),-1,290816,(char*)NULL,G__setup_memvarStjFourVec,G__setup_memfuncStjFourVec);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR),sizeof(vector<StjFourVec,allocator<StjFourVec> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR,G__setup_memfuncvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVeccOallocatorlEStjFourVecgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJet),sizeof(StjJet),-1,290816,(char*)NULL,G__setup_memvarStjJet,G__setup_memfuncStjJet);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgR),sizeof(vector<StjJet,allocator<StjJet> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEStjJetcOallocatorlEStjJetgRsPgR,G__setup_memfuncvectorlEStjJetcOallocatorlEStjJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEStjJetcOallocatorlEStjJetgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijet),sizeof(StjDijet),-1,290816,(char*)NULL,G__setup_memvarStjDijet,G__setup_memfuncStjDijet);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgR),sizeof(vector<StjDijet,allocator<StjDijet> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEStjDijetcOallocatorlEStjDijetgRsPgR,G__setup_memfuncvectorlEStjDijetcOallocatorlEStjDijetgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetcOallocatorlEStjDijetgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCut),sizeof(StjDijetCut),-1,292097,(char*)NULL,G__setup_memvarStjDijetCut,G__setup_memfuncStjDijetCut);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutAsymmetricPt),sizeof(StjDijetCutAsymmetricPt),-1,324608,(char*)NULL,G__setup_memvarStjDijetCutAsymmetricPt,G__setup_memfuncStjDijetCutAsymmetricPt);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutDPhi),sizeof(StjDijetCutDPhi),-1,292096,(char*)NULL,G__setup_memvarStjDijetCutDPhi,G__setup_memfuncStjDijetCutDPhi);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCut),sizeof(StjJetCut),-1,292097,(char*)NULL,G__setup_memvarStjJetCut,G__setup_memfuncStjJetCut);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutEta),sizeof(StjJetCutEta),-1,292096,(char*)NULL,G__setup_memvarStjJetCutEta,G__setup_memfuncStjJetCutEta);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta),sizeof(StjDijetCutEta),-1,292096,(char*)NULL,G__setup_memvarStjDijetCutEta,G__setup_memfuncStjDijetCutEta);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutEta3MinusEta4),sizeof(StjDijetCutEta3MinusEta4),-1,292096,(char*)NULL,G__setup_memvarStjDijetCutEta3MinusEta4,G__setup_memfuncStjDijetCutEta3MinusEta4);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCut),sizeof(StjFourVecCut),-1,292097,(char*)NULL,G__setup_memvarStjFourVecCut,G__setup_memfuncStjFourVecCut);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecListCut),sizeof(StjFourVecListCut),-1,292096,(char*)NULL,G__setup_memvarStjFourVecListCut,G__setup_memfuncStjFourVecListCut);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEStjFourVecCutmUcOallocatorlEStjFourVecCutmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_StjTrg);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBHT),sizeof(StjJetCutTrgBHT),-1,324608,(char*)NULL,G__setup_memvarStjJetCutTrgBHT,G__setup_memfuncStjJetCutTrgBHT);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBHT),sizeof(StjDijetCutTrgBHT),-1,324608,(char*)NULL,G__setup_memvarStjDijetCutTrgBHT,G__setup_memfuncStjDijetCutTrgBHT);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_StjTrgBEMCJetPatchTowerIdMap);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutTrgBJP),sizeof(StjJetCutTrgBJP),-1,324608,(char*)NULL,G__setup_memvarStjJetCutTrgBJP,G__setup_memfuncStjJetCutTrgBJP);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetCutTrgBJP),sizeof(StjDijetCutTrgBJP),-1,324608,(char*)NULL,G__setup_memvarStjDijetCutTrgBJP,G__setup_memfuncStjDijetCutTrgBJP);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListCut),sizeof(StjDijetListCut),-1,292096,(char*)NULL,G__setup_memvarStjDijetListCut,G__setup_memfuncStjDijetListCut);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEStjDijetCutmUcOallocatorlEStjDijetCutmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetPrint),sizeof(StjDijetPrint),-1,292096,(char*)NULL,G__setup_memvarStjDijetPrint,G__setup_memfuncStjDijetPrint);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMC),sizeof(StjEEMC),-1,292097,(char*)NULL,G__setup_memvarStjEEMC,G__setup_memfuncStjEEMC);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMCNull),sizeof(StjEEMCNull),-1,292096,(char*)NULL,G__setup_memvarStjEEMCNull,G__setup_memfuncStjEEMCNull);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjEEMCTxt),sizeof(StjEEMCTxt),-1,324608,(char*)NULL,G__setup_memvarStjEEMCTxt,G__setup_memfuncStjEEMCTxt);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFormDijet),sizeof(StjFormDijet),-1,292096,(char*)NULL,G__setup_memvarStjFormDijet,G__setup_memfuncStjFormDijet);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutPt),sizeof(StjFourVecCutPt),-1,292096,(char*)NULL,G__setup_memvarStjFourVecCutPt,G__setup_memfuncStjFourVecCutPt);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBHT),sizeof(StjFourVecCutTrgBHT),-1,324608,(char*)NULL,G__setup_memvarStjFourVecCutTrgBHT,G__setup_memfuncStjFourVecCutTrgBHT);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecCutTrgBJP),sizeof(StjFourVecCutTrgBJP),-1,324608,(char*)NULL,G__setup_memvarStjFourVecCutTrgBJP,G__setup_memfuncStjFourVecCutTrgBJP);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjFourVecPrint),sizeof(StjFourVecPrint),-1,292096,(char*)NULL,G__setup_memvarStjFourVecPrint,G__setup_memfuncStjFourVecPrint);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutDetectorEta),sizeof(StjJetCutDetectorEta),-1,292096,(char*)NULL,G__setup_memvarStjJetCutDetectorEta,G__setup_memfuncStjJetCutDetectorEta);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutNFourVecs),sizeof(StjJetCutNFourVecs),-1,292096,(char*)NULL,G__setup_memvarStjJetCutNFourVecs,G__setup_memfuncStjJetCutNFourVecs);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetCutPt),sizeof(StjJetCutPt),-1,292096,(char*)NULL,G__setup_memvarStjJetCutPt,G__setup_memfuncStjJetCutPt);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetListCut),sizeof(StjJetListCut),-1,292096,(char*)NULL,G__setup_memvarStjJetListCut,G__setup_memfuncStjJetListCut);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEStjJetCutmUcOallocatorlEStjJetCutmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjJetPrint),sizeof(StjJetPrint),-1,292096,(char*)NULL,G__setup_memvarStjJetPrint,G__setup_memfuncStjJetPrint);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticle),sizeof(StjMCParticle),-1,290816,(char*)NULL,G__setup_memvarStjMCParticle,G__setup_memfuncStjMCParticle);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR),sizeof(vector<StjMCParticle,allocator<StjMCParticle> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR,G__setup_memfuncvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticlecOallocatorlEStjMCParticlegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMC),sizeof(StjMC),-1,292097,(char*)NULL,G__setup_memvarStjMC,G__setup_memfuncStjMC);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCNull),sizeof(StjMCNull),-1,292097,(char*)NULL,G__setup_memvarStjMCNull,G__setup_memfuncStjMCNull);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCut),sizeof(StjMCParticleCut),-1,292097,(char*)NULL,G__setup_memvarStjMCParticleCut,G__setup_memfuncStjMCParticleCut);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEta),sizeof(StjMCParticleCutEta),-1,292096,(char*)NULL,G__setup_memvarStjMCParticleCutEta,G__setup_memfuncStjMCParticleCutEta);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutEtaForStatus),sizeof(StjMCParticleCutEtaForStatus),-1,292096,(char*)NULL,G__setup_memvarStjMCParticleCutEtaForStatus,G__setup_memfuncStjMCParticleCutEtaForStatus);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleCutStatus),sizeof(StjMCParticleCutStatus),-1,324864,(char*)NULL,G__setup_memvarStjMCParticleCutStatus,G__setup_memfuncStjMCParticleCutStatus);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListCut),sizeof(StjMCParticleListCut),-1,292096,(char*)NULL,G__setup_memvarStjMCParticleListCut,G__setup_memfuncStjMCParticleListCut);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEStjMCParticleCutmUcOallocatorlEStjMCParticleCutmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleListToFourVecList),sizeof(StjMCParticleListToFourVecList),-1,290816,(char*)NULL,G__setup_memvarStjMCParticleListToFourVecList,G__setup_memfuncStjMCParticleListToFourVecList);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticlePrint),sizeof(StjMCParticlePrint),-1,292096,(char*)NULL,G__setup_memvarStjMCParticlePrint,G__setup_memfuncStjMCParticlePrint);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCParticleToFourVec),sizeof(StjMCParticleToFourVec),-1,292096,(char*)NULL,G__setup_memvarStjMCParticleToFourVec,G__setup_memfuncStjMCParticleToFourVec);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_StjMCParticleListReader);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjMCTree),sizeof(StjMCTree),-1,324608,(char*)NULL,G__setup_memvarStjMCTree,G__setup_memfuncStjMCTree);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrack),sizeof(StjTrack),-1,290816,(char*)NULL,G__setup_memvarStjTrack,G__setup_memfuncStjTrack);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgR),sizeof(vector<StjTrack,allocator<StjTrack> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEStjTrackcOallocatorlEStjTrackgRsPgR,G__setup_memfuncvectorlEStjTrackcOallocatorlEStjTrackgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackcOallocatorlEStjTrackgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPC),sizeof(StjTPC),-1,292097,(char*)NULL,G__setup_memvarStjTPC,G__setup_memfuncStjTPC);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCNull),sizeof(StjTPCNull),-1,292096,(char*)NULL,G__setup_memvarStjTPCNull,G__setup_memfuncStjTPCNull);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_StjTrackListReader);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCTree),sizeof(StjTPCTree),-1,324608,(char*)NULL,G__setup_memvarStjTPCTree,G__setup_memfuncStjTPCTree);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTPCTxt),sizeof(StjTPCTxt),-1,324608,(char*)NULL,G__setup_memvarStjTPCTxt,G__setup_memfuncStjTPCTxt);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCorrectionForTracks),sizeof(StjTowerEnergyCorrectionForTracks),-1,292096,(char*)NULL,G__setup_memvarStjTowerEnergyCorrectionForTracks,G__setup_memfuncStjTowerEnergyCorrectionForTracks);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut),sizeof(StjTowerEnergyCut),-1,292097,(char*)NULL,G__setup_memvarStjTowerEnergyCut,G__setup_memfuncStjTowerEnergyCut);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCut2003BemcTower),sizeof(StjTowerEnergyCut2003BemcTower),-1,292096,(char*)NULL,G__setup_memvarStjTowerEnergyCut2003BemcTower,G__setup_memfuncStjTowerEnergyCut2003BemcTower);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutAdc),sizeof(StjTowerEnergyCutAdc),-1,292096,(char*)NULL,G__setup_memvarStjTowerEnergyCutAdc,G__setup_memfuncStjTowerEnergyCutAdc);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcStatus),sizeof(StjTowerEnergyCutBemcStatus),-1,292096,(char*)NULL,G__setup_memvarStjTowerEnergyCutBemcStatus,G__setup_memfuncStjTowerEnergyCutBemcStatus);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutBemcWestOnly),sizeof(StjTowerEnergyCutBemcWestOnly),-1,292096,(char*)NULL,G__setup_memvarStjTowerEnergyCutBemcWestOnly,G__setup_memfuncStjTowerEnergyCutBemcWestOnly);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEnergy),sizeof(StjTowerEnergyCutEnergy),-1,292096,(char*)NULL,G__setup_memvarStjTowerEnergyCutEnergy,G__setup_memfuncStjTowerEnergyCutEnergy);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TMatrixTSparseDiaglEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyCutEt),sizeof(StjTowerEnergyCutEt),-1,292096,(char*)NULL,G__setup_memvarStjTowerEnergyCutEt,G__setup_memfuncStjTowerEnergyCutEt);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListCut),sizeof(StjTowerEnergyListCut),-1,292096,(char*)NULL,G__setup_memvarStjTowerEnergyListCut,G__setup_memfuncStjTowerEnergyListCut);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergyCutmUcOallocatorlEStjTowerEnergyCutmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariation),sizeof(StjTowerEnergyVariation),-1,292097,(char*)NULL,G__setup_memvarStjTowerEnergyVariation,G__setup_memfuncStjTowerEnergyVariation);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyListVariation),sizeof(StjTowerEnergyListVariation),-1,292096,(char*)NULL,G__setup_memvarStjTowerEnergyListVariation,G__setup_memfuncStjTowerEnergyListVariation);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTowerEnergyVariationmUcOallocatorlEStjTowerEnergyVariationmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyPrint),sizeof(StjTowerEnergyPrint),-1,292096,(char*)NULL,G__setup_memvarStjTowerEnergyPrint,G__setup_memfuncStjTowerEnergyPrint);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToTLorentzVector),sizeof(StjTowerEnergyToTLorentzVector),-1,291072,(char*)NULL,G__setup_memvarStjTowerEnergyToTLorentzVector,G__setup_memfuncStjTowerEnergyToTLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyToFourVec),sizeof(StjTowerEnergyToFourVec),-1,292096,(char*)NULL,G__setup_memvarStjTowerEnergyToFourVec,G__setup_memfuncStjTowerEnergyToFourVec);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTowerEnergyVariationEnergy),sizeof(StjTowerEnergyVariationEnergy),-1,292096,(char*)NULL,G__setup_memvarStjTowerEnergyVariationEnergy,G__setup_memfuncStjTowerEnergyVariationEnergy);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCut),sizeof(StjTrackCut),-1,292097,(char*)NULL,G__setup_memvarStjTrackCut,G__setup_memfuncStjTrackCut);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDca),sizeof(StjTrackCutDca),-1,292096,(char*)NULL,G__setup_memvarStjTrackCutDca,G__setup_memfuncStjTrackCutDca);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutDcaPtDependent),sizeof(StjTrackCutDcaPtDependent),-1,292096,(char*)NULL,G__setup_memvarStjTrackCutDcaPtDependent,G__setup_memfuncStjTrackCutDcaPtDependent);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutEta),sizeof(StjTrackCutEta),-1,292096,(char*)NULL,G__setup_memvarStjTrackCutEta,G__setup_memfuncStjTrackCutEta);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutFlag),sizeof(StjTrackCutFlag),-1,292096,(char*)NULL,G__setup_memvarStjTrackCutFlag,G__setup_memfuncStjTrackCutFlag);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutNHits),sizeof(StjTrackCutNHits),-1,292096,(char*)NULL,G__setup_memvarStjTrackCutNHits,G__setup_memfuncStjTrackCutNHits);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackCutPossibleHitRatio),sizeof(StjTrackCutPossibleHitRatio),-1,292096,(char*)NULL,G__setup_memvarStjTrackCutPossibleHitRatio,G__setup_memfuncStjTrackCutPossibleHitRatio);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackListCut),sizeof(StjTrackListCut),-1,292096,(char*)NULL,G__setup_memvarStjTrackListCut,G__setup_memfuncStjTrackListCut);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_vectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_reverse_iteratorlEvectorlEStjTrackCutmUcOallocatorlEStjTrackCutmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackPrint),sizeof(StjTrackPrint),-1,292096,(char*)NULL,G__setup_memvarStjTrackPrint,G__setup_memfuncStjTrackPrint);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackToTLorentzVector),sizeof(StjTrackToTLorentzVector),-1,291072,(char*)NULL,G__setup_memvarStjTrackToTLorentzVector,G__setup_memfuncStjTrackToTLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackToFourVec),sizeof(StjTrackToFourVec),-1,292096,(char*)NULL,G__setup_memvarStjTrackToFourVec,G__setup_memfuncStjTrackToFourVec);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjTrackTowerEnergyListToFourVecList),sizeof(StjTrackTowerEnergyListToFourVecList),-1,290816,(char*)NULL,G__setup_memvarStjTrackTowerEnergyListToFourVecList,G__setup_memfuncStjTrackTowerEnergyListToFourVecList);
   G__get_linked_tagnum_fwd(&G__BaseDictLN_pairlEvectorlEStjTrackcOallocatorlEStjTrackgRsPgRcOvectorlEStjTowerEnergycOallocatorlEStjTowerEnergygRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTrigger),sizeof(StjDijetListTrigger),-1,292097,(char*)NULL,G__setup_memvarStjDijetListTrigger,G__setup_memfuncStjDijetListTrigger);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBJP),sizeof(StjDijetListTriggerBJP),-1,324609,(char*)NULL,G__setup_memvarStjDijetListTriggerBJP,G__setup_memfuncStjDijetListTriggerBJP);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_StjDijetListTriggerBHT),sizeof(StjDijetListTriggerBHT),-1,324608,(char*)NULL,G__setup_memvarStjDijetListTriggerBHT,G__setup_memfuncStjDijetListTriggerBHT);
}
extern "C" void G__cpp_setupBaseDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupBaseDict()");
  G__set_cpp_environmentBaseDict();
  G__cpp_setup_tagtableBaseDict();

  G__cpp_setup_inheritanceBaseDict();

  G__cpp_setup_typetableBaseDict();

  G__cpp_setup_memvarBaseDict();

  G__cpp_setup_memfuncBaseDict();
  G__cpp_setup_globalBaseDict();
  G__cpp_setup_funcBaseDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBaseDict();
  return;
}
class G__cpp_setup_initBaseDict {
  public:
    G__cpp_setup_initBaseDict() { G__add_setup_func("BaseDict",(G__incsetup)(&G__cpp_setupBaseDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBaseDict() { G__remove_setup_func("BaseDict"); }
};
G__cpp_setup_initBaseDict G__cpp_setup_initializerBaseDict;

