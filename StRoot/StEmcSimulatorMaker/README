Package: StEmcSimulatorMaker

Authors:
A. Pavlinov, WSU (pavlinov@physics.wayne.edu).

Emc Simulator Maker. This replace the St_ems_Maker.
The main differences between two makers are:

1. StEmcSimulatorMaker is clear C++ code;

2. StEmcSimulatorMaker has method which taking into account
   statistics of secondary electrons for BEMS and BPRS.
   The brief decsroption of new method you can find
   in initial fortran code which was written by V.Rykov
   (see file ipmsig.fortrantext).

3. Simulation interface (AAPSuaide, 2004-08-06)
   The configuration of the simulator is done by
   the table St_controlEmcSimulatorMaker. The
   pointer to this table can be accessed using the
   method
   
   StEmcSimulatorMaker::getControlSimulator()
   
   IMPORTANT: Any modifications to the default values
   of the simulator should be done *AFTER* the Init()
   method of the maker is called. If not, the values
   will be reset to their default values.
   
   To properly configure the simulator, add in your
   macro the following line:
   
   controlEmcSimulatorMaker_st* t = emcSim->getControlSimulator()->GetTable();
   
   of course, replace emcSim by the correct pointer to the
   StEmcSimulatorMaker object.
   
   The updated table description can be found in the file
   
   controlEmcSimulatorMaker.idl
   
   The members of the table are:
   
   struct  controlEmcSimulatorMaker {
     long  bemc;           /* switch for BEMC */
     long  eemc;           /* switch for EEMC */
     long  hist;           /* switch for hist */
     long  debug;          /* 0=debug of; >1=debug on */
     long  messLimit;      /* limit for warning message */
     long  keyDB[8];       /* key for DB */
     float pedCutOff[8];   /* pedestal cutoff for the hits (0 means no cutoff) */
     long  makeFullDet[8]; /* simulates pedestals where there is no hit */
     float calibOffSet[8]; /* calibration offset for every detector (systematic error) */
     float calibSpread[8]; /* calibration error for every detector */
     long  dateDB;         /* date for DB */
     long  timeDB;         /* time for DB */
   };
   
   In order to modify one of the values, proceed the
   following way in your doEvents macro:
   
   t->keyDB[2] = 2; // change keyDB for detector 2
   
   See the macro 
   
     StRoot/StEmcSimulatorMaker/macros/doSimul.C
   
   for details.
   
   The detector numbers are
     
     bemc   - 0
     bprs   - 1
     bsmde  - 2
     bsmdp  - 3
     endcap - 4-7 (NOT IMPLEMENTED)
     
   The detailed description of the table flags are:
   
   long bemc - turns on/off bemc simulation
     0 - simulation is off for the entire bemc detector
     1 - simulation is on but just copy the g2t_hits
     2 - simulation is on with slow simulation of the detector (default)
         (The user should ALWAYS use bemc = 2)
         
   long eemc - the same as 'bemc' for endcap
   
   long hist - flag to fill histograms
     0 - do not fill histograms
     1 - fill normal histograms
     2 - fill normal + extra histograms (default)
     
   long debug - turns on debug mode
     0 - debug if off (default)
     1 - debug is on
     
   long messLimit - size limit of messages
     200 is the default size
   
   long keyDB[detector] - flag for database interface
     0 - No database information is used (default)
     1 - status tables and calibration tables are used
     2 - status, calibration and pedestal tables are used 
     
   float pedCutOff[detector] - Pedestal cutoff for hits
     0 - No pedestal cutoff is applied (default)
     X - (ADC-pedestal) < X*RMS are not saved
     
   long  makeFullDet[detector] - flag to simulate the full detector
     0 - Only hits with valid deposited energy are simulated (default)
     1 - simulates the full set of hits even the ones with no
         signal (creates a baseline of pedestals in the full detector)
   
   float calibOffSet[detector] - calibration offset
     0 - No calibration offset is applied (default)
     X0- Calibration offset
         
         ADC(real) = X0*ADC(simulated from energy deposited)
         
         This changes the simulated ADC by a constant value but this
         constant value is not applied back when calibrating the
         detector to get the energy back. This simulates an offset
         in the calibration due to some systematic uncertainty.
         
         See the next flag for more details
   
   float calibSpread[detector] - calibration spread
     0 - No spread (default)
     S - calibration spread 
     
         if calibOffSet[detetor] != 0 the calibration offset
         in the previous flag is calculated the following way
         
         X = TRandom:Gaus(X,S)
         
         and
         
         ADC(real) = X*ADC(simulated from energy deposited)
         
         X is calculated in the InitRun() method and it is
         a different value (but fixed for the entire job) 
         for each channel.
         
         See the flag calibOffSet for more details
   
   long  dateDB
   long  timeDB - date and time for EMC DB. 
     
     This is not timestamp for the tables used but the
     minimum time EMC has some table in the database.
     DO NOT CHANGE!
           
   
Modification history (reverse chronological)
====================

08-Aug-2004 AAPSuaide
- corrected database and introduced new flags to
  the simulator.

13-may-2001 A.Pavlinov
- Corrected for new version of StMcEvent staff for EMC.
  In method StMcEmcHitCollection::module(m) m is 
  module number(from 1 to ..), not index (from 0 to ..).

22-mar-2001 A.Pavlinov
- Clean up for MDC4.
  Added method for comparing  of deposit energy hits for 
  "OLD" and "NEW" simulator.

02-Feb-2001  A.Pavlinov.
- New function Browse() and cleanup for new version of BFC.

Oct-2000  A.Pavlinov.
- Created, tested and committed.
