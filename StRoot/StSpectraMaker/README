Package StSpectraMaker 
Author Craig Ogilvie, MIT Oct 1999

Runs on reconstructed data using StEvent and produces histograms that the user 
can fit to make invariant yields of identified particlesas a function of (y,mt).
Allows the user to set-up different spectra analyses in one pass through the data,
e.g. proton spectra vs. centrality, or pion spectra using different PID techniques. 

The StSpectraMaker package is based around the class StSpectraAnalysis. 
Each "analysis" is an instantiation of this class or one of its derived classes. 
The user has complete control of the parameters of each analysis, the size of
the mt bin for the spectrum, the size of the ybin, quality cuts on the tracks,
e.g. nhits, dca, chi-squared etc.. A place-holder efficiency correction
is applied to the data. Not yet implemented, but forseen is the ability to 
use pwg-wide code to select events based on multiplicity etc..

There are several PID technques that can be used make mt-spectra. Each PID
technique has a class that is derived from StSpectraAnalysis. This allows
individual users to develop their own derived class if their physics analysis
requires it. Currently implemented is the PID technique that looks at the 
number of sigma a track is away from a PID dE/dx band.,e.g
deviant_proton = (de/dx - <de/dx>_proton)/sigma
This class is StTpcDeviantSpectraAnalysis and inherits from  StSpectraAnalysis.
An instantiation of this class is an "analysis" and in this case the output 
of the analysis is a 1-D histogram of e.g. deviant_proton for every (y,mt) bin.

Forseen is another derived class StTpcDedxSpectraAnalysis where the output will
be a 1-D histogram of dE/dx for every (y,mt) bin. Other derived classes might
use PID from the RICH. TOFp etc. The framework in StSpectraMaker will be 
able to handle each of these. Note this is currently not true because 
the STL container is not heterogenous but this will be done in the near future.

Depending on the analysis that the user has set-up, the output of 
StSpectraMaker is either a dE/dx histogram for every (y,mt) bin, or a
"deviant" for every (y,mt) bin, where deviant=(de/dx - <de/dx>)/sigma. 

The analysis of the histograms will require fitting to peaks
and background and is perhaps best done in an separate script.

As of 15 Oct 1999, this code works on linux and has placeholders
for applying efficiency routines, quality cuts on tracks etc.
 
