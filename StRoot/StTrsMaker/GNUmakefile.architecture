############################################################################
#
# $Id: GNUmakefile.architecture,v 1.1 1998/11/10 17:11:56 fisyak Exp $
#
# Author: Thomas Ullrich, Mar 25 1998
# --------------------------------------------------------------------------
# Architecture dependent variables for GNUmakefile
#
#   hp_ux102      HP-UX 10.20, aCC compiler (A.01.06 or higher)
# 
#   i386_linux2   Linux, egcs 1.0.2 or g++ 2.8.1 compiler (or higher)
#
#   i386_redhat50 Linux, egcs 1.0.2 or g++ 2.8.1 compiler (or higher)
# 
#   sun4x_54      SunOS 5.4, CC 4.2 (or higher)
#
#   sun4x_55      SunOS 5.5, CC 4.2 (or higher) 
#
#   sun4x_56      SunOS 5.6, CC 4.2 (or higher) 
#
# In any case one can use STAR_SYS=i386_linux2 to use the GNU compiler
# on all platforms.
#
# Override variables with gmake -e, which causes environment
# variables to take precedence, but watch for inadvertant overrides.
#
# Macros:
#
# ST_NO_MEMBER_TEMPLATES:  define if the compiler supports template
#                          member functions.
#
# ST_NO_EXCEPTIONS:      define if the compiler supports exception
#                          handling.
#
# ST_NO_NUMERIC_LIMITS:   define if the STL class numeric_limits
#                          is available.
#
# ST_NO_TEMPLATE_DEF_ARGS: define if the compiler does not support
#                          template default arguments
# --------------------------------------------------------------------------
#
# $Log: GNUmakefile.architecture,v $
# Revision 1.1  1998/11/10 17:11:56  fisyak
# Put Brian trs versin into StRoot
#
# Revision 1.6  1998/10/31 14:13:58  lasiuk
# SCL_HOME (add underscore) to make consistent with SCL!
#
# Revision 1.5  1998/09/14 10:30:30  lasiuk
# directory structure of scl
#
# Revision 1.4  1998/08/07 19:51:44  lasiuk
# use of STAR_SYS
#
# Revision 1.3  1998/06/30 22:57:32  lasiuk
# added debug flags for HP
#
# Revision 1.2  1998/06/27 16:48:47  lasiuk
# update to SCL standards (flags turn OFF ANSI features)
#
# Revision 1.1.1.1  1998/05/19 22:33:43  lasiuk
# Initial Revision
#
############################################################################

#
# STAR_SYS defaults to 'unknown'
#
ifeq ($(strip $(STAR_SYS)),)
	STAR_SYS := unknown
endif

#
# If SCL_OPTIMISE not specified, the default compilation is SCL_DEBUG ...
#
ifndef TRS_OPTIMISE
	TRS_DEBUG := 1
endif

#
# Default archive call. Changed for: SUN-CC.
#
AR := ar -r

#
# Default echo used with makedepend. Changed for G++-Linux.
#
ECHO:= echo

#
# Place where to find the SCL
#
SCL_HOME := /data/STAR/SCL/StarClassLibrary/scl

#
# Architecture dependent variables...
#

# -------- HP-aCC ---------

ifeq ($(STAR_SYS),hp_ux102)
	CXX          := aCC
	CXXFLAGS     := +z
	ifdef TRS_OPTIMISE
		CXXFLAGS += -O +Olibcalls +Onolimit
	else
		CPPFLAGS += -DRWSTD_BOUNDS_CHECKING 
		CXXFLAGS += -g +d -z
	endif
        MAKESHLIB    := 1
        LD           := aCC
        LDFLAGS      := -b -Wl,+vnocompatwarnings
        SHEXT        := sl
endif

# -------- i386_linux2, i386_redhat50 ---------

ifeq ($(findstring i386, $(STAR_SYS)),i386)
	CXX          := g++ 
	CPPFLAGS     := -DGNU_GCC -DST_NO_MEMBER_TEMPLATES
        CPPFLAGS     += -DST_NO_NUMERIC_LIMITS -DST_NO_EXCEPTIONS
	CPPFLAGS     += -DST_NO_NAMESPACES
	CXXFLAGS     := -pipe -fno-for-scope
	ifdef SCL_OPTIMISE
		CXXFLAGS += -O 
	else
		CXXFLAGS += -g 
	endif
        ECHO         := /bin/echo
endif

# -------- sun4x_54, sun4x_55, sun4x_56 ---------

ifeq ($(findstring sun4x, $(STAR_SYS)),sun4x)
	CXX          := CC
	STDHOME      := /star/sol/packages/rogue/workspaces/SOLARIS25/SUNPRO42/15d
	CPPFLAGS     := -I$(STDHOME)/include
        CPPFLAGS     += -DRWSTD_RENAME_EXCEPTION
	CPPFLAGS     += -DST_NO_MEMBER_TEMPLATES -DST_NO_NUMERIC_LIMITS
	CPPFLAGS     += -DST_NO_EXCEPTIONS -DST_NO_TEMPLATE_DEF_ARGS
	CPPFLAGS     += -DST_NO_NAMESPACES
	CXXFLAGS     := 
	ifdef SCL_OPTIMISE
		CXXFLAGS += -O
	else
		CXXFLAGS += -g
	endif
        ECHO         := /bin/echo
	SCL_TEMPLATE_REPOSITORY := Templates.DB 
endif
