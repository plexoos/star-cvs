<?xml version='1.0' encoding='UTF-8' ?>

<!-- This file should contain generic information to run a Data job. -->
<jobDescription>
    <jobType>
        <Therminator>
            <therminatorParams>
                <thRandomize  id='thRandomize'  Comment=' Start each event with a new random seed taken from current time' typedef='Randomize' widget='entry'>1</thRandomize>
                <thTableType  id='thTableType'  Comment=' The type of input tables' typedef='TableType' widget='combobox'>SHARE</thTableType>
                <thOutputFile id='thOutputFile' Comment=' File name (if we are saving events)' typedef='EventOutputFile' widget='entry'></thOutputFile>
                <thModel      id='thModel'      Comment=' The model of freeze-out to use' typedef='FreezeOutModel' widget='combobox'>SingleFreezeOut</thModel>
                <thBWVt       id='thBWVt'       Comment=' Radial flow velocity. Only used in BlastWave model' typedef='BWVt' widget='entry'>0.55</thBWVt>
                <thTau        id='thTau'        Comment=' proper time at freeze-out [fm]' typedef='Tau' widget='entry'>9.74</thTau>
                <thRhoMax     id='thRhoMax'     Comment=' maximum transverse radius [fm]' typedef='RhoMax' widget='entry'>7.74</thRhoMax>
                <thTemperature id='thTemperature' Comment=' Temperature [GeV]' typedef='Temperature' widget='entry'>0.1656</thTemperature>
                <thMiuI       id='thMiuI' Comment=' Chemical potential for Isospin [GeV]' typedef='MiuI' widget='entry'>-0.0009</thMiuI>
                <thMiuS       id='thMiuS' Comment=' Chemical potential for Strangeness [GeV]' typedef='MiuS' widget='entry'>0.0069</thMiuS>
                <thMiuB       id='thMiuB' Comment=' Chemical potential for Baryon [GeV]' typedef='MiuB' widget='entry'>0.0285</thMiuB>
                <thAlphaRange id='thAlphaRange' Comment=' Range of integration for z-variable' typedef='AlphaRange' widget='entry'>8</thAlphaRange>
                <thRapidityRange id='thRapidityRange' Comment=' Range of integration for z-variable' typedef='RapidityRange' widget='entry'>4</thRapidityRange>
                <thNumberOfIntegrateSamples id='thNumberOfIntegrateSamples' Comment=' Number of samples used in multiplicity and max. integrand determination' typedef='NumberOfIntegrateSamples' widget='entry'>1000000</thNumberOfIntegrateSamples>
            </therminatorParams>
        </Therminator>
    </jobType>

    <standardElements>
        <jobControl>
            <jobName widget='entry' id='jobName'>DataTesting</jobName>
            <outputDir widget='entry' id='outputDir'>$env(MYDATA)/Therminator/test</outputDir>
            <starLibVersion widget='entry' id='starLibVersion'>$env(STAR_VERSION)</starLibVersion>
            <localDir widget='entry' id='localDir'>[pwd]</localDir>
            <eventsPerJob widget='entry' id='eventsPerJob'>1000</eventsPerJob>
            <jobPurpose widget='text'>You should replace this text with the reason for this job.
            </jobPurpose>
        </jobControl>

        <!-- To drive everything we need an xml file for star-submit. -->
        <starSubmit nProcesses='20' simulateSubmission='true'>
            <command>
        starver <refer refersTo='starLibVersion'/>
        cd <refer refersTo='localDir'/>
        root4star -q -b <refer refersTo='outputDir'/>/scripts/doEStruct.C\(\"\",\"$SCRATCH\",\"<refer refersTo='outputDir'/>/scripts\",<refer refersTo='eventsPerJob'/>\)            </command>
            <stdout URL="file:OUTPUTDIR/logs/$JOBID.log"/>
            <output fromScratch="data/*.root" toURL="file:OUTPUTDIR/data/" />
            <output fromScratch="cuts/*.root" toURL="file:OUTPUTDIR/cuts/" />
            <output fromScratch="QA/*.root"   toURL="file:OUTPUTDIR/QA/" />
            <output fromScratch="stats/*.txt" toURL="file:OUTPUTDIR/stats/" />
        </starSubmit>

        <!-- Need appropriate event cuts. -->
        <eventCuts>
            <eventCut Comment = 'centrality cut, number of tracks in |eta| &lt; 0.5'>
                <cutName>centrality</cutName>
                <Value widget = 'entry'>1</Value>
                <Value widget = 'entry'>2000</Value>
            </eventCut>
        </eventCuts>

        <!-- And appropriate track cuts. -->
        <trackCuts>
            <trackCut Comment = 'charge cut'>
                <cutName>Charge</cutName>
                <Value widget = 'entry'>-1</Value>
                <Value widget = 'entry'>1</Value>
            </trackCut>
            <trackCut Comment = 'pt cut'>
                <cutName>Pt</cutName>
                <Value widget = 'entry'>0.15</Value>
                <Value widget = 'entry'>20.0</Value>
            </trackCut>
            <trackCut Comment = 'phi cut'>
                <cutName>Phi</cutName>
                <Value widget = 'entry'>-1</Value>
                <Value widget = 'entry'>1</Value>
            </trackCut>
            <trackCut Comment = 'eta cut'>
                <cutName>Eta</cutName>
                <Value widget = 'entry'>-1</Value>
                <Value widget = 'entry'>1</Value>
            </trackCut>
        </trackCuts>

        <!-- The doEStruct macro is complicated.
             The main part is in a generic file. -->
        <doEStructMacro>
            <analysisType id='analysisType' widget='entry'>StEStructCorrelation</analysisType>
            <libraries id='libraries' widget='none'>
    gSystem->Load("StEStructPoolEventGenerators");
    // Therminator stuff
    gSystem->Load("StEStructPoolTherminator.so");
            </libraries>
            <centralities id='centralities' widget='entry'>1 2000</centralities>
            <ptCentralities id='ptCentralities' typedef='const  double ptMultCut[] = ' typedef2='int mbNPtBins = '>1 2000</ptCentralities>
    <!-- Reader depends on type of data. -->
            <declareReader id='declareReader' widget = 'text'>
    Therminator *therm = new Therminator(scriptDir);

    //  reader = reader interface + pointer to Data Maker + cut classes

    StEStructTherminator* reader = new StEStructTherminator(therm,ecuts,tcuts,-1);

    // EventType is for qaHistograms. Depends on type of reader though.
    int EventType = 2;
            </declareReader>
        </doEStructMacro>

    </standardElements>
</jobDescription>
