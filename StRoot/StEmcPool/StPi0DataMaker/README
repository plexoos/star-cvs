StPi0DataMaker

----------------------------------------------------------------------------
This is a part of pi0 analysis code.
See StPi0Common/README for details.
----------------------------------------------------------------------------

The StPi0DataMaker produces data structures and stores it in the maker tree.
Other maker downstream can get it via TMaker::GetData(name).
The data structures of a given type are stored inside TObjectSet wrappers 
under one TDataSet.

----------------------------------------------------------------------------
DATA STRUCTURES
See StPi0Common/StPi0DataStructures.h for the structures and corresponding dataset names.
The following datasets are created: events, BEMC hits, BEMC clusters, BEMC points, pairs of points
(same event, mixed events and mixed sub-events), MC pi0 particles, MC eta particles, MC photons.

----------------------------------------------------------------------------
FILLING DATA STRUCTURES
There is a number of functions in StPi0DataMakerUtil.cxx that fill the data structures using StEvent,
StEmcCollection and StMcEvent.

----------------------------------------------------------------------------
TRIGGER SIMULATION
The StPi0TriggerSimulatorMaker was originally developed to simulate the BEMC HighTower trigger.
Now it is used in this capacity for the d+Au 2003 data only. For the data from year>=2005 it uses
the information provided by StEmcTriggerSimulator, which must be present in the chain.

----------------------------------------------------------------------------
EVENT MIXER
The event mixer is implemented as a template classes TMixer and TMixerParameters in EventMixer.h,
this is a very general plain C++ template classes that mix any number of data lists from any number 
of events, using configurable mixing classes.
In this analysis the following configuration is used:
Data type: TMyPointTreeData
Number of data lists to mix: 2 (two points make a pi0 candidate)
Number of event in the pool: configurable (default is 4)
Mixing classes: configurable, any combination of Z, BEMC mult., trigger, jet eta, jet E_T.

----------------------------------------------------------------------------
HOW TO USE THIS MAKER
See macros/run_data.C

----------------------------------------------------------------------------
HOW TO SAVE DATA STRUCTURES INTO FILE
Use StPi0DataSaveMaker as shown in macros/run_data.C, it is the maker that accesses data created by
StPi0DataMaker and writes it into trees in two formats: plain data structures or packed into TClonesArray arrays.
See StPi0Common/StPi0DataStructures.h for the names of trees and branches.

----------------------------------------------------------------------------
HOW TO USE DATA STRUCTURES IN OTHER MAKERS
Here is an example of the code in another maker that accesses the data:

#include <StEmcPool/StPi0Common/StPi0DataStructures.h>
TDataSet *dataset = this->GetData(eventDatasetName);
if (dataset) {
    TListIter iter(dataset->GetList());
    while (const TObjectSet *objSet = dynamic_cast<const TObjectSet *>(iter())) {
	const TMyEventTreeData *eventData = dynamic_cast<const TMyEventTreeData*>(objSet->GetObject());
	if (eventData) {
	    // Here is TMyEventTreeData
	}
    }
}

Another real example is StPi0DataSaveMaker.
