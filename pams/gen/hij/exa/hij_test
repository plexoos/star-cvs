#!/bin/csh -f
# 
# hij_test :  	t/csh shell script for running hij_test which
#		generates reference histograms.  HIJING
# events are generated with hijevt into a fifo, which are
# simultaneously read by hij_test.  Output histograms are kept in 
# /exa directory for reference to future versions.
#
# Current implementation:  
#
#	50 Central Au+Au events, RHIC energies.
#	text format
#
# Created:	Matthew Bloomer   4/3/95
# Usage:
#	cd hij/exa/$STAR_ARCH
#	../hij_test >&! hij_test.log &
#
# Comments: 	Tested so far only on ribm00
#				      rsgi00
#
#-------------------------------------------------------------
#
# Source star_login.csh in case STAR environment variables are
# not setup (e.g. batch mode on SP1).
#
source /afs/rhic/star/login/star_login.csh
#
# Other environment definitions:
#   	XFLRTEOPTS : 	use "old" namelist convention
#
setenv XFLRTEOPTS namelist=old
#
# generate input parameter file $params_file
# (make changes to parameters here)
# 
set params_file = hij_test.dat
set n_events = 50
set output_file = /tmp/hijing.fifo
#
echo "HIJING Test Suite Parameter file"						>$params_file
echo "Matthew Bloomer    4/3/95"						>>$params_file
echo "Generate 50 central Au+Au events at sqrt(s(NN))=200 GeV"			>>$params_file
echo "Default parameters except for:"						>>$params_file
echo "  *resonances are permitted to decay, and"				>>$params_file
echo "  *keep all parent history for later GEANT processing"			>>$params_file
echo "  *maximum error logging turned on"					>>$params_file
echo \$\$\$\$\$\$\$\$\$\$							>>$params_file
echo "200.0              ! nucleon-nucleon energy"				>>$params_file
echo "'CMS'              ! frame"						>>$params_file
echo "'A','A'            ! proj, targ  (the quotation marks are important)"	>>$params_file
echo "197, 79, 197, 79   ! A,Z projectile, A, Z target"				>>$params_file
echo "50                 ! number of events"					>>$params_file
echo "0.  .75            ! minimum, maximum impact parameter"			>>$params_file
echo "4998278            ! seed"						>>$params_file
echo "1                  ! event message frequency"				>>$params_file
echo "2                  ! Output format (1=egz, 2=text)"			>>$params_file
echo "1                  ! quenching on (1) or off (0)"				>>$params_file
echo "1                  ! keep mothers (1) or only daughters (0)"		>>$params_file
echo "0  0.0		 ! turn on (1) or off (0) sample jets, pt of sample jet">>$params_file
echo "'IHPR2' 12  0      ! permit resonance decays..."				>>$params_file
echo "'IHPR2' 10  1      ! maximum error logging"				>>$params_file
#
# Remove old fifo if it exists and recreate it
#
if (-e $output_file) then
	rm $output_file
endif
mkfifo $output_file
#
# Startup hijevt 
#
time hijevt_v14 <<eof &
$params_file
$output_file
eof
#
# Now startup hij_test.  In this we do NOT put it into the
# background, since we want the script to finish when
# hij_test finishes.  This doesn't work well in interactive mode.
#
time hij_test <<eof
$n_events
eof
#
# End of running
#
echo "That's it folks"
