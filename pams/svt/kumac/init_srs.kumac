*
* srs_init.kumac
*
* synopsis: kumac to initialize the srs package (Svt Resolution Simulator)
*
* author:   W.K.Wilson
*
* history:  C.Pruneau, June 97, adaptation to new staf
*           editted by Kathy Turner June 5, 98 
* 
**************************************************************************
 
macro init
 
*********** Create Tables ************************************

cd /dui/constants/svt/geometry

newtable srs_activea srs_activea 3
tdm/table/rowcount srs_activea 3

* Rectangle parameters: 
*       1=width of standoff at anodes
*       2=width of standoff next to guard region + mini-guard width
tdm/table/cell/putvalue 'srs_activea[0].id' 1
tdm/table/cell/putvalue 'srs_activea[0].param' 0. .135 0. 0. 0. 0. 0. 0. 0. 0.

* Butterfly parameters: 
*       1=width of standoff at anodes
*       2=width of standoff next to guard region
*       3=maximum transverse width of guard region
*       These numbers are from Gintas V circa Feb. 1994
tdm/table/cell/putvalue 'srs_activea[1].id' 2
tdm/table/cell/putvalue 'srs_activea[1].param' .3475 .125 .34 0 0 0 0 0 0 0 
* Trapezoidal parameters: [like STAR 1] 
*       1=width of standoff at anodes
*       2=width of standoff next to guard region
*       3=maximum transverse width of guard region
*       4=width of guard region in drift direction
tdm/table/cell/putvalue 'srs_activea[2].id' 3 
tdm/table/cell/putvalue 'srs_activea[2].param' .3475 .125 .68 .68 0 0 0 0 0 0

**************************************************************************
**************************************************************************
* This section chooses the method (only 2 and 3 are supported now),
* initializes the random seed, chooses the shape of the active area,
* and fixes the resolution

cd /dui/constants/svt/params
message 'initializing the srs parameter table...'
newtable srs_srspar srs_srspar 1
tdm/table/rowcount srs_srspar 1

*           Method=1 (default) uses Ken Wilson's svt_resolution_sim,           
*                    the full blown resolution simulator                       
*           Method=2 uses Claude Pruneau's spt_direct routine to make          
*                    a direct copy from hits to space points (no smearing)     
*           Method=3 uses Claude Pruneau's spt_direct_gs routine which         
*                    smears the hits with a fixed sigma which is taken from    
*                    the table direct(1).sd (drift direction)                  
*                                           .st (transverse direction)         
tdm/table/cell/putvalue 'srs_srspar[0].method' 3
* init_ran is the seed for the gaussian smearing
tdm/table/cell/putvalue 'srs_srspar[0].init_ran' 111111
* id_active is the active area type for each layer(eg rectangle, butterfly,etc)
tdm/table/cell/putvalue 'srs_srspar[0].id_active' 1 1 1 1 1 1 0 0 0 
tdm/table/cell/putvalue 'srs_srspar[0].pitch' 0
tdm/table/cell/putvalue 'srs_srspar[0].nsca' 0
tdm/table/cell/putvalue 'srs_srspar[0].bucket' 0
tdm/table/cell/putvalue 'srs_srspar[0].enc' 0
tdm/table/cell/putvalue 'srs_srspar[0].fsca' 0
tdm/table/cell/putvalue 'srs_srspar[0].merge' 0
tdm/table/cell/putvalue 'srs_srspar[0].shaper' 0 
tdm/table/cell/putvalue 'srs_srspar[0].thickness' 0 
tdm/table/cell/putvalue 'srs_srspar[0].vd' 0 
 
 message 'initializing the srs direct table...'
newtable srs_direct srs_direct 1
tdm/table/rowcount srs_direct 1

*          sd = resolution in the drift direction
*          st = resolution in the direction transverse to the drift
*          the expected value is 20 microns
tdm/table/cell/putvalue 'srs_direct[0].sd' .0020
tdm/table/cell/putvalue 'srs_direct[0].st' .0020
 
 cd /dui
 
return
















