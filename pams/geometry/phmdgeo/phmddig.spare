     module  Phmddig is my digi routine
     author  W.B.Christie
     created today
* Sub** (31/7/97) pad size changed from 1.2, 1.5 to 1.23 and 
***       1.53 for small and big boxes resp.
**  Sub* (7/8/97) bug to have at least one CPV hit to write the output is fixed.
+CDE,GCUNIT,GCFLAG.
* 
     Integer AGFHIT0,AGFHIT1,ih,nv(15),itra,nphot
     Real    hits(15),etot,ene,hits_ext(15),dcoord(3)
     Real endep,endep_cpv
     double precision px,py,pz
     Real pxc,pyc,pzc
     Real edep(35000),epad(14,72,72)
     Real epad_cpv(14,72,72)
     integer trid(35000)	
     integer trdep,iddep,multp
     integer tr_c,id_c
     integer trpad(14,72,72)
     integer trpad_cpv(14,72,72)
     integer parid(14,72,72)
     integer parid_cpv(14,72,72)
     integer multpad(14,72,72)
     integer flg_pmd(14,72,72)
     real p_x(35000)
     real p_y(35000)
     real p_z(35000)
     real phi,PI,eta,theta

*	after PDGS volume active
	real edep_mip_1(14,6000)
	real edep_mip_2(14,6000)
        integer kl,ll
*
*  all the dimensions are put to 35000, knowing that the maximum track number
*  can reach around 30000
*
     Integer IYN,i,l,input
     character*4 CHTAGS_QCAL(15)
     real  vert(3),pvert(4),ubuf(100)
     integer ipart,nvert,nbuf
     integer ii,ij,ik
     integer iflag,pmdflag
*
	integer icam,xpad,ypad
	real xx,yy,zz

     data iyn/1/

*  Initialize all arrays
*
	do ii=1,14
	   do ij=1,72
	      do ik=1,72
      		 epad(ii,ij,ik)=0.0
	         epad_cpv(ii,ij,ik)=0.0
		 trpad(ii,ij,ik)=0
		 trpad_cpv(ii,ij,ik)=0
		 parid(ii,ij,ik)=0
		 parid_cpv(ii,ij,ik)=0
	    enddo
          enddo 
        enddo
	do ii=1,14
	   do ij=1,6000
	      edep_mip_1(ii,ij)=0.0
	      edep_mip_2(ii,ij)=0.0
	   enddo
	enddo
*       
* Get the kinematics of the input tracks 
*
        print*,"work in progress !!" 
	do itra=1,35000
	   call GFKINE(abs(itra),vert,pvert,ipart,nvert,ubuf,nbuf)
           if(ipart.gt.0) then 
           write(101,*)abs(itra),ipart,pvert
	   endif
	     if(ipart.gt.0)then
	      call check_pmd(itra,pvert,iflag)
	      if((iflag.eq.1).and.(pvert(3).gt.0))then
*       if((ipart.ne.1).and.(ipart.ne.16).and.(ipart.ne.7))then
		 if(ipart.eq.1.or.ipart.eq.16)then
		    write(19,*)ipart,pvert
		    input=input+1
		 endif
	      endif
	   endif
	enddo
	print*, 'INPUT photons in pmd', input
	input=0

**** Start of CPV Gas decoding

	if(AGFHIT0('PHMD','PDGS')==ok)then
	   do while (AgFHIT1(ih,itra,nv,hits)==ok)

	      if (abs(ih)==1) then
* this is the first hit in this Gas
		 call agfpath(nv)
	      endif
*
	      icam=nv(1)
	      xx=hits(1)
	      yy=hits(2)
	      zz=hits(3)
              
* -- calculation of phi and eta --

              PI=3.14159
              if(abs(xx).gt.0) then
		 if(yy.lt.0.and.xx.lt.0) then	
		    phi= -180. + atan(yy/xx)*180./PI 
		 else
		    if(yy.gt.0.and.xx.lt.0) then	
		       phi=180.+ atan(yy/xx)*180./PI    
		    else
		       phi=atan(yy/xx)*180./PI
		    endif
		 endif 
              endif

	      call get_pad_alice(icam,nv(3),xpad,ypad)

      
	      theta = abs(atan(sqrt(xx**2+yy**2)/abs(zz)))
	      if(theta.gt.0) eta = -log(tan(theta/2.))

      call GFKINE(abs(itra),vert,pvert,ipart,nvert,ubuf,nbuf)

      write(50,997) itra,ipart,xx,yy,zz,xpad,ypad,
     1     icam,nv(2),hits(11)*1.0e9,
     2     pvert(1),pvert(2),pvert(3),pvert(4)

 997	format(2x, i7, 2x, i3, 2x, f11.5, 2x, f11.5, 2x, f11.5, 2x,
     1     i4 ,1x ,i4, 1x, i4, 1x, i2, 1x, 5(1x,g15.5))

	      write(42,*)nv(1),nv(2),nv(3),hits(11)

*       
*      NV(2) = 1 PMD
*      NV(2) = 2 CPV
*
*	Get kinematics of the track, which appears here as depositing energy
*       in PGCO
*
	      call GFKINE(abs(itra),vert,pvert,ipart,nvert,ubuf,nbuf)
	      p_x(abs(itra))=pvert(1)
	      p_y(abs(itra))=pvert(2)
	      p_z(abs(itra))=pvert(3)
*
*	Get the pad co-ordinates corresponding to xx,yy
*
	      call get_pad_alice(icam,nv(3),xpad,ypad)

*	      IF(NV(2).EQ.2)THEN
	      IF(NV(2).EQ.1)THEN
		 trpad_cpv(icam,xpad,ypad)=abs(itra)
		 parid_cpv(icam,xpad,ypad)=abs(ipart)
*       note, it is 10e9, and not 1e9
*       
           epad_cpv(icam,xpad,ypad)=epad_cpv(icam,xpad,ypad)+hits(11)*10e9
	      endif

*	      if(NV(2).eq.1)then
	      if(NV(2).eq.2)then
*
*	Check if the input trak was inside PMD, 
*                          (iflag=1), or outside PMD (iflag=2)
*
		 call check_pmd(abs(itra),pvert,iflag)
*
*    epad == energy deposited in a pad, for all shower particles together
*
	epad(icam,xpad,ypad)=epad(icam,xpad,ypad)+hits(11)*10e9
*
* Count for multiple hit
*
	if(abs(itra).ne.trpad(icam,xpad,ypad))then
             multpad(icam,xpad,ypad)=multpad(icam,xpad,ypad)+1
	endif
*
*   Track number, for the pad, note only latest track will be written, for
*    multiply hit pad.
*
	trpad(icam,xpad,ypad)=abs(itra)
*
*	 Track id, If once hit by photon, then id is always made as of photon
*
	if(parid(icam,xpad,ypad).ne.1)parid(icam,xpad,ypad)=abs(ipart)

*	write(12,*)'pmd',icam,nv(2),zz,xpad,ypad,hits(11)
*
*     INside flag, if first hit by an inside track, the flag written is for 
*     inside track (1), otherwise for outside (2)
*	
	if(flg_pmd(icam,xpad,ypad).ne.1)flg_pmd(icam,xpad,ypad)=iflag
*
* you will get here only on the last hit in schintillator
*
        endif
        enddo
      endif
*
*	  Write the outputs in a flie
*
	do ii=1,14
	   do ij=1,72
	        do ik=1,72
     	          endep=epad(ii,ij,ik)
     	          endep_cpv=epad_cpv(ii,ij,ik)
     	          trdep=trpad(ii,ij,ik)
     	          tr_c=trpad_cpv(ii,ij,ik)
     	          iddep=parid(ii,ij,ik)
	          if(iddep.gt.72)iddep=72
     	          id_c=parid_cpv(ii,ij,ik)
	          if(id_c.gt.72)id_c=72
     	          multp=multpad(ii,ij,ik)
	          pmdflag=flg_pmd(ii,ij,ik)
	          px=p_x(trdep)
	          py=p_y(trdep)
	          pz=p_z(trdep)
	          pxc=p_x(tr_c)
	          pyc=p_y(tr_c)
	          pzc=p_z(tr_c)
         if(endep.gt.0)then
      write(41,*)ii,ij,ik,iddep,multp,trdep,endep,px,py,pz,endep_cpv
*      write(11,*)ii,ij,ik,iddep,multp,pmdflag,trdep,endep,px,py,pz,endep_cpv
	 endif
*         if(endep_cpv.gt.0.and.endep.eq.0)then
         if(endep_cpv.gt.0)then
      write(51,*)ii,ij,ik,id_c,multp,tr_c,endep,pxc,pyc,pzc,endep_cpv
	 endif
601	format(6(1x,i3),1x,i5,5(1x,f10.3))
	        enddo
	   enddo
	enddo 
        do kl=1,14
	  do ll=1,6000
           if(edep_mip_1(kl,ll).gt.0.or.edep_mip_2(kl,ll).gt.0)then
             print*,'TOTAL******',kl,ll,edep_mip_1(kl,ll),edep_mip_2(kl,ll)
           endif
          enddo
        enddo
*	    write(11,*)9999,ij,ik,iddep,multp,pmdflag,trdep,endep,px,py,pz,endep_cpv
     end
*
	subroutine get_pad_alice(icam,npad,xpad,ypad)
	   integer icam,xpad,ypad
* this is not right --27 feb       ypad=int(npad/72)+1
             ypad=int((npad-1)/72)+1
             xpad=int(npad-((ypad-1)*72))
             return
	end
	subroutine get_pad(icam,xx,yy,xpad,ypad)
	integer icam,xpad,ypad
*
	real x0101(24), y0101(24),xx,yy
*
*	co-ordinates (in cm) for the left-lower corner of the boxes
*
	data x0101/-122.8, -61.4, 0.0, 61.4, 29.2, 76.0,
            61.4,  0.0,-61.4, -122.8, -122.8,-76.0,
            -153.2, -76.6, 0.0, 76.6, 2*122.8,
             76.6, 0.0, -76.6, -153.2, 2*-181.2/ 
	data y0101/ 4*30.7,2*-30.7,4*-77.5,2*-30.7,
             4*77.5,0.0,-76.6,4*-135.9,-76.6,0.0/
*
*	Pad co-ordinate conversion
*
	if(icam.le.12)then
		xpad=(xx-x0101(icam))/1.23+1
		ypad=(yy-y0101(icam))/1.23+1
	else
		xpad=(xx-x0101(icam))/1.53+1
		ypad=(yy-y0101(icam))/1.53+1
	endif
	        if(xpad.gt.50)xpad=50
	        if(ypad.gt.50)ypad=50
	        if(xpad.lt.1)xpad=1
	        if(ypad.lt.1)ypad=1
	return
	end
*
	subroutine check_pmd(itra,pvert,iflag)
C
C This routine check if the track is within PMD volume or not
C iflag = 1 : within PMD volume
C         2 : not within PMD volume

         real  pvert(4)
	 integer iflag
	 real zdist
	 zdist=601.
	px=pvert(1)
	py=pvert(2)
	pz=pvert(3)
	iflag=0
*
*   Calculation of x and y :**************************************
       if(pz.ne.0.)x=((zdist/pz)*px)                           
       if(pz.ne.0.)y=((zdist/pz)*py)         
       write(40,*)pz,x,y,zdist
*	print*,pz,x,y
*       CUT STAR PMD AREA
          if(abs(x).gt.181.2.or.abs(y).gt.135.9)goto 30
          if(abs(x).gt.153.2.and.abs(y).gt.76.6)goto 30
          if(abs(x).le.29.2.and.abs(y).le.30.7)goto 30
	     iflag=1
	     return
30      continue
	 iflag=2
	 return
C    
	 end





