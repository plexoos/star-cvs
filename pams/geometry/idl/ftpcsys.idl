/* File ftpcsys.idl
** 
** Description: FORWARD TPC IN STAR
** Author     : ANDREAS SCHUETTAUF
** Created    : 03-APR-98
** This file is automatically generated by AGI
** --------- DO NOT EDIT THIS FILE -----------
*/
  struct  ftpc_ftpg   { 
    float system[2];    /*  - usage counter                           */
    float version;      /*  - GEOMETRY VERSION                        */
    float rinnerms;     /*  - INNERMOST RADIUS OF ENVELOPE            */
    float routerms;     /*  - OUTERMOST RADIUS OF ENVELOPE            */
    float rgasout;      /*  - OUTER RADIUS OF THE GAS-VOLUME          */
    float rrom;         /*  - OUTER RADIUS FOR ONE READOUT MODULE IN  */
    float relcard;      /*  - OUTER RADIUS FOR THE ELECTRONIC CARD    */
    float rcooplm;      /*  - OUTER RADIUS FOR THE COOLING PLATE MIDD */
    float rcoople;      /*  - OUTER RADIUS FOR THE COOLING PLATE ENDS */
    float zstart;       /*  - DISTANCE FROM THE INTERACTION POINT     */
    float totlen;       /*  - OVERALL LENGTH                          */
    float laylen;       /*  - THICKNESS OF THE SENSITIVE LAYER        */
    float hitlay;       /*  - # OF PADROWS IN ONE FTPC : 10           */
    float drinall1;     /*  - THICKNESS OF INNER AL-LAYER OF INNER TU */
    float drinall2;     /*  - THICKNESS OF OUTER AL-LAYER OF INNER TU */
    float drinisol;     /*  - THICKNESS OF PLASTIC INSULATION OF INNE */
    float dzkapton;     /*  - THICKNESS OF A DOUBLE KAPTON-WINDOWS    */
    float drifr;        /*  - THICKNESS (R) OF INNER FLANGE RING      */
    float dzifr;        /*  - THICKNESS (Z) OF INNER FLANGE RING      */
    float dzer;         /*  - THICKNESS (Z) OF ENDRING                */
    float dzrom;        /*  - DISTANCE OF ONE READOUT MODULE RING TO  */
    float dzsura;       /*  - DISTANCE TO INNER(A) SUPPORT RING FROM  */
    float dzsurb;       /*  - DISTANCE TO OUTER(B) SUPPORT RING FROM  */
    float dzsmpr;       /*  - DISTANCE SMALL BETWEEN TO PAD ROWS      */
    float dzbipr;       /*  - DISTANCE BIG BETWEEN TO PAD ROWS        */
    float msrdz;        /*  - HALF LENGTH OF MAIN SUPPORT RING        */
    float serhole;      /*  - HALF SUPPORT END RING HOLE LENGTH Z     */
    float risring;      /*  - OUTER RADIUS FOR INNNER SUPPORT RING    */
    float isringdz;     /*  - HALF LENGTH FOR INNER SUPPORT RING      */
    float sbsrdx;       /*  - HALF WIDTH OF STABIL. BLOCK FOR SUPP.RI */
    float sbsrdy;       /*  - HALF THICK. OF STABIL. BLOCK FOR SUPP.R */
    float sbsrdz;       /*  - HALF LENGTH OF STABIL. BLOCK FOR SUPP.R */
    float gasvoldz;     /*  - HALF LENGTH OF ACTIVE VOLUME            */
};
  struct  ftpc_ffcc   { 
    float system[2];    /*  - usage counter                           */
    float version;      /*  - GEOMETRY VERSION                        */
    float stileng;      /*  - LENTH OF THE CERAMIC-HOLDERS            */
    float stidia;       /*  - DIAMETER OF CERAMIC-HOLDERS             */
    float stirpos;      /*  - R-POS. OF CERAMIC-HOLDERS               */
    float rithick;      /*  - THICKNESS OF THE FC RINGS               */
    float ridr;         /*  - WIDTH (R) IF THE FC RINGS               */
    float rigap;        /*  - GAP BETWEEN TWO FC RINGS                */
    float barleng;      /*  - LENGTH OF STABILIZER BAR FOR FC         */
    float barwidt;      /*  - WIDTH OF STABILIZER BAR FOR FC          */
    float barthik;      /*  - THICKNESS OF STABILIZER BAR FOR FC      */
};
  struct  ftpc_frbd   { 
    float system[2];    /*  - usage counter                           */
    float version;      /*  - GEOMETRY VERSION                        */
    float phi1;         /*  - PHI 1                                   */
    float phi2;         /*  - PHI 2                                   */
    float phi3;         /*  - PHI 3                                   */
    float phi4;         /*  - PHI 4                                   */
    float phi5;         /*  - PHI 5                                   */
    float phi6;         /*  - PHI 6                                   */
    float phi7;         /*  - PHI 7                                   */
    float phi8;         /*  - PHI 8                                   */
    float phi9;         /*  - PHI 9                                   */
    float phi10;        /*  - PHI 10                                  */
    float phi11;        /*  - PHI 11                                  */
    float phi12;        /*  - PHI 12                                  */
    float phi13;        /*  - PHI 13                                  */
    float xrom;         /*  - X LENGHT OF ONE READOUT MODULE          */
    float yrom;         /*  - Y LENGHT OF ONE READOUT MODULE          */
    float zrom;         /*  - Z LENGHT OF ONE READOUT MODULE          */
    float rahol;        /*  - RADIUS FOR THE CIRCLE CUT IN ROM        */
    float xehol;        /*  - X LENGTH END HOLE IN ROM                */
    float yehol;        /*  - Y LENGTH END HOLE IN ROM                */
    float xlhol;        /*  - X LENGTH LONG HOLE IN ROM               */
    float ylhol;        /*  - Y LENGTH LONG HOLE IN ROM               */
    float boffset;      /*  - BOX OFFSET                              */
    float zoffb;        /*  - Z OFFSET FOR BOX HOLE                   */
    float modleng;      /*  - LENGTH (Z) OF THE MODULE                */
    float electrdx;     /*  - ELECTRONICS WIDTH                       */
    float electrdy;     /*  - ELECTRONICS THICKNESS                   */
    float electrdz;     /*  - ELECTRONICS LENGTH                      */
    float coolpldx;     /*  - COOLING PLATE WIDTH                     */
    float coolpldy;     /*  - COOLING PLATE THICKNESS                 */
    float coolpldz;     /*  - COOLING PLATE LENGTH                    */
    float eclpldx;      /*  - COOLING END PLATES WIDTH                */
    float eclpldy;      /*  - COOLING END PLATES THICKNESS            */
    float eclpldz;      /*  - COOLING END PLATES LENGTH               */
    float cakehir;      /*  - CAKE HOLE INNER RADIUS                  */
    float cakehor;      /*  - CAKE HOLE OUTER RADIUS                  */
    float cakehwz;      /*  - HALF CAKE HOLE WIDTH IN Z               */
    float boxhx;        /*  - HALF BOX HOLE LENGTH IN X               */
    float boxhy;        /*  - HALF BOX HOLE LENGTH IN Y               */
    float boxhz;        /*  - HALF BOX HOLE LENGTH IN Z               */
    float eboxhx;       /*  - HALF END BOX HOLE LENGTH IN X           */
    float eboxhy;       /*  - HALF END BOX HOLE LENGTH IN Y           */
    float eboxhz;       /*  - HALF END BOX HOLE LENGTH IN Z           */
    float lboxhx;       /*  - HALF LONG BOX HOLE LENGTH IN X          */
    float lboxhy;       /*  - HALF LONG BOX HOLE LENGTH IN Y          */
    float lboxhz;       /*  - HALF LONG BOX HOLE LENGTH IN Z          */
};
  struct  ftpc_fssd   { 
    float system[2];    /*  - usage counter                           */
    float version;      /*  - GEOMETRY VERSION                        */
    float eringrmn;     /*  - ENDRING INNER RADIUS                    */
    float eringrmx;     /*  - ENDRING OUTER RADIUS                    */
    float eringdz;      /*  - HALF ENDRING THICKNESS (Z)              */
    float oeringdz;     /*  - OUTER ENDRING THICKNESS (Z)             */
    float erposz;       /*  - POSITION OF INNER AND OUTER RING IN END */
    float meringrm;     /*  - ENDRING MEDIUM OUTER RADIUS             */
    float meringdz;     /*  - MEDIUM ENDRING THICKNESS (Z)            */
    float erpolyrm;     /*  - END RING POLYGON MAX. RADIUS            */
    float trapr;        /*  - TRAPEZOID RADIUS                        */
    float polyr;        /*  - POLYGON RADIUS                          */
    float polydz;       /*  - HALF POLYGON LENGTH IN Z                */
    float polyir;       /*  - POLYGON INNER RADIUS                    */
    float polyor;       /*  - POLYGON OUTER RADIUS                    */
    float trapx1;       /*  - HALF SMALL LENGHT OF TRAPEZOID IN X     */
    float trapx2;       /*  - HALF LARGE LENGHT OF TRAPEZOID IN X     */
    float trapdy;       /*  - HALF HIGHT OF TRAPEZOID IN Y            */
    float trapdz;       /*  - HALF WIDTH OF TRAPEZOID IN Z            */
    float pgonpdz;      /*  - POSITION OF POLYGON IN SUPP. STRUC FSSM */
    float sbsdy;        /*  - POSITION FOR STABI. BLOCKS IN (Y)       */
};
