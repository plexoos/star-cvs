/* File detmsys.idl
** 
** Description: main detector description
** Author     : Pavel Nevski
** Created    : 1.00
** This file is automatically generated by AGI
** --------- DO NOT EDIT THIS FILE -----------
*/
  struct  cave_cave   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float rmin;         /* - INNER RADIUS                             */
    float rmax;         /* - OUTER RADIUS                             */
    float dz;           /* - HALF LENGTH                              */
};
  struct  pipe_pipg   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float beinnr;       /* - BERILLIUM SECTION INNER RADIUS           */
    float beoutr;       /* - BERILLIUM SECTION OUTER RADIUS           */
    float beleng;       /* - BERILLIUM SECTION HALF LENGTH            */
    float s1innr;       /* - FIRST STEEL SECTION INNER RADIUS         */
    float s1outr;       /* - FIRST STEEL SECTION OUTER RADIUS         */
    float s1leng;       /* - FIRST STEEL SECTION HALF LENGTH          */
    float s2innr;       /* - SECOND STEEL SECTION INNER RADIUS        */
    float s2outr;       /* - SECOND STEEL SECTION OUTER RADIUS        */
    float s2leng;       /* - SECOND STEEL SECTION HALF LENGTH         */
    float s3innr;       /* - TRANSITION STUB STEEL SECTION INNER RADI */
    float s3outr;       /* - TRANSITION STUB STEEL SECTION OUTER RADI */
    float s3leng;       /* - TRANSITION STUB STEEL SECTION HALF LENGT */
    float s4innr;       /* - LARGE OD STEEL SECTION INNER RADIUS      */
    float s4outr;       /* - LARGE OD STEEL SECTION OUTER RADIUS      */
    float s4leng;       /* - LARGE OD STEEL SECTION HALF LENGTH       */
    float flange1t;     /* - FLANGE SET HALF THICKNESS                */
    float flange1r;     /* - FLANGE OUTER RADIUS                      */
    float conelen;      /* - HALF LENGTH OF THE BELL REDUCER CONE     */
    float ribnum;       /* - NUMBER OF RIBS                           */
    float ribspa;       /* - SPACING BETWEEN RIBS                     */
    float ribthk;       /* - RIB HALF THICKNESS                       */
    float riboutr;      /* - RIB OUTER RADIUS                         */
    float ribcent;      /* - RIB SET CENTER                           */
};
  struct  svtt_svtg   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float nlayer;       /* - NUMBER OF SVT LAYERS                     */
    float rsizemin;     /* - STV INNERMOST RADIUS                     */
    float rsizemax;     /* - STV OUTERMOST RADIUS                     */
    float zsizemax;     /* - SVT+FTPC LENGTH                          */
    float angoff;       /* - ANGULAR OFFSET X1 FOR SLAYER 2 X2 FOR SL */
};
  struct  svtt_swca   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float length;       /* - LADDER LENGTH                            */
    float waferwid;     /* - WAFER WIDTH                              */
    float waferlen;     /* - WAFER LENGTH                             */
    float waferthk;     /* - WAFER THICKNESS                          */
    float rohathk;      /* - ROHA CELL PLUS GLUE THICKNESS            */
    float wafcarwi;     /* - WAFER CARRIER RAILS WIDTH                */
    float wafcarth;     /* - WAFER CARRIER THICKNESS                  */
    float wafergap;     /* - WIDTH OF THE INTER-WAFER GAP             */
    float drift;        /* - DRIFT DIRECTION                          */
    float strutlen;     /* - LEN (Z) OF STRUT BETWEEN WAF CAR. RAILS  */
};
  struct  svtt_ssup   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float cabthk;       /* - THICKNESS OF LAYER OF CABLES ON SUPPORT  */
    float hosrmn;       /* - INNER RADIUS OF WATER HOSES ON SUPPORT C */
    float hosrmx;       /* - OUTER RADIUS OF WATER HOSES ON SUPPORT C */
    float nhoses;       /* - NUMBER OF WATER HOSES                    */
    float wrpmythk;     /* - THICKNESS OF MYLAR WRAP AROUND CONE (GUE */
    float wrpalthk;     /* - THICKNESS OF AL ON MYLAR WRAP (GUESS)    */
    float grphthk;      /* - SUPPORT CONE THICKNESS                   */
    float cone1zmn;     /* - CONE Z MIN (PARTS 1,2,3,4 IN INCREASING  */
    float rodlen;       /* - LENGTH OF SUPPORT RODS                   */
    float roddist;      /* - DISTANCE OF SUPPORT ROD OD FROM BEAM AXI */
    float rodid;        /* - ID OF BE SUPPORT RODS                    */
    float rodod;        /* - OD OF BE SUPPORT RODS                    */
    float cone1idm;     /* - MINIMUM ID OF CONE 1                     */
    float cone3idm;     /* - MINIMUM ID OF CONE 3 (TBD)               */
    float cone4idm[2];  /* - MINIMUM ID OF CONE 4 (TBD)               */
    float cone3zmx;     /* - MAXIMUM Z OF CONE 3 (TBD)                */
    float cone4zmx;     /* - MAXIMUM Z OF CONE 4 (TBD)                */
    float brathk;       /* - THICKNESS OF AL BRACKETS                 */
    float erjthk;       /* - (Z) THICKNESS OF END RING JOINING BRACKE */
    float erjwid;       /* - (AZIMUTHAL) WIDTH OF END RING JOINING BR */
    float erjlen;       /* - (RADIAL) LENGTH OF END RING JOINING BRAC */
    float erjzdis;      /* - DIST FROM LADDER ENDS TO ERJ (GUESS)     */
    float erj1x;        /* - ERJ SCREW 1 X POSITION (RADIAL)          */
    float erj2x;        /* - ERJ SCREW 2 X POSITION                   */
    float erj2y;        /* - ERJ SCREW 2 Y POSITION                   */
    float erjrad;       /* - DISTANCE OF ERJ CENTER FROM BEAM AXIS    */
    float erjdia;       /* - ERJ SCREW DIAMETER                       */
};
  struct  svtt_serg   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float irngtrma;     /* - INNER END RING TUBE MAXIMUM RADIUS       */
    float irngprmi;     /* - INNER END RING POLYGON MINIMUM RADIUS    */
    float orngrmin;     /* - OUTER END RING MINIMUM RADIUS            */
    float orngrmax;     /* - OUTER END RING MAXIMUM RADIUS            */
    float endrngth;     /* - END RING THICKNESS                       */
    float endrngzm;     /* - MINIMUM Z FOR END RINGS                  */
};
  struct  svtt_swam   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float zmin;         /* - MINIMUM Z FOR POSITIONING WATER MANIFOLD */
    float len;          /* - WATER MANIFOLD FULL LENGTH               */
    float rmin;         /* - WATER MANIFOLD RMIN (NOT INCLUDING TRANS */
    float rmax;         /* - WATER MANIFOLD RMAX (NOT INCLUDING TRANS */
    float tbrdthk;      /* - TRANSITION BOARD THICKNESS               */
    float wallthk;      /* - WATER MANIFOLD WALL THICKNESS            */
};
  struct  svtt_selc   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float bethk;        /* - THICKNESS OF BERILLIUM WATER CHANNEL WAL */
    float watthk;       /* - THICKNESS OF WATER CHANNEL               */
    float beothk;       /* - THICKNESS OF BERRILLIA (BEO) SUBSTRA     */
    float dyethk;       /* - TO GIVE .11% OF A RADIATION LENGTH OF SI */
    float dyewid;       /* - WIDTH OF IC CHIPS (2 COVERS 0.3 OF AREA) */
    float dyespc;       /* - SPACE IC CHIPS                           */
    float elcawid;      /* - ELECTRONICS CARRIER WIDTH                */
    float agpdthk;      /* - THICKNESS OF AG-PD CONDUCTOR             */
    float glassthk;     /* - THICKNESS OF GLASS INSULATOR             */
    float cabthk;       /* - CU FOR CABLES OF .23% RAD LEN (WEIGHTED  */
    float cabwid;       /* - CABLE WIDTH                              */
};
  struct  svtt_svtl   { 
    float system[2];    /* - usage counter                            */
    float layer;        /* - LAYER NUMBER                             */
    float nladder;      /* - NUMBER OF LADDER                         */
    float nwafer;       /* - NUMBER OF WAFERS                         */
    float radius;       /* - LAYER RADIUS (.025 PUTS IT IN CENTER OF  */
};
  struct  tpce_tpcg   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - CURRENT VERSION                          */
    float rmin;         /* - TPC INNER RADIUS                         */
    float rmax;         /* - TPC OUTER RADIUS                         */
    float length;       /* - TPC FULL LENGTH                          */
    float wheelir;      /* - SUPPORT WHEEL INNER RADIUS               */
    float wheelor;      /* - SUPPORT WHEEL OUTER RADIUS               */
    float wheelthk;     /* - SUPPORT WHEEL LENGTH                     */
    float sengasor;     /* - TPC SENSITIVE GAS OUTER RADIUS           */
    float tpeathk;      /* - ENDCAP MWC + SECTOR THICKNESS            */
    float membthk;      /* - CENTRAL MEMBRANE THICKNESS               */
    float tiaddr;       /* - INNER ADHESIVE LAYER THICKNESS           */
    float tinxdr;       /* - INNER NOMEX STRUCTURE THICKNESS          */
    float tikadr;       /* - INNER KAPTON LAYER THICKNESS             */
    float tialdr;       /* - INNER ALUMINUM LAYER THICKNESS           */
    float tocsdr;       /* - OUTER COPPER THICKNESS                   */
    float tokadr;       /* - OUTER KAPTON THICKNESS                   */
    float tonxdr;       /* - OUTER NOMEX THICKNESS                    */
    float toaddr;       /* - OUTER ADHESIVE THICKNESS                 */
    float toigdr;       /* - OUTER ISOLATING GAS THICKNESS            */
    float toaldr;       /* - OUTER ALUMINUM THICKNESS                 */
    float tohadr;       /* - OUTER HONEYUCOMB AL THICKNESS            */
    float mwcread;      /* - MWC READOUT FLAG                         */
};
  struct  tpce_tprs   { 
    float system[2];    /* - usage counter                            */
    float sec;          /* - SECTOR NUMBER: 1 FOR INNER, 2 FOR OUTER  */
    float n;            /* - NUMBER OF PADROWS IN THE SECTOR          */
    float pitch;        /* - TPC PADROW PITCH WIDTH                   */
    float width;        /* - TPC PADROW THICKNESS                     */
    float super;        /* - NUMBER OF PADRAWS IN A SUPERPADROW       */
    float rpads[40];    /* - TPC PADROW RADII                         */
    float npads[40];    /* - NUMBER OF PADS IN ROW                    */
};
  struct  tpce_tecw   { 
    float system[2];    /* - usage counter                            */
    float sec;          /* - SECTOR NUMBER: 1 FOR INNER, 2 FOR OUTER  */
    float gaprad;       /* - AIR IN SUPPORT WHEEL - CENTER RADIUS     */
    float gapheit;      /* - AIR IN SUPPORT WHEEL - HEIGHT (DR)       */
    float gapwidi;      /* - AIR IN SUPPORT WHEEL - INNER WIDTH       */
    float gapwido;      /* - AIR IN SUPPORT WHEEL - OUTER WIDTH       */
    float inwidth;      /* - SECTOR WIDTH AT INNER RADIUS             */
    float ouwidth;      /* - SECTOR WIDTH AT OUTER RADIUS             */
    float height;       /* - SECTOR RADIAL HEIGHT                     */
    float ppdepth;      /* - PADPLANE THICKNESS (BOTH AL AND PCB)     */
    float asdepth;      /* - DEPTH OF OPENINGS IN ALUMINUM STRUCTURE  */
    float ggdepth;      /* - MWC GAP FROM GATED GRID TO PAD PLANE     */
    float mwcdepth;     /* - SENSITIVE MWC GAS GAP FULL THICKNESS     */
    float boundary;     /* - AL FRAME - BOUNDARY WIDTH                */
    float rcenter;      /* - SECTOR CENTER RADIUS (SET BY PRECISION H */
    float mwcinn;       /* - MWC SENSITIVE REGION INNER SIZE          */
    float mwcout;       /* - MWC SENSITIVE REGION OUTER SIZE          */
    float mwchei;       /* - MWC SENSITIVE REGION HEIGHT (RADIAL)     */
    float n;            /* - NUMBER OF AIR GAPS IN AL                 */
    float nex;          /* - NUMBER OF EXTRA ALUMINUM SUPPORT PIECES  */
    float z[8];         /* - POSITIONS OF AIR GAPS                    */
    float dz[8];        /* - SIZE OF AIR GAPS                         */
    float xex[5];       /* - X POSITIONS OF EXTRA ALUMINUM            */
    float zex[5];       /* - Z POSITIONS OF EXTRA ALUMINUM            */
    float dxex[5];      /* - X-THICKNESS OF EXTRA ALUMINUM            */
    float dzex[5];      /* - Z-THICKNESS OF EXTRA ALUMINUM            */
};
  struct  ftpc_ftpg   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float rinnermo;     /* - INNERMOST RADIUS OF ENVELOPE             */
    float routermo;     /* - OUTERMOST RADIUS OF ENVELOPE             */
    float rgasout;      /* - OUTER RADIUS OF THE GAS-VOLUME           */
    float zstart;       /* - DISTANCE FROM THE INTERACTION POINT      */
    float totlen;       /* - OVERALL LENGTH                           */
    float laylen;       /* - THICKNESS OF THE SENSITIVE LAYER         */
    float hitlay;       /* - # OF PADROWS IN ONE FTPC : 10            */
    float drinalla[2];  /* - THICKNESS OF INNER AL-LAYER OF INNER TUB */
    float drinisol;     /* - THICKNESS OF PLASTIC INSULATION OF INNER */
    float dzkapton;     /* - THICKNESS OF A DOUBLE KAPTON-WINDOWS     */
    float drifr;        /* - THICKNESS (R) OF INNER FLANGE RING       */
    float dzifr;        /* - THICKNESS (Z) OF INNER FLANGE RING       */
};
  struct  ftpc_ffcc   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float stileng;      /* - LENTH OF THE CERAMIC-HOLDERS             */
    float stidia;       /* - DIAMETER OF CERAMIC-HOLDERS              */
    float stirpos;      /* - R-POS. OF CERAMIC-HOLDERS                */
    float rithick;      /* - THICKNESS OF THE FC RINGS                */
    float ridr;         /* - WIDTH (R) IF THE FC RINGS                */
    float rigap;        /* - GAP BETWEEN TWO FC RINGS                 */
    float barleng;      /* - LENGTH OF STABILIZER BAR FOR FC          */
    float barwidt;      /* - WIDTH OF STABILIZER BAR FOR FC           */
    float barthik;      /* - THICKNESS OF STABILIZER BAR FOR FC       */
};
  struct  ftpc_frbd   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float phi1;         /* - LOWER BOUND OF PHI                       */
    float phi2;         /* - UPPER BOUND OF PHI                       */
    float modleng;      /* - LENGTH (Z) OF THE MODULE                 */
    float glassdr;      /* - GLASS THICKNESS                          */
    float aldr;         /* - AL LAYER THICKNESS                       */
    float pcbdr;        /* - PC BOARD THICKNESS                       */
    float elektrdr;     /* - ELECTRONICS THICKNESS                    */
    float cooldr;       /* - COOLING PLATE THICKNESS                  */
    float phibardr;     /* - HEIGHT (R) OF THE PHIBAR                 */
    float phibarth;     /* - THICKNESS (Z) OF THE PHIBAR              */
    float sidebard;     /* - SIDEBAR THICKNESS                        */
    float sidebarw;     /* - SIDEBAR WIDTH                            */
};
  struct  ftpc_fssd   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float eringrma;     /* - ENDRING OUTER RADIUS                     */
    float eringth;      /* - ENDRING THICKNESS (Z)                    */
    float eringwth;     /* - WALL THICKNESS OF THE ENDRING            */
    float dringdr;      /* - DISTANCE RING THICKNESS (R)              */
    float dringwi;      /* - DISTANCE RING WIDTH (Z)                  */
    float iringrma;     /* - INTERSECTION RING OUTER RADIUS           */
    float iringth;      /* - INTERSECTION RING THICKNESS (Z)          */
    float fringdr;      /* - FLANGE RING THICKNESS (R)                */
    float fringwi;      /* - FLANGE RING WIDTH (Z)                    */
    float sbarwi;       /* - SIDE BAR WIDTH (PHI)                     */
    float sbarth;       /* - SIDE BAR THICKNESS (R)                   */
    float splale;       /* - SIDE PLATE LENGTH (Z)                    */
    float splawi;       /* - SIDE PLATE WIDTH (PHI)                   */
    float splath;       /* - SIDE PLATE THICKNESS (R)                 */
    float spladia;      /* - SIDE PLATE HOLE DIAMETER                 */
    float tbarwi;       /* - TOP BAR WIDTH (PHI)                      */
    float tbarhe;       /* - TOP BAR HEIGHT (R)                       */
    float tplawi;       /* - TOP PLATE WIDTH (PHI)                    */
    float tplath;       /* - TOP PLATE THICKNESS (R)                  */
};
  struct  vpdd_vpdg   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float rmin;         /* - VPD INNER RADIUS                         */
    float rmax;         /* - VPD OUTER RADIUS                         */
    float length;       /* - FULL VPD ASSEMBLY LENGTH ALONG THE BEAM  */
    float position;     /* - Z POSITION OF VPD ALONG BEAM AXIS        */
    float drlayer[2];   /* - LAYER RADIAL WIDTH                       */
    float numpmt[2];    /* - NUMBER OF PMT IN LAYER                   */
    float pmtradi;      /* - PMT AND DETECTOR RADIUS                  */
    float pmtwall;      /* - PMT WALL THICKNESS                       */
    float pmtleng;      /* - PMT TUBE LENGTH                          */
    float eleleng;      /* - ELECTRONICS MOUNT LENGTH                 */
    float convthk;      /* - CONVERTER LAYER THICKNESS                */
    float radithk;      /* - RADIATOR LAYER THICKNESS                 */
    float tubethk;      /* - PIECE OF BEAM PIPE THICKNESS (IF NEEDED) */
    float suppthk;      /* - SUPPORT RINGS THICKNESS                  */
    float suppdist;     /* - DISTANCE BETWEEN SUPPORTING RINGS        */
};
  struct  btof_btog   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float rmin;         /* - MINIMUM CTB/TOF SYSTEM RADIUS            */
    float rmax;         /* - MAXIMUM CTB/TOF SYSTEM RADIUS            */
    float dz;           /* - CTB/TOF TUBE HALF LENGTH                 */
    float ctbtrue;      /* - SET TO ?10? TO GENERATE TOF GEOMETRY, ?1 */
};
  struct  btof_tray   { 
    float system[2];    /* - usage counter                            */
    float height;       /* - TRAY HEIGHT                              */
    float width;        /* - FULL TRAY WIDTH                          */
    float length;       /* - FULL TRAY LEHGTH                         */
    float wallthk;      /* - TRAY WALL THICKNESS                      */
    float supfullh;     /* - SUPPORT HEIGHT (RADIAL)                  */
    float supfullw;     /* - SUPPORT FULL WIDTH WITH ARMS             */
    float supbaset;     /* - SUPPORT BASE THICKNESS, 0.32+0.05##      */
    float supbasew;     /* - SUPPORT BASE WIDTH                       */
    float suparmt;      /* - SUPPORT ARM THICKNESS                    */
    float cooloutr;     /* - COOLING CHANNEL OUTER RADIUS             */
    float coolinnr;     /* - COOLING CHANNEL INNER RADIUS             */
};
  struct  btof_ctbb   { 
    float system[2];    /* - usage counter                            */
    float slab1len;     /* - FIRST SLAB (B) LENGTH                    */
    float slab2len;     /* - SECOND SLAB (A)LENGTH                    */
    float slab1x;       /* - FIRST SLAB (B) X POSITION                */
    float slab2x;       /* - SECOND SLAB (A) X POSITION               */
    float slabthck;     /* - SCINTILLATOR SLAB THICKNESSES            */
    float slabwid;      /* - SCINTILLATOR SLAB WIDTH                  */
    float convlen;      /* - OPTICAL CONVERTER LENGTH                 */
    float convwidm;     /* - OPTICAL CONVERTOR MIN WIDTH              */
    float convthck;     /* - OPTICAL CONVERTOR THICKNESS              */
    float pmtlen;       /* - PMT LENGTH                               */
    float pmtmaxr;      /* - PMT MAX RADIUS                           */
    float pmtminr;      /* - PMT MIN RADIUS                           */
    float baselen;      /* - BASE LENGTH                              */
    float basemaxr;     /* - BASE MAX RADIUS                          */
    float baseminr;     /* - BASE MIN RADIUS                          */
    float electhck;     /* - READOUT ELECTRONICS THICKNESS            */
    float elecwid;      /* - READOUT ELECTRONICS WIDTH                */
    float eleclen;      /* - READOUT ELECTRONICS LENGTH               */
    float elecx;        /* - READOUT ELECTRONICS X POSITION           */
    float elecz;        /* - READOUT ELECTRONICS Z POSITION           */
};
  struct  btof_toff   { 
    float system[2];    /* - usage counter                            */
    float slab1len;     /* - FIRST SLAB LENGTH                        */
    float slab2len;     /* - SECOND SLAB LENGTH                       */
    float slab3len;     /* - NTH SLAB LENGTH                          */
    float slab4len;     /* - NTH SLAB LENGTH                          */
    float slab5len;     /* - NTH SLAB LENGTH                          */
    float slab6len;     /* - NTH SLAB LENGTH                          */
    float slab7len;     /* - NTH SLAB LENGTH                          */
    float slab8len;     /* - NTH SLAB LENGTH                          */
    float slab9len;     /* - NTH SLAB LENGTH                          */
    float slab0len;     /* - 10TH SLAB LENGTH                         */
    float slab1x;       /* - FIRST SLAB X POSITION                    */
    float slab2x;       /* - SECOND SLAB X POSITION                   */
    float slab1z;       /* - FIRST SLAB Z POSITION                    */
    float slab2z;       /* - SECOND SLAB Z POSITION                   */
    float slab3z;       /* - NTH SLAB Z POSITION                      */
    float slab4z;       /* - NTH SLAB Z POSITION                      */
    float slab5z;       /* - NTH SLAB Z POSITION                      */
    float slab6z;       /* - NTH SLAB Z POSITION                      */
    float slab7z;       /* - NTH SLAB Z POSITION                      */
    float slab8z;       /* - NTH SLAB Z POSITION                      */
    float slab9z;       /* - NTH SLAB Z POSITION                      */
    float slab10z;      /* - NTH SLAB Z POSITION                      */
    float slabthck;     /* - SCINTILLATOR SLAB THICKNESSES            */
    float slabwid;      /* - SCINTILLATOR SLAB WIDTH                  */
    float convlen;      /* - OPTICAL CONVERTER LENGTH                 */
    float convwidm;     /* - OPTICAL CONVERTOR MIN WIDTH              */
    float convthck;     /* - OPTICAL CONVERTOR THICKNESS              */
    float pmtlen;       /* - PMT LENGTH                               */
    float pmtmaxr;      /* - PMT MAX RADIUS                           */
    float pmtminr;      /* - PMT MIN RADIUS                           */
    float baselen;      /* - BASE LENGTH                              */
    float basemaxr;     /* - BASE MAX RADIUS                          */
    float baseminr;     /* - BASE MIN RADIUS                          */
    float electhck;     /* - READOUT ELECTRONICS THICKNESS            */
    float elecwid;      /* - READOUT ELECTRONICS WIDTH                */
    float eleclen;      /* - READOUT ELECTRONICS LENGTH               */
    float elecx;        /* - READOUT ELECTRONICS X POSITION           */
    float elecz;        /* - READOUT ELECTRONICS Z POSITION           */
};
  struct  calb_calg   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float rmin;         /* - INNER RADIUS                             */
    float rmax;         /* - OUTER RADIUS                             */
    float rcut;         /* -                                          */
    float hleng;        /* - HALF OUTER LENGTH                        */
    float etacut;       /* - CALORIMETER RAPIDITY CUT                 */
    float crackwd;      /* - HALF WIDTH OF THE CRACK BETWEEN MODULES  */
    float frontthk;     /* - FRONT PLATE HALF THICKNESS               */
    float backthk;      /* - MODULE BACK PLATE HALF THICKNES          */
    float scintthk;     /* - ACTIVE SCINTILLATOR PLATE HALF THICKNESS */
    float absorthk;     /* - ABSORBER PLATE THICKNESS                 */
    float smcovthk;     /* - SHOWER MAX FRONT/BACK COVER HALF THICKNE */
    float smgasthk;     /* - SMD GAS VOLUME HALF THICKNESS            */
    float smelethk;     /* - SMD ELECTRONICS AND SOURCES HALF THICKNE */
    float g10lathk;     /* - G10 LAYER HALF THICKNESS (NOT USED BELOW */
    float nsuper;       /* - NUMBER OF READOUT SUPERLAYER             */
    float nsmd;         /* - SMD POSITIOND AFTER THIS SUPERLAYER      */
    float nsublay[5];   /* - NUMBER OF LAYERS IN A SUPERLAYER         */
};
  struct  ecal_emcg   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float zorig;        /* - CALORIMETER ORIGIN IN Z                  */
    float zend;         /* - CALORIMETER END IN Z                     */
    float etamin;       /* - UPPER FEDUCIAL ETA CUT                   */
    float etamax;       /* - LOWER FEDUCIAL ETA CUT                   */
    float nsupsec;      /* - NUMBER OF AZIMUTHAL SUPERSECTORS         */
    float nsector;      /* - NUMBER OF AZIMUTAL SECTORS (PHI GRANULAR */
    float nsection;     /* - NUMBER OF READOUT SECTIONS               */
    float nslices;      /* - NUMBER OF PHI SLICES IN SUPERSECTOR      */
    float front;        /* - THICKNESS OF THE FRONT AL PLATES (CALO A */
    float cell;         /* - CELL FULL WIDTH IN Z                     */
    float gten;         /* - G10 PLATE WIDTH                          */
    float scint;        /* - SCI LAYER THICKNESS                      */
    float plate;        /* - LEAD PLATE THICKNESS                     */
    float wall;         /* - HALF THICKNESS OF ALUMINIUM WALLS        */
    float rmshift;      /* - RADIAL SHIFT OF MODULE                   */
    float smshift;      /* - RADIAL SHIFT OF STEEL SUPPORT WALLS      */
    float gapplt;       /* - HALF OF THE INTER-PLATE GAP IN PHI       */
    float gapcel;       /* - HALF OF THE RADIAL INTER-CELL GAP        */
    float gapmax;       /* - SPACE RESERVED FOR SMD DETECTOR          */
};
  struct  ecal_eetr   { 
    float system[2];    /* - usage counter                            */
    float etagr;        /* - MIN ETA GRANULARITY                      */
    float phigr;        /* - PHI GRANULARITY (RADIANS)                */
    float neta;         /* - ETA GRANULARITY                          */
    float nphi;         /* - PHI GRANULARITY                          */
    float etarmn;       /* - MIN READOUT RAPIDITY                     */
    float etarmx;       /* - MAX READOUT RAPIDITY                     */
    float eta[12];      /* - ETA GRANULARITY                          */
};
  struct  ecal_esec   { 
    float system[2];    /* - usage counter                            */
    float isect;        /* - SECTION NUMBER                           */
    float plateb;       /* - BACK PLATE, SS                           */
    float nlayer;       /* - NUMBER OF SCI LAYERS ALONG Z             */
};
  struct  ecal_emxg   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - GEOMETRY VERSION                         */
    float zsmax;        /* - SHOWER MAX START                         */
    float gtenm;        /* - G10 LAYER WIDTH                          */
    float salup;        /* - ALUMINIUM PLATE WIDTH                    */
    float riblg;        /* - ALUMINIUM RIB LENGTH                     */
    float ribwd;        /* - ALUMINIUM RIB WIDTH                      */
    float rstep;        /* - RIB STEP                                 */
};
  struct  ecal_msec   { 
    float system[2];    /* - usage counter                            */
    float jsect;        /* - SECTION NUMBER                           */
    float swidth;       /* - WIDTH OF SMD SECTION ALONG Z             */
    float glayer;       /* - FRONT PLATE, G10                         */
    float mat;          /* - SECTION MATERIAL                         */
    float med;          /* - SECTION MEDIUM                           */
};
  struct  magp_magg   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - VERSION NUMBER                           */
    float rmax;         /* - OUTER RADIUS OF THE MAGNET SYSTEM        */
    float length;       /* - MAGNET SYSTEM FULL LENGTH                */
    float test;         /* - GEOMETRY TYPE: 0-STANDARD, 1-TEST        */
};
  struct  magp_mbar   { 
    float system[2];    /* - usage counter                            */
    float coilrmn;      /* - BARREL COIL INNER RADIUS (BARREL MINIMUM */
    float coilrmx;      /* - BARREL COIL OUTER RADIUS                 */
    float coillen;      /* - BARREL COIL FULL LENGTH                  */
    float retyrmn;      /* - RETURN YOKE MINIMUM RADIUS               */
    float retylen;      /* - RETURN YOKE FULL LENGTH                  */
    float barwidin;     /* - RETURN YOKE BARE INNER WIDTH             */
    float barwidou;     /* - RETURN YOKE BARE OUTER WIDTH             */
    float barheigh;     /* - RETURN YOKE BARE HEIGHT                  */
    float ringrmn;      /* - RETURN RING MINIMUM RADIUS               */
    float ncoil;        /* - TOTAL NUMBER OF BARREL COILS             */
    float zcoil[6];     /* - COIL POSITION                            */
    float dzcoil[6];    /* - COIL WIDTH                               */
};
  struct  magp_mend   { 
    float system[2];    /* - usage counter                            */
    float polermn;      /* - POLE TIP INNER RADIUS (ENCAP MINIMUM)    */
    float polez;        /* - POLE TIP NOMINAL POSITION                */
    float polermx;      /* - POLE TIP OUTER RADIUS                    */
    float tcoilrmn;     /* - POLE TIP TRIM COIL INNER RADIUS          */
    float tcoilrmx;     /* - POLE TIP TRIM COIL OUTER RADIUS          */
    float polecavr;     /* - POLE TIP CAVITY OUTER RADIUS             */
    float polecavd;     /* - POLE TIP CAVITY DEPTH                    */
    float tcoildz;      /* - FULL WIDTH OF POLE TIP TRIM COIL         */
    float etacut;       /* - ETA LIMITS FOR THE POLE                  */
};
  struct  mfld_mflg   { 
    float system[2];    /* - usage counter                            */
    float version;      /* - FIELD VERSION                            */
    float bfield;       /* - FIELD VALUE                              */
    float rmaxinn;      /* - INNER FIELD VOLUME RADIUS                */
    float zmaxinn;      /* - INNER FIELD VOLUME LANGTH                */
};
