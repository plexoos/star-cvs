/*  dst_dedx.idl                   */
/*  Table:  dst_dedx               */

/*  This table contains event reconstruction information about the
 *  dE/dx for charged particle trajectories (tracks) listed in the
 *  dst_track table(s).  It is filled with information for one event
 *  with one track/detector segment and/or one dE/dx averaging method entry 
 *  per table row.  It also includes the number of space points used.
 *  The following cases can be accommodated:
 */
/*    (1)  Separate contributions from SVT, SSD, FTPC and/or TPC space 
 *         points to an individual track-
 *         The separate dE/dx values are listed on separate rows which refer
 *         to the same track via 'id_track' and which are distinguished by
 *         the value of 'det_id'.
 */
/*    (2)  Different dE/dx averaging procedures (e.g. truncated mean, 
 *         ensemble average, most probable value, Landau fit, etc.) for
 *         some or all tracks-
 *         This can be handled by filling additional rows and distinguishing
 *         the averaging procedures with the value of 'method'.
 *    (3)  Additional track tables based on alternate track finding/fitting
 *         algorithms (e.g. 3D helix, analytic E-loss, Kalman, etc.)-
 *         For additional space point-track assignments additional instances
 *         of the dst_dedx table can be filled.
 */
/*  The rows in dst_dedx refer to the track table instance corresponding to
 *  the fitted space points from the tracking detectors; i.e. dst_dedx does
 *  not refer to a track table instance in which the primary vertex was
 *  included in the fitting.
 *
 *  For variable 'method' see the definition
 *  file  $STAR/pams/global/inc/StDedxDefinitions.h
 *
 *       
 *       Definition of variable dedx[2] for each method:
 *            mean / sigma of mean
 *
 */

 struct dst_dedx   {
  float  dedx[2];    /* dE/dx summary info; mean,sigma of mean           */
  long   id_track;   /* Foreign key to dst_track                         */
  long   det_id;     /* Det ID-SVT,TPC,FTPC, use StDetectorDefinitions.h */
  long   method;     /* dE/dx calculation method (see  comments above)   */
  long   ndedx;      /* number of points used in dE/dx calcu. + 100*((int)TrackLength) for fit */
 } ;
/*  Last mod. for dst_dedx:   $Date: 2000/12/18 17:15:39 $ */

