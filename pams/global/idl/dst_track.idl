/*  dst_track.idl              */
/*  Table: dst_track           */

/* November 99. Methods variable defined
 *
 * September 28, 1999. Changed x0,y0 to r0,phi0 variables (Spiros)
 *
 * August 20, 1999 Lanny
 *
 *  This table contains event reconstruction information about the
 *  charged particle trajectories (tracks) generated by each tracking detector;
 *  TPC, SVT, SSD, and the FTPC-East, West, which have been assigned the
 *  status of global tracks by global tracking analysis.  It is filled with 
 *  information for one event with one track per table row.  Track
 *  parameters are given in the global STAR coordinate system at various
 *  positions depending on the instantiation of this table.
 *
 *  Multiple instances of this table may be saved in the DST output.
 *  This may, for example, include different track finding methods,
 *  different track fitting methods, fits with or without the primary
 *  vertex constraint, etc.  Refer to the 'method' variable described
 *  below.  Also see the implementation plan for DST production at the URL: 
 *  http://www.star.bnl.gov/??? (remains to be defined).
 *  
 *  Description of selected variables:
 *  ----------------------------------
 *       id              Primary key; unique identification for each
 *                       collection of hits from tracking detectors (TPC,
 *                       SVT, SSD, FTPC East and West) which constitutes
 *                       a global track for a given track finding method.
 *                       Different table instances corresponding to
 *                       different track fitting methods (e.g. with or
 *                       without primary vertex constraint, 2-step helix
 *                       fit, full 3D helix fit, Kalman, etc.) must always
 *                       use the exact same primary key values for each track.
 * 
 *                       Primary key values may be assigned independently 
 *                       for track table instances corresponding to alternate
 *                       track finding methods (see below) which may have
 *                       different hit-to-track assignments.
 * 
 *       iflag           See WWW document at:  STAR Home Page -> Groups ->
 *                       All -> "Translation of dst_track.iflag declarations"
 *                       or explicitly at the URL:  www.star.bnl.gov/STAR/
 *                       html/all_l/html/dst_track_flags.html
 *       
 *       det_id          Indicates which detector(s) contributed space
 *                       points to the track using the detector ID and
 *                       global track definitions in
 *                       $STAR/pams/global/inc/StDetectorDefinitions.h
 *
 *       method          Track finding and track fitting methods in a
 *                       packed format. This is defined in 
 *                       $STAR/pams/global/inc/StTrackDefinitions.h
 *                       This is used  to indicate the track finding 
 *                       methods, pass numbers 
 *                       and track fitting methods used to 
 *                       generate the global tracks:
 *                       method=finder+10*quality+100*fitting method+
 *                              1000(if vertex constraint was used in fit).
 *
 *       pid             Geant particle ID number for mass hypothesis
 *                       used in the tracking.  This is included for the
 *                       Kalman filter/fitter method.  The Geant PID code
 *                       is used here, rather than the Particle Data
 *                       Group's code, in order to include deuterons,
 *                       tritons, alphas.
 *
 *    id_start_vertex    This is always initialized to zero by global and by
 *                       FTPC tracking and FTPC DST filler modules.  It is
 *                       only filled by the primary vertex finder, evr, to
 *                       indicate the following:
 *                          (1) whether the track was used in the final
 *                              iteration of the primary vertex fit
 *                          (2) whether the track passes the final 3D DCA
 *                              to primary vertex cut, based on the parameter
 *                              evrpar(1).vcut; such tracks are considered
 *                              first pass primary track candidates.
 *                       This variable is packed according to:
 *                          = {0, if trk not used in final primary vertex fit;
 *                             1, if trk was used in final primary vertex fit}
 *                           +{10*dst_vertex(final prim vrtx row).id, if track
 *                             passes final 3D DCA primary vertex cut}
 *
 *       map[2]          Packed 64-bits used to indicate either the
 *                       continuity or gaps in tracks as they cross different
 *                       active elements of the SVT, SSD, TPC and FTPC.  Also
 *                       indicates if track extrapolates to other detectors
 *                       (MWC, CTB, TOF, RICH, EMC barrel, EMC end cap) and
 *                       if a vertex constraint was used or not.
 *
 *              Bit assignments for tracking detector 
 *              elements for SVT, SSD, TPC and FTPCs:
 *              -------------------------------------
 *
 *                   The use of the bit map depends on the particular
 *                   instantiation of this table.  Setting a bit to 1
 *                   for a tracking detector element could indicate:
 *                        (1) one or more hits on this detector element
 *                            were assigned to the track by the track finding
 *                            method, or
 *                        (2) one or more hits on this detector element
 *                            were used by the track fitting method, i.e.
 *                            these hits passed any outlier removal cuts.
 *                   Setting a bit value to 0 indicates that either no hit
 *                   from this detector element was assigned to this track,
 *                   or no hit from this detector element was used in the fit.
 *
 *                   An example of the first case would be the initial helix
 *                   fit to global tracks currently instantiated in table
 *                   'globtrk' in the DST production chain.  An example of
 *                   the second case would be the tracks fitted with the
 *                   primary vertex constraint which is instantiated in
 *                   table 'primtrk'.
 *
 *              SVT and/or SSD and/or TPC Tracks
 *              --------------------------------
 *              map[0]   Bit number  Quantity
 *              ------   ----------  --------
 *                           0       Primary Vertex used(1) or not(0);
 *                                   also used to indicate that a secondary
 *                                   vertex constraint was used for special
 *                                   track fitting methods for decay vertices
 *                                   (see method variable).
 *                          1-6      SVT 3 superlayers, inner/outer
 *                           7       SSD 4th layer
 *                          8-31     TPC, first 24 padrows
 *
 *              map[1]   Bit number  Quantity
 *              ------   ----------  --------
 *                          0-20     TPC, remaining 21 padrows
 *                          21       Track extrapolates to MWC (no=0, yes=1)
 *                          22       Track extrapolates to CTB (no=0, yes=1)
 *                          23       Track extrapolates to TOF (no=0, yes=1)
 *                          24       Track extrapolates to RCH (no=0, yes=1)
 *                          25       Track extrapolates to EMCB (no=0, yes=1)
 *                          26       Track extrapolates to EMCEC (no=0, yes=1)
 *                         27-29     reserved for future use
 *                          30       Turn around flag, some elements used >1
 *                          31       Format interpreter; (SVT/SSD/TPC=0,FTPC=1)
 *
 *              FTPC Tracks
 *              -----------
 *              map[0]   Bit number  Quantity
 *              ------   ----------  --------
 *                           0       Primary Vertex used or not
 *                          1-10     FTPC East pad rows, increasing away from
 *                                   STAR coord. sys. origin at (0,0,0)
 *                          11-20    FTPC West pad rows, increasing away from
 *                                   STAR coord. sys. origin at (0,0,0)
 *                          21-31    not used; for future use
 *
 *              map[1]   Bit number  Quantity
 *              ------   ----------  --------
 *                          0-26     not used; for future use
 *                         27-29     reserved for future use
 *                          30       Turn around flag, some elements used >1
 *                          31       Format interpreter; (SVT/SSD/TPC=0,FTPC=1)
 *
 *       curvature       In general the track curvature for STAR is redundant
 *                       with Bz and charge*invpt.  However, for No B field
 *                       tracking the curvature is what the track fitter best
 *                       determines; Bz, invpt and charge are not determined.
 *                       For B field on and high pT tracking the curvature is
 *                       again a useful quantity.
 *
 *       covar[15]       Track fitting covariance matrix.  Kalman filter
 *                       code definition adopted here, where:
 *
 *                                                 Units
 *                       ______|________________|____________
 *                       phi*R |  1  2  3  4  5 |  deg*cm
 *                        z0   |  2  6  7  8  9 |    cm
 *                       tanl  |  3  7 10 11 12 |    1         covar(i)
 *                        psi  |  4  8 11 13 14 |   deg
 *                       q/pt  |  5  9 12 14 15 | e*1/(GeV/c)
 *                       -----------------------------------
 *
 *                       and where phi  = atan2(y0,x0)*(180 deg/pi)
 *                                 R    = sqrt(x0*x0 + y0*y0)
 *                                 q/pt = icharge*invpt; (This is what the 
 *                                        radius of curvature actually
 *                                        determines)
 *
 *       chisq[2]        chi-square per degree of freedom where the
 *                       deg of freedom = (# pts used - # track params fit).
 *                       This may be the chi-square for the x-y circle fit
 *                       and the path-z linear fit.  Or this may be the full
 *                       3D fit chi-square and the probability of chi-square. 
 */

 struct dst_track  {
  short      id;               /* Primary key (see comments)             */
  short      iflag;            /* bitmask quality info. (see comments)   */
  short      det_id;           /* Detector id information                */
  short      method;           /* Track finding/fitting method, packed   */
  short      pid;              /* Geant particle ID for assumed mass     */
  short      n_point;          /* number of points assigned to track,    */
                               /* SVT, TPC, FTPC component #s are packed */
  short      n_max_point;      /* maximum number of points possible,     */
                               /* SVT, TPC, FTPC component #s are packed */
  short      n_fit_point;      /* number of points used in fit,          */
                               /* SVT, TPC, FTPC component #s are packed */
  short      icharge;          /* Particle charge in units of |e|        */
  short      id_start_vertex;  /* Packed variable for primary vertex     */
                               /* final fit and primary track candidates */
  unsigned long map[2];        /* Packed track/detector occupancy map and*/
                               /* extrap. info. (see preceeding comments)*/
  float      r0;               /* radius at start (cm)                   */
  float      phi0;             /* azimuthal angle at start (deg)         */
  float      z0;               /* z-coord. at start (cm)                 */
  float      psi;              /* azimuthal angle of pT vector (deg)     */
  float      tanl;             /* tan(dip) =pz/pt at start               */
  float      invpt;            /* 1/pt at start (GeV/c)^(-1)             */
  float      curvature;        /* Track curvature (1/cm)                 */
  float      covar[15];        /* full covariance matrix                 */
  float      chisq[2];         /* Chi-square per degree of freedom       */
  float      x_first[3];       /* coord. of first measured point (cm)    */
  float      x_last[3];        /* coord. of last measured point (cm)     */
  float      length;           /* Path length of particle trajectory     */
                               /* from first to last point (cm)          */
  float      impact;           /* impact parameter based on 3D DCA from  */
                               /* primary vertex (cm)                    */
 } ;
/*  Last mod. for dst_track:   $Date: 1999/11/15 19:26:45 $ */



